{
	"id": "6bcc89dbf78c947ce99e29c890bf53c3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"ChaiToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract ChaiToken is ERC20, Ownable {\r\n    uint256 private _initialSupply = 100000000 * 10**decimals(); // 100 million tokens\r\n    uint256 public maxTxAmount = _initialSupply;\r\n    uint256 public cooldownTime = 1 minutes;\r\n    uint256 public taxFees = 5;\r\n    uint256 public SlippageFees = 2; \r\n\r\n    mapping(address=>bool) private _blacklist;\r\n    mapping(address=>bool) private _whitelist;\r\n    mapping(address=>uint256) private _lastTxTime; \r\n    \r\n    bool private _whiteListingEnabled = false;\r\n    bool private _TaxEnabled = false;\r\n\r\n    address public taxAddress; \r\n\r\n    constructor(address initialOwner, address _taxAddress)\r\n        ERC20(\"ChaiToken\", \"Chai\")\r\n        Ownable(initialOwner)\r\n    {\r\n        _mint(initialOwner, _initialSupply); // Mint initial supply to the initial owner\r\n        _whitelist[initialOwner] = true;\r\n        taxAddress = _taxAddress;\r\n    }\r\n\r\n    function renounceOwnership() public override onlyOwner {\r\n        super.renounceOwnership();\r\n    }\r\n\r\n    function addToBlacklist(address account) external onlyOwner\r\n    {\r\n        _blacklist[account] = true;\r\n        _whitelist[account] = false;\r\n    }\r\n    function removeFromBlacklist(address account) external onlyOwner\r\n    {\r\n        _blacklist[account] = false;\r\n    }\r\n    function isBlacklisted(address account) external view returns(bool)  \r\n    {\r\n        return _blacklist[account];\r\n    }\r\n\r\n    function enableWhiteListing() external onlyOwner\r\n    {\r\n        _whiteListingEnabled = true;\r\n    }\r\n\r\n    function disableWhiteListing() external onlyOwner\r\n    {\r\n        _whiteListingEnabled = false;\r\n    }\r\n\r\n    function addToWhitelist(address account) external onlyOwner\r\n    {\r\n        require(!_blacklist[account], \"Blacklisted address cannot be whitelisted\");\r\n        _whitelist[account] = true;\r\n    }\r\n    function removeFromWhitelist(address account) external onlyOwner\r\n    {\r\n        _whitelist[account] = false;\r\n    }\r\n    function isWhitelisted(address account) external view returns(bool)  \r\n    {\r\n        return _whitelist[account];\r\n    }\r\n\r\n    function isWhiteListingEnabled() external view returns(bool)\r\n    {\r\n        return _whiteListingEnabled;\r\n    }\r\n\r\n    function setMaxTxAmount(uint256 newMaxTxAmount) external onlyOwner\r\n    {\r\n        maxTxAmount = newMaxTxAmount; \r\n    }\r\n\r\n    function getMaxTxAmount() external view returns(uint256)\r\n    {\r\n        return maxTxAmount;\r\n    }\r\n\r\n    function setCoolDownTime(uint256 newCoolDowntime) external onlyOwner\r\n    {\r\n        cooldownTime = newCoolDowntime;\r\n    }\r\n\r\n    function getContractDetails() external view returns (address, uint256, uint256,uint256)\r\n    {\r\n        return (owner(), maxTxAmount, cooldownTime, _initialSupply);\r\n    }\r\n\r\n    function setTaxes(uint256 newTaxFee) external onlyOwner\r\n    {\r\n        require(newTaxFee <= 10 , \"Tax fee must be less than 10%\");\r\n        taxFees = newTaxFee;\r\n    }\r\n\r\n    function setSlippageFees(uint256 newSlippageFees) external onlyOwner\r\n    {\r\n        require(newSlippageFees <= 5 , \"Slippage fees must be less than 5%\");\r\n        SlippageFees = newSlippageFees;\r\n    }\r\n\r\n    function enableTax() external onlyOwner\r\n    {\r\n        _TaxEnabled = true;\r\n    }\r\n\r\n    function disableTax() external onlyOwner\r\n    {\r\n        _TaxEnabled = false;\r\n    }\r\n\r\n    function _update(address from, address to, uint256 value) internal override \r\n    {\r\n        require(!_blacklist[from] && !_blacklist[to] , \"Blacklisted Addresses\");\r\n        if(_whiteListingEnabled)\r\n        {\r\n            require(_whitelist[from] && _whitelist[to] , \"Both addresses must be whitelisted\");\r\n        }\r\n        require(value <= maxTxAmount , \"Token Transfer Limit Exceeded\");\r\n        require(block.timestamp >= _lastTxTime[from]+cooldownTime , \"Token Transfer in cooldown\");\r\n        \r\n        uint256 transferAmount = value;\r\n        if(_TaxEnabled)\r\n        {\r\n            uint256 totalFees = taxFees + SlippageFees; // percentage\r\n            uint256 feeAmount = (value * totalFees)/100;\r\n            transferAmount = value - feeAmount;\r\n            super._update(from, taxAddress , feeAmount);\r\n        }\r\n        \r\n        _lastTxTime[from] = block.timestamp;\r\n        super._update(from, to, transferAmount); // token transfer from ERC20 Contract\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ChaiToken.sol": {
				"ChaiToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_taxAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SlippageFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldownTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableWhiteListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableWhiteListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractDetails",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxTxAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isWhiteListingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTxAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newCoolDowntime",
									"type": "uint256"
								}
							],
							"name": "setCoolDownTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMaxTxAmount",
									"type": "uint256"
								}
							],
							"name": "setMaxTxAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newSlippageFees",
									"type": "uint256"
								}
							],
							"name": "setSlippageFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newTaxFee",
									"type": "uint256"
								}
							],
							"name": "setTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ChaiToken.sol\":224:4510  contract ChaiToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"ChaiToken.sol\":317:327  decimals() */\n  tag_1\n    /* \"ChaiToken.sol\":317:325  decimals */\n  shl(0x20, tag_2)\n    /* \"ChaiToken.sol\":317:327  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_1:\n    /* \"ChaiToken.sol\":313:315  10 */\n  0x0a\n    /* \"ChaiToken.sol\":313:327  10**decimals() */\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"ChaiToken.sol\":301:310  100000000 */\n  0x05f5e100\n    /* \"ChaiToken.sol\":301:327  100000000 * 10**decimals() */\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"ChaiToken.sol\":268:327  uint256 private _initialSupply = 100000000 * 10**decimals() */\n  0x06\n  sstore\n    /* \"ChaiToken.sol\":385:399  _initialSupply */\n  sload(0x06)\n    /* \"ChaiToken.sol\":356:399  uint256 public maxTxAmount = _initialSupply */\n  0x07\n  sstore\n    /* \"ChaiToken.sol\":436:445  1 minutes */\n  0x3c\n    /* \"ChaiToken.sol\":406:445  uint256 public cooldownTime = 1 minutes */\n  0x08\n  sstore\n    /* \"ChaiToken.sol\":477:478  5 */\n  0x05\n    /* \"ChaiToken.sol\":452:478  uint256 public taxFees = 5 */\n  0x09\n  sstore\n    /* \"ChaiToken.sol\":515:516  2 */\n  0x02\n    /* \"ChaiToken.sol\":485:516  uint256 public SlippageFees = 2 */\n  0x0a\n  sstore\n    /* \"ChaiToken.sol\":717:722  false */\n  0x00\n    /* \"ChaiToken.sol\":681:722  bool private _whiteListingEnabled = false */\n  0x0e\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ChaiToken.sol\":756:761  false */\n  0x00\n    /* \"ChaiToken.sol\":729:761  bool private _TaxEnabled = false */\n  0x0e\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ChaiToken.sol\":805:1107  constructor(address initialOwner, address _taxAddress)... */\n  callvalue\n  dup1\n  iszero\n  tag_7\n  jumpi\n  0x00\n  dup1\n  revert\ntag_7:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"ChaiToken.sol\":913:925  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x43686169546f6b656e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4368616900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_16\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_16:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_21\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"ChaiToken.sol\":943:978  _mint(initialOwner, _initialSupply) */\n  tag_24\n    /* \"ChaiToken.sol\":949:961  initialOwner */\n  dup3\n    /* \"ChaiToken.sol\":963:977  _initialSupply */\n  sload(0x06)\n    /* \"ChaiToken.sol\":943:948  _mint */\n  shl(0x20, tag_25)\n    /* \"ChaiToken.sol\":943:978  _mint(initialOwner, _initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"ChaiToken.sol\":1060:1064  true */\n  0x01\n    /* \"ChaiToken.sol\":1033:1043  _whitelist */\n  0x0c\n    /* \"ChaiToken.sol\":1033:1057  _whitelist[initialOwner] */\n  0x00\n    /* \"ChaiToken.sol\":1044:1056  initialOwner */\n  dup5\n    /* \"ChaiToken.sol\":1033:1057  _whitelist[initialOwner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"ChaiToken.sol\":1033:1064  _whitelist[initialOwner] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ChaiToken.sol\":1088:1099  _taxAddress */\n  dup1\n    /* \"ChaiToken.sol\":1075:1085  taxAddress */\n  0x0e\n  0x02\n    /* \"ChaiToken.sol\":1075:1099  taxAddress = _taxAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ChaiToken.sol\":805:1107  constructor(address initialOwner, address _taxAddress)... */\n  pop\n  pop\n    /* \"ChaiToken.sol\":224:4510  contract ChaiToken is ERC20, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_22:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ChaiToken.sol\":3528:4505  function _update(address from, address to, uint256 value) internal override ... */\ntag_33:\n    /* \"ChaiToken.sol\":3630:3640  _blacklist */\n  0x0b\n    /* \"ChaiToken.sol\":3630:3646  _blacklist[from] */\n  0x00\n    /* \"ChaiToken.sol\":3641:3645  from */\n  dup5\n    /* \"ChaiToken.sol\":3630:3646  _blacklist[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"ChaiToken.sol\":3629:3646  !_blacklist[from] */\n  iszero\n    /* \"ChaiToken.sol\":3629:3665  !_blacklist[from] && !_blacklist[to] */\n  dup1\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"ChaiToken.sol\":3651:3661  _blacklist */\n  0x0b\n    /* \"ChaiToken.sol\":3651:3665  _blacklist[to] */\n  0x00\n    /* \"ChaiToken.sol\":3662:3664  to */\n  dup4\n    /* \"ChaiToken.sol\":3651:3665  _blacklist[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"ChaiToken.sol\":3650:3665  !_blacklist[to] */\n  iszero\n    /* \"ChaiToken.sol\":3629:3665  !_blacklist[from] && !_blacklist[to] */\ntag_35:\n    /* \"ChaiToken.sol\":3621:3692  require(!_blacklist[from] && !_blacklist[to] , \"Blacklisted Addresses\") */\n  tag_36\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_36:\n    /* \"ChaiToken.sol\":3706:3726  _whiteListingEnabled */\n  0x0e\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"ChaiToken.sol\":3703:3846  if(_whiteListingEnabled)... */\n  iszero\n  tag_39\n  jumpi\n    /* \"ChaiToken.sol\":3760:3770  _whitelist */\n  0x0c\n    /* \"ChaiToken.sol\":3760:3776  _whitelist[from] */\n  0x00\n    /* \"ChaiToken.sol\":3771:3775  from */\n  dup5\n    /* \"ChaiToken.sol\":3760:3776  _whitelist[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"ChaiToken.sol\":3760:3794  _whitelist[from] && _whitelist[to] */\n  dup1\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"ChaiToken.sol\":3780:3790  _whitelist */\n  0x0c\n    /* \"ChaiToken.sol\":3780:3794  _whitelist[to] */\n  0x00\n    /* \"ChaiToken.sol\":3791:3793  to */\n  dup4\n    /* \"ChaiToken.sol\":3780:3794  _whitelist[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"ChaiToken.sol\":3760:3794  _whitelist[from] && _whitelist[to] */\ntag_40:\n    /* \"ChaiToken.sol\":3752:3834  require(_whitelist[from] && _whitelist[to] , \"Both addresses must be whitelisted\") */\n  tag_41\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_41:\n    /* \"ChaiToken.sol\":3703:3846  if(_whiteListingEnabled)... */\ntag_39:\n    /* \"ChaiToken.sol\":3873:3884  maxTxAmount */\n  sload(0x07)\n    /* \"ChaiToken.sol\":3864:3869  value */\n  dup2\n    /* \"ChaiToken.sol\":3864:3884  value <= maxTxAmount */\n  gt\n  iszero\n    /* \"ChaiToken.sol\":3856:3919  require(value <= maxTxAmount , \"Token Transfer Limit Exceeded\") */\n  tag_44\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_45\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_44:\n    /* \"ChaiToken.sol\":3975:3987  cooldownTime */\n  sload(0x08)\n    /* \"ChaiToken.sol\":3957:3968  _lastTxTime */\n  0x0d\n    /* \"ChaiToken.sol\":3957:3974  _lastTxTime[from] */\n  0x00\n    /* \"ChaiToken.sol\":3969:3973  from */\n  dup6\n    /* \"ChaiToken.sol\":3957:3974  _lastTxTime[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"ChaiToken.sol\":3957:3987  _lastTxTime[from]+cooldownTime */\n  tag_47\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n    /* \"ChaiToken.sol\":3938:3953  block.timestamp */\n  timestamp\n    /* \"ChaiToken.sol\":3938:3987  block.timestamp >= _lastTxTime[from]+cooldownTime */\n  lt\n  iszero\n    /* \"ChaiToken.sol\":3930:4019  require(block.timestamp >= _lastTxTime[from]+cooldownTime , \"Token Transfer in cooldown\") */\n  tag_49\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_49:\n    /* \"ChaiToken.sol\":4040:4062  uint256 transferAmount */\n  0x00\n    /* \"ChaiToken.sol\":4065:4070  value */\n  dup2\n    /* \"ChaiToken.sol\":4040:4070  uint256 transferAmount = value */\n  swap1\n  pop\n    /* \"ChaiToken.sol\":4084:4095  _TaxEnabled */\n  0x0e\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"ChaiToken.sol\":4081:4354  if(_TaxEnabled)... */\n  iszero\n  tag_52\n  jumpi\n    /* \"ChaiToken.sol\":4121:4138  uint256 totalFees */\n  0x00\n    /* \"ChaiToken.sol\":4151:4163  SlippageFees */\n  sload(0x0a)\n    /* \"ChaiToken.sol\":4141:4148  taxFees */\n  sload(0x09)\n    /* \"ChaiToken.sol\":4141:4163  taxFees + SlippageFees */\n  tag_53\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_53:\n    /* \"ChaiToken.sol\":4121:4163  uint256 totalFees = taxFees + SlippageFees */\n  swap1\n  pop\n    /* \"ChaiToken.sol\":4192:4209  uint256 feeAmount */\n  0x00\n    /* \"ChaiToken.sol\":4232:4235  100 */\n  0x64\n    /* \"ChaiToken.sol\":4221:4230  totalFees */\n  dup3\n    /* \"ChaiToken.sol\":4213:4218  value */\n  dup6\n    /* \"ChaiToken.sol\":4213:4230  value * totalFees */\n  tag_54\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_54:\n    /* \"ChaiToken.sol\":4212:4235  (value * totalFees)/100 */\n  tag_55\n  swap2\n  swap1\n  tag_56\n  jump\t// in\ntag_55:\n    /* \"ChaiToken.sol\":4192:4235  uint256 feeAmount = (value * totalFees)/100 */\n  swap1\n  pop\n    /* \"ChaiToken.sol\":4275:4284  feeAmount */\n  dup1\n    /* \"ChaiToken.sol\":4267:4272  value */\n  dup5\n    /* \"ChaiToken.sol\":4267:4284  value - feeAmount */\n  tag_57\n  swap2\n  swap1\n  tag_58\n  jump\t// in\ntag_57:\n    /* \"ChaiToken.sol\":4250:4284  transferAmount = value - feeAmount */\n  swap3\n  pop\n    /* \"ChaiToken.sol\":4299:4342  super._update(from, taxAddress , feeAmount) */\n  tag_59\n    /* \"ChaiToken.sol\":4313:4317  from */\n  dup7\n    /* \"ChaiToken.sol\":4319:4329  taxAddress */\n  0x0e\n  0x02\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ChaiToken.sol\":4332:4341  feeAmount */\n  dup4\n    /* \"ChaiToken.sol\":4299:4312  super._update */\n  shl(0x20, tag_60)\n    /* \"ChaiToken.sol\":4299:4342  super._update(from, taxAddress , feeAmount) */\n  0x20\n  shr\n  jump\t// in\ntag_59:\n    /* \"ChaiToken.sol\":4106:4354  {... */\n  pop\n  pop\n    /* \"ChaiToken.sol\":4081:4354  if(_TaxEnabled)... */\ntag_52:\n    /* \"ChaiToken.sol\":4394:4409  block.timestamp */\n  timestamp\n    /* \"ChaiToken.sol\":4374:4385  _lastTxTime */\n  0x0d\n    /* \"ChaiToken.sol\":4374:4391  _lastTxTime[from] */\n  0x00\n    /* \"ChaiToken.sol\":4386:4390  from */\n  dup7\n    /* \"ChaiToken.sol\":4374:4391  _lastTxTime[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"ChaiToken.sol\":4374:4409  _lastTxTime[from] = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ChaiToken.sol\":4420:4459  super._update(from, to, transferAmount) */\n  tag_61\n    /* \"ChaiToken.sol\":4434:4438  from */\n  dup5\n    /* \"ChaiToken.sol\":4440:4442  to */\n  dup5\n    /* \"ChaiToken.sol\":4444:4458  transferAmount */\n  dup4\n    /* \"ChaiToken.sol\":4420:4433  super._update */\n  shl(0x20, tag_60)\n    /* \"ChaiToken.sol\":4420:4459  super._update(from, to, transferAmount) */\n  0x20\n  shr\n  jump\t// in\ntag_61:\n    /* \"ChaiToken.sol\":3610:4505  {... */\n  pop\n    /* \"ChaiToken.sol\":3528:4505  function _update(address from, address to, uint256 value) internal override ... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_60:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_63\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_64\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_64:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_65)\ntag_63:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_66\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_67\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_68\n  jump\t// in\ntag_67:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_66:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_65:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_69\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_70)\ntag_69:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_70:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_71\n  swap2\n  swap1\n  tag_72\n  jump\t// in\ntag_71:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_73:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x11\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:295   */\ntag_74:\n    /* \"#utility.yul\":235:243   */\n  0x00\n    /* \"#utility.yul\":282:287   */\n  dup2\n    /* \"#utility.yul\":279:280   */\n  0x01\n    /* \"#utility.yul\":275:288   */\n  shr\n    /* \"#utility.yul\":254:288   */\n  swap1\n  pop\n    /* \"#utility.yul\":193:295   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":301:1149   */\ntag_75:\n    /* \"#utility.yul\":362:367   */\n  0x00\n    /* \"#utility.yul\":369:373   */\n  dup1\n    /* \"#utility.yul\":393:399   */\n  dup3\n    /* \"#utility.yul\":384:399   */\n  swap2\n  pop\n    /* \"#utility.yul\":417:422   */\n  dup4\n    /* \"#utility.yul\":408:422   */\n  swap1\n  pop\n    /* \"#utility.yul\":431:1143   */\ntag_121:\n    /* \"#utility.yul\":452:453   */\n  0x01\n    /* \"#utility.yul\":442:450   */\n  dup6\n    /* \"#utility.yul\":439:454   */\n  gt\n    /* \"#utility.yul\":431:1143   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":547:551   */\n  dup1\n    /* \"#utility.yul\":542:545   */\n  dup7\n    /* \"#utility.yul\":538:552   */\n  div\n    /* \"#utility.yul\":532:536   */\n  dup2\n    /* \"#utility.yul\":529:553   */\n  gt\n    /* \"#utility.yul\":526:576   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":556:574   */\n  tag_125\n  tag_73\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":526:576   */\ntag_124:\n    /* \"#utility.yul\":606:607   */\n  0x01\n    /* \"#utility.yul\":596:604   */\n  dup6\n    /* \"#utility.yul\":592:608   */\n  and\n    /* \"#utility.yul\":589:1040   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":1021:1025   */\n  dup1\n    /* \"#utility.yul\":1014:1019   */\n  dup3\n    /* \"#utility.yul\":1010:1026   */\n  mul\n    /* \"#utility.yul\":1001:1026   */\n  swap2\n  pop\n    /* \"#utility.yul\":589:1040   */\ntag_126:\n    /* \"#utility.yul\":1071:1075   */\n  dup1\n    /* \"#utility.yul\":1065:1069   */\n  dup2\n    /* \"#utility.yul\":1061:1076   */\n  mul\n    /* \"#utility.yul\":1053:1076   */\n  swap1\n  pop\n    /* \"#utility.yul\":1101:1133   */\n  tag_127\n    /* \"#utility.yul\":1124:1132   */\n  dup6\n    /* \"#utility.yul\":1101:1133   */\n  tag_74\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":1089:1133   */\n  swap5\n  pop\n    /* \"#utility.yul\":431:1143   */\n  jump(tag_121)\ntag_123:\n    /* \"#utility.yul\":301:1149   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1155:2228   */\ntag_76:\n    /* \"#utility.yul\":1209:1214   */\n  0x00\n    /* \"#utility.yul\":1400:1408   */\n  dup3\n    /* \"#utility.yul\":1390:1430   */\n  tag_129\n  jumpi\n    /* \"#utility.yul\":1421:1422   */\n  0x01\n    /* \"#utility.yul\":1412:1422   */\n  swap1\n  pop\n    /* \"#utility.yul\":1423:1428   */\n  jump(tag_128)\n    /* \"#utility.yul\":1390:1430   */\ntag_129:\n    /* \"#utility.yul\":1449:1453   */\n  dup2\n    /* \"#utility.yul\":1439:1475   */\n  tag_130\n  jumpi\n    /* \"#utility.yul\":1466:1467   */\n  0x00\n    /* \"#utility.yul\":1457:1467   */\n  swap1\n  pop\n    /* \"#utility.yul\":1468:1473   */\n  jump(tag_128)\n    /* \"#utility.yul\":1439:1475   */\ntag_130:\n    /* \"#utility.yul\":1535:1539   */\n  dup2\n    /* \"#utility.yul\":1583:1584   */\n  0x01\n    /* \"#utility.yul\":1578:1605   */\n  dup2\n  eq\n  tag_132\n  jumpi\n    /* \"#utility.yul\":1619:1620   */\n  0x02\n    /* \"#utility.yul\":1614:1805   */\n  dup2\n  eq\n  tag_133\n  jumpi\n    /* \"#utility.yul\":1528:1805   */\n  jump(tag_131)\n    /* \"#utility.yul\":1578:1605   */\ntag_132:\n    /* \"#utility.yul\":1596:1597   */\n  0x01\n    /* \"#utility.yul\":1587:1597   */\n  swap2\n  pop\n    /* \"#utility.yul\":1598:1603   */\n  pop\n  jump(tag_128)\n    /* \"#utility.yul\":1614:1805   */\ntag_133:\n    /* \"#utility.yul\":1659:1662   */\n  0xff\n    /* \"#utility.yul\":1649:1657   */\n  dup5\n    /* \"#utility.yul\":1646:1663   */\n  gt\n    /* \"#utility.yul\":1643:1686   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":1666:1684   */\n  tag_135\n  tag_73\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":1643:1686   */\ntag_134:\n    /* \"#utility.yul\":1715:1723   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  0x02\n    /* \"#utility.yul\":1708:1724   */\n  exp\n    /* \"#utility.yul\":1699:1724   */\n  swap2\n  pop\n    /* \"#utility.yul\":1750:1753   */\n  dup5\n    /* \"#utility.yul\":1743:1748   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  gt\n    /* \"#utility.yul\":1737:1777   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":1757:1775   */\n  tag_137\n  tag_73\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":1737:1777   */\ntag_136:\n    /* \"#utility.yul\":1790:1795   */\n  pop\n  jump(tag_128)\n    /* \"#utility.yul\":1528:1805   */\ntag_131:\n  pop\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1904:1912   */\n  dup4\n    /* \"#utility.yul\":1901:1917   */\n  lt\n    /* \"#utility.yul\":1895:1898   */\n  0x0133\n    /* \"#utility.yul\":1889:1893   */\n  dup4\n    /* \"#utility.yul\":1886:1899   */\n  lt\n    /* \"#utility.yul\":1882:1918   */\n  and\n    /* \"#utility.yul\":1864:1866   */\n  0x4e\n    /* \"#utility.yul\":1854:1862   */\n  dup5\n    /* \"#utility.yul\":1851:1867   */\n  lt\n    /* \"#utility.yul\":1846:1848   */\n  0x0b\n    /* \"#utility.yul\":1840:1844   */\n  dup5\n    /* \"#utility.yul\":1837:1849   */\n  lt\n    /* \"#utility.yul\":1833:1868   */\n  and\n    /* \"#utility.yul\":1817:1928   */\n  or\n    /* \"#utility.yul\":1814:2060   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":1970:1978   */\n  dup3\n    /* \"#utility.yul\":1964:1968   */\n  dup3\n    /* \"#utility.yul\":1960:1979   */\n  exp\n    /* \"#utility.yul\":1951:1979   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2008   */\n  dup4\n    /* \"#utility.yul\":1998:2003   */\n  dup2\n    /* \"#utility.yul\":1995:2009   */\n  gt\n    /* \"#utility.yul\":1992:2032   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":2012:2030   */\n  tag_140\n  tag_73\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":1992:2032   */\ntag_139:\n    /* \"#utility.yul\":2045:2050   */\n  jump(tag_128)\n    /* \"#utility.yul\":1814:2060   */\ntag_138:\n    /* \"#utility.yul\":2085:2127   */\n  tag_141\n    /* \"#utility.yul\":2123:2126   */\n  dup5\n    /* \"#utility.yul\":2113:2121   */\n  dup5\n    /* \"#utility.yul\":2107:2111   */\n  dup5\n    /* \"#utility.yul\":2104:2105   */\n  0x01\n    /* \"#utility.yul\":2085:2127   */\n  tag_75\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":2070:2127   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2163   */\n  dup2\n    /* \"#utility.yul\":2154:2157   */\n  dup5\n    /* \"#utility.yul\":2150:2164   */\n  div\n    /* \"#utility.yul\":2143:2148   */\n  dup2\n    /* \"#utility.yul\":2140:2165   */\n  gt\n    /* \"#utility.yul\":2137:2188   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":2168:2186   */\n  tag_143\n  tag_73\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":2137:2188   */\ntag_142:\n    /* \"#utility.yul\":2217:2221   */\n  dup2\n    /* \"#utility.yul\":2210:2215   */\n  dup2\n    /* \"#utility.yul\":2206:2222   */\n  mul\n    /* \"#utility.yul\":2197:2222   */\n  swap1\n  pop\n    /* \"#utility.yul\":1155:2228   */\ntag_128:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2234:2311   */\ntag_77:\n    /* \"#utility.yul\":2271:2278   */\n  0x00\n    /* \"#utility.yul\":2300:2305   */\n  dup2\n    /* \"#utility.yul\":2289:2305   */\n  swap1\n  pop\n    /* \"#utility.yul\":2234:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2403   */\ntag_78:\n    /* \"#utility.yul\":2352:2359   */\n  0x00\n    /* \"#utility.yul\":2392:2396   */\n  0xff\n    /* \"#utility.yul\":2385:2390   */\n  dup3\n    /* \"#utility.yul\":2381:2397   */\n  and\n    /* \"#utility.yul\":2370:2397   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2403   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2409:2690   */\ntag_4:\n    /* \"#utility.yul\":2467:2472   */\n  0x00\n    /* \"#utility.yul\":2491:2514   */\n  tag_147\n    /* \"#utility.yul\":2509:2513   */\n  dup3\n    /* \"#utility.yul\":2491:2514   */\n  tag_77\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":2483:2514   */\n  swap2\n  pop\n    /* \"#utility.yul\":2535:2560   */\n  tag_148\n    /* \"#utility.yul\":2551:2559   */\n  dup4\n    /* \"#utility.yul\":2535:2560   */\n  tag_78\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":2523:2560   */\n  swap3\n  pop\n    /* \"#utility.yul\":2579:2683   */\n  tag_149\n    /* \"#utility.yul\":2616:2682   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2606:2614   */\n  dup5\n    /* \"#utility.yul\":2600:2604   */\n  dup5\n    /* \"#utility.yul\":2579:2683   */\n  tag_76\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":2570:2683   */\n  swap1\n  pop\n    /* \"#utility.yul\":2409:2690   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2696:3106   */\ntag_6:\n    /* \"#utility.yul\":2736:2743   */\n  0x00\n    /* \"#utility.yul\":2759:2779   */\n  tag_151\n    /* \"#utility.yul\":2777:2778   */\n  dup3\n    /* \"#utility.yul\":2759:2779   */\n  tag_77\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":2754:2779   */\n  swap2\n  pop\n    /* \"#utility.yul\":2793:2813   */\n  tag_152\n    /* \"#utility.yul\":2811:2812   */\n  dup4\n    /* \"#utility.yul\":2793:2813   */\n  tag_77\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":2788:2813   */\n  swap3\n  pop\n    /* \"#utility.yul\":2848:2849   */\n  dup3\n    /* \"#utility.yul\":2845:2846   */\n  dup3\n    /* \"#utility.yul\":2841:2850   */\n  mul\n    /* \"#utility.yul\":2870:2900   */\n  tag_153\n    /* \"#utility.yul\":2888:2899   */\n  dup2\n    /* \"#utility.yul\":2870:2900   */\n  tag_77\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":2859:2900   */\n  swap2\n  pop\n    /* \"#utility.yul\":3049:3050   */\n  dup3\n    /* \"#utility.yul\":3040:3047   */\n  dup3\n    /* \"#utility.yul\":3036:3051   */\n  div\n    /* \"#utility.yul\":3033:3034   */\n  dup5\n    /* \"#utility.yul\":3030:3052   */\n  eq\n    /* \"#utility.yul\":3010:3011   */\n  dup4\n    /* \"#utility.yul\":3003:3012   */\n  iszero\n    /* \"#utility.yul\":2983:3066   */\n  or\n    /* \"#utility.yul\":2960:3099   */\n  tag_154\n  jumpi\n    /* \"#utility.yul\":3079:3097   */\n  tag_155\n  tag_73\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":2960:3099   */\ntag_154:\n    /* \"#utility.yul\":2744:3106   */\n  pop\n    /* \"#utility.yul\":2696:3106   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3193:3310   */\ntag_80:\n    /* \"#utility.yul\":3302:3303   */\n  0x00\n    /* \"#utility.yul\":3299:3300   */\n  dup1\n    /* \"#utility.yul\":3292:3304   */\n  revert\n    /* \"#utility.yul\":3439:3565   */\ntag_82:\n    /* \"#utility.yul\":3476:3483   */\n  0x00\n    /* \"#utility.yul\":3516:3558   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3509:3514   */\n  dup3\n    /* \"#utility.yul\":3505:3559   */\n  and\n    /* \"#utility.yul\":3494:3559   */\n  swap1\n  pop\n    /* \"#utility.yul\":3439:3565   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3571:3667   */\ntag_83:\n    /* \"#utility.yul\":3608:3615   */\n  0x00\n    /* \"#utility.yul\":3637:3661   */\n  tag_161\n    /* \"#utility.yul\":3655:3660   */\n  dup3\n    /* \"#utility.yul\":3637:3661   */\n  tag_82\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":3626:3661   */\n  swap1\n  pop\n    /* \"#utility.yul\":3571:3667   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3673:3795   */\ntag_84:\n    /* \"#utility.yul\":3746:3770   */\n  tag_163\n    /* \"#utility.yul\":3764:3769   */\n  dup2\n    /* \"#utility.yul\":3746:3770   */\n  tag_83\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":3739:3744   */\n  dup2\n    /* \"#utility.yul\":3736:3771   */\n  eq\n    /* \"#utility.yul\":3726:3789   */\n  tag_164\n  jumpi\n    /* \"#utility.yul\":3785:3786   */\n  0x00\n    /* \"#utility.yul\":3782:3783   */\n  dup1\n    /* \"#utility.yul\":3775:3787   */\n  revert\n    /* \"#utility.yul\":3726:3789   */\ntag_164:\n    /* \"#utility.yul\":3673:3795   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3801:3944   */\ntag_85:\n    /* \"#utility.yul\":3858:3863   */\n  0x00\n    /* \"#utility.yul\":3889:3895   */\n  dup2\n    /* \"#utility.yul\":3883:3896   */\n  mload\n    /* \"#utility.yul\":3874:3896   */\n  swap1\n  pop\n    /* \"#utility.yul\":3905:3938   */\n  tag_166\n    /* \"#utility.yul\":3932:3937   */\n  dup2\n    /* \"#utility.yul\":3905:3938   */\n  tag_84\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":3801:3944   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3950:4457   */\ntag_9:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4037:4043   */\n  dup1\n    /* \"#utility.yul\":4086:4088   */\n  0x40\n    /* \"#utility.yul\":4074:4083   */\n  dup4\n    /* \"#utility.yul\":4065:4072   */\n  dup6\n    /* \"#utility.yul\":4061:4084   */\n  sub\n    /* \"#utility.yul\":4057:4089   */\n  slt\n    /* \"#utility.yul\":4054:4173   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":4092:4171   */\n  tag_169\n  tag_80\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":4054:4173   */\ntag_168:\n    /* \"#utility.yul\":4212:4213   */\n  0x00\n    /* \"#utility.yul\":4237:4301   */\n  tag_170\n    /* \"#utility.yul\":4293:4300   */\n  dup6\n    /* \"#utility.yul\":4284:4290   */\n  dup3\n    /* \"#utility.yul\":4273:4282   */\n  dup7\n    /* \"#utility.yul\":4269:4291   */\n  add\n    /* \"#utility.yul\":4237:4301   */\n  tag_85\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":4227:4301   */\n  swap3\n  pop\n    /* \"#utility.yul\":4183:4311   */\n  pop\n    /* \"#utility.yul\":4350:4352   */\n  0x20\n    /* \"#utility.yul\":4376:4440   */\n  tag_171\n    /* \"#utility.yul\":4432:4439   */\n  dup6\n    /* \"#utility.yul\":4423:4429   */\n  dup3\n    /* \"#utility.yul\":4412:4421   */\n  dup7\n    /* \"#utility.yul\":4408:4430   */\n  add\n    /* \"#utility.yul\":4376:4440   */\n  tag_85\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":4366:4440   */\n  swap2\n  pop\n    /* \"#utility.yul\":4321:4450   */\n  pop\n    /* \"#utility.yul\":3950:4457   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4463:4562   */\ntag_86:\n    /* \"#utility.yul\":4515:4521   */\n  0x00\n    /* \"#utility.yul\":4549:4554   */\n  dup2\n    /* \"#utility.yul\":4543:4555   */\n  mload\n    /* \"#utility.yul\":4533:4555   */\n  swap1\n  pop\n    /* \"#utility.yul\":4463:4562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4568:4748   */\ntag_87:\n    /* \"#utility.yul\":4616:4693   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4613:4614   */\n  0x00\n    /* \"#utility.yul\":4606:4694   */\n  mstore\n    /* \"#utility.yul\":4713:4717   */\n  0x41\n    /* \"#utility.yul\":4710:4711   */\n  0x04\n    /* \"#utility.yul\":4703:4718   */\n  mstore\n    /* \"#utility.yul\":4737:4741   */\n  0x24\n    /* \"#utility.yul\":4734:4735   */\n  0x00\n    /* \"#utility.yul\":4727:4742   */\n  revert\n    /* \"#utility.yul\":4754:4934   */\ntag_88:\n    /* \"#utility.yul\":4802:4879   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4799:4800   */\n  0x00\n    /* \"#utility.yul\":4792:4880   */\n  mstore\n    /* \"#utility.yul\":4899:4903   */\n  0x22\n    /* \"#utility.yul\":4896:4897   */\n  0x04\n    /* \"#utility.yul\":4889:4904   */\n  mstore\n    /* \"#utility.yul\":4923:4927   */\n  0x24\n    /* \"#utility.yul\":4920:4921   */\n  0x00\n    /* \"#utility.yul\":4913:4928   */\n  revert\n    /* \"#utility.yul\":4940:5260   */\ntag_89:\n    /* \"#utility.yul\":4984:4990   */\n  0x00\n    /* \"#utility.yul\":5021:5022   */\n  0x02\n    /* \"#utility.yul\":5015:5019   */\n  dup3\n    /* \"#utility.yul\":5011:5023   */\n  div\n    /* \"#utility.yul\":5001:5023   */\n  swap1\n  pop\n    /* \"#utility.yul\":5068:5069   */\n  0x01\n    /* \"#utility.yul\":5062:5066   */\n  dup3\n    /* \"#utility.yul\":5058:5070   */\n  and\n    /* \"#utility.yul\":5089:5107   */\n  dup1\n    /* \"#utility.yul\":5079:5160   */\n  tag_176\n  jumpi\n    /* \"#utility.yul\":5145:5149   */\n  0x7f\n    /* \"#utility.yul\":5137:5143   */\n  dup3\n    /* \"#utility.yul\":5133:5150   */\n  and\n    /* \"#utility.yul\":5123:5150   */\n  swap2\n  pop\n    /* \"#utility.yul\":5079:5160   */\ntag_176:\n    /* \"#utility.yul\":5207:5209   */\n  0x20\n    /* \"#utility.yul\":5199:5205   */\n  dup3\n    /* \"#utility.yul\":5196:5210   */\n  lt\n    /* \"#utility.yul\":5176:5194   */\n  dup2\n    /* \"#utility.yul\":5173:5211   */\n  sub\n    /* \"#utility.yul\":5170:5254   */\n  tag_177\n  jumpi\n    /* \"#utility.yul\":5226:5244   */\n  tag_178\n  tag_88\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":5170:5254   */\ntag_177:\n    /* \"#utility.yul\":4991:5260   */\n  pop\n    /* \"#utility.yul\":4940:5260   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5266:5407   */\ntag_90:\n    /* \"#utility.yul\":5315:5319   */\n  0x00\n    /* \"#utility.yul\":5338:5341   */\n  dup2\n    /* \"#utility.yul\":5330:5341   */\n  swap1\n  pop\n    /* \"#utility.yul\":5361:5364   */\n  dup2\n    /* \"#utility.yul\":5358:5359   */\n  0x00\n    /* \"#utility.yul\":5351:5365   */\n  mstore\n    /* \"#utility.yul\":5395:5399   */\n  0x20\n    /* \"#utility.yul\":5392:5393   */\n  0x00\n    /* \"#utility.yul\":5382:5400   */\n  keccak256\n    /* \"#utility.yul\":5374:5400   */\n  swap1\n  pop\n    /* \"#utility.yul\":5266:5407   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5413:5506   */\ntag_91:\n    /* \"#utility.yul\":5450:5456   */\n  0x00\n    /* \"#utility.yul\":5497:5499   */\n  0x20\n    /* \"#utility.yul\":5492:5494   */\n  0x1f\n    /* \"#utility.yul\":5485:5490   */\n  dup4\n    /* \"#utility.yul\":5481:5495   */\n  add\n    /* \"#utility.yul\":5477:5500   */\n  div\n    /* \"#utility.yul\":5467:5500   */\n  swap1\n  pop\n    /* \"#utility.yul\":5413:5506   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5512:5619   */\ntag_92:\n    /* \"#utility.yul\":5556:5564   */\n  0x00\n    /* \"#utility.yul\":5606:5611   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup3\n    /* \"#utility.yul\":5596:5612   */\n  shl\n    /* \"#utility.yul\":5575:5612   */\n  swap1\n  pop\n    /* \"#utility.yul\":5512:5619   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5625:6018   */\ntag_93:\n    /* \"#utility.yul\":5694:5700   */\n  0x00\n    /* \"#utility.yul\":5744:5745   */\n  0x08\n    /* \"#utility.yul\":5732:5742   */\n  dup4\n    /* \"#utility.yul\":5728:5746   */\n  mul\n    /* \"#utility.yul\":5767:5864   */\n  tag_183\n    /* \"#utility.yul\":5797:5863   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5786:5795   */\n  dup3\n    /* \"#utility.yul\":5767:5864   */\n  tag_92\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":5885:5924   */\n  tag_184\n    /* \"#utility.yul\":5915:5923   */\n  dup7\n    /* \"#utility.yul\":5904:5913   */\n  dup4\n    /* \"#utility.yul\":5885:5924   */\n  tag_92\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":5873:5924   */\n  swap6\n  pop\n    /* \"#utility.yul\":5957:5961   */\n  dup1\n    /* \"#utility.yul\":5953:5962   */\n  not\n    /* \"#utility.yul\":5946:5951   */\n  dup5\n    /* \"#utility.yul\":5942:5963   */\n  and\n    /* \"#utility.yul\":5933:5963   */\n  swap4\n  pop\n    /* \"#utility.yul\":6006:6010   */\n  dup1\n    /* \"#utility.yul\":5996:6004   */\n  dup7\n    /* \"#utility.yul\":5992:6011   */\n  and\n    /* \"#utility.yul\":5985:5990   */\n  dup5\n    /* \"#utility.yul\":5982:6012   */\n  or\n    /* \"#utility.yul\":5972:6012   */\n  swap3\n  pop\n    /* \"#utility.yul\":5701:6018   */\n  pop\n  pop\n    /* \"#utility.yul\":5625:6018   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6024:6084   */\ntag_94:\n    /* \"#utility.yul\":6052:6055   */\n  0x00\n    /* \"#utility.yul\":6073:6078   */\n  dup2\n    /* \"#utility.yul\":6066:6078   */\n  swap1\n  pop\n    /* \"#utility.yul\":6024:6084   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6090:6232   */\ntag_95:\n    /* \"#utility.yul\":6140:6149   */\n  0x00\n    /* \"#utility.yul\":6173:6226   */\n  tag_187\n    /* \"#utility.yul\":6191:6225   */\n  tag_188\n    /* \"#utility.yul\":6200:6224   */\n  tag_189\n    /* \"#utility.yul\":6218:6223   */\n  dup5\n    /* \"#utility.yul\":6200:6224   */\n  tag_77\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":6191:6225   */\n  tag_94\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":6173:6226   */\n  tag_77\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":6160:6226   */\n  swap1\n  pop\n    /* \"#utility.yul\":6090:6232   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6238:6313   */\ntag_96:\n    /* \"#utility.yul\":6281:6284   */\n  0x00\n    /* \"#utility.yul\":6302:6307   */\n  dup2\n    /* \"#utility.yul\":6295:6307   */\n  swap1\n  pop\n    /* \"#utility.yul\":6238:6313   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6319:6588   */\ntag_97:\n    /* \"#utility.yul\":6429:6468   */\n  tag_192\n    /* \"#utility.yul\":6460:6467   */\n  dup4\n    /* \"#utility.yul\":6429:6468   */\n  tag_95\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":6490:6581   */\n  tag_193\n    /* \"#utility.yul\":6539:6580   */\n  tag_194\n    /* \"#utility.yul\":6563:6579   */\n  dup3\n    /* \"#utility.yul\":6539:6580   */\n  tag_96\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":6531:6537   */\n  dup5\n    /* \"#utility.yul\":6524:6528   */\n  dup5\n    /* \"#utility.yul\":6518:6529   */\n  sload\n    /* \"#utility.yul\":6490:6581   */\n  tag_93\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":6484:6488   */\n  dup3\n    /* \"#utility.yul\":6477:6582   */\n  sstore\n    /* \"#utility.yul\":6395:6588   */\n  pop\n    /* \"#utility.yul\":6319:6588   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6594:6667   */\ntag_98:\n    /* \"#utility.yul\":6639:6642   */\n  0x00\n    /* \"#utility.yul\":6594:6667   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6673:6862   */\ntag_99:\n    /* \"#utility.yul\":6750:6782   */\n  tag_197\n  tag_98\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":6791:6856   */\n  tag_198\n    /* \"#utility.yul\":6849:6855   */\n  dup2\n    /* \"#utility.yul\":6841:6847   */\n  dup5\n    /* \"#utility.yul\":6835:6839   */\n  dup5\n    /* \"#utility.yul\":6791:6856   */\n  tag_97\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":6726:6862   */\n  pop\n    /* \"#utility.yul\":6673:6862   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6868:7054   */\ntag_100:\n    /* \"#utility.yul\":6928:7048   */\ntag_200:\n    /* \"#utility.yul\":6945:6948   */\n  dup2\n    /* \"#utility.yul\":6938:6943   */\n  dup2\n    /* \"#utility.yul\":6935:6949   */\n  lt\n    /* \"#utility.yul\":6928:7048   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":6999:7038   */\n  tag_203\n    /* \"#utility.yul\":7036:7037   */\n  0x00\n    /* \"#utility.yul\":7029:7034   */\n  dup3\n    /* \"#utility.yul\":6999:7038   */\n  tag_99\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":6972:6973   */\n  0x01\n    /* \"#utility.yul\":6965:6970   */\n  dup2\n    /* \"#utility.yul\":6961:6974   */\n  add\n    /* \"#utility.yul\":6952:6974   */\n  swap1\n  pop\n    /* \"#utility.yul\":6928:7048   */\n  jump(tag_200)\ntag_202:\n    /* \"#utility.yul\":6868:7054   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7060:7603   */\ntag_101:\n    /* \"#utility.yul\":7161:7163   */\n  0x1f\n    /* \"#utility.yul\":7156:7159   */\n  dup3\n    /* \"#utility.yul\":7153:7164   */\n  gt\n    /* \"#utility.yul\":7150:7596   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":7195:7233   */\n  tag_206\n    /* \"#utility.yul\":7227:7232   */\n  dup2\n    /* \"#utility.yul\":7195:7233   */\n  tag_90\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":7279:7308   */\n  tag_207\n    /* \"#utility.yul\":7297:7307   */\n  dup5\n    /* \"#utility.yul\":7279:7308   */\n  tag_91\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":7269:7277   */\n  dup2\n    /* \"#utility.yul\":7265:7309   */\n  add\n    /* \"#utility.yul\":7462:7464   */\n  0x20\n    /* \"#utility.yul\":7450:7460   */\n  dup6\n    /* \"#utility.yul\":7447:7465   */\n  lt\n    /* \"#utility.yul\":7444:7493   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":7483:7491   */\n  dup2\n    /* \"#utility.yul\":7468:7491   */\n  swap1\n  pop\n    /* \"#utility.yul\":7444:7493   */\ntag_208:\n    /* \"#utility.yul\":7506:7586   */\n  tag_209\n    /* \"#utility.yul\":7562:7584   */\n  tag_210\n    /* \"#utility.yul\":7580:7583   */\n  dup6\n    /* \"#utility.yul\":7562:7584   */\n  tag_91\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":7552:7560   */\n  dup4\n    /* \"#utility.yul\":7548:7585   */\n  add\n    /* \"#utility.yul\":7535:7546   */\n  dup3\n    /* \"#utility.yul\":7506:7586   */\n  tag_100\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":7165:7596   */\n  pop\n  pop\n    /* \"#utility.yul\":7150:7596   */\ntag_205:\n    /* \"#utility.yul\":7060:7603   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7609:7726   */\ntag_102:\n    /* \"#utility.yul\":7663:7671   */\n  0x00\n    /* \"#utility.yul\":7713:7718   */\n  dup3\n    /* \"#utility.yul\":7707:7711   */\n  dup3\n    /* \"#utility.yul\":7703:7719   */\n  shr\n    /* \"#utility.yul\":7682:7719   */\n  swap1\n  pop\n    /* \"#utility.yul\":7609:7726   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7732:7901   */\ntag_103:\n    /* \"#utility.yul\":7776:7782   */\n  0x00\n    /* \"#utility.yul\":7809:7860   */\n  tag_213\n    /* \"#utility.yul\":7857:7858   */\n  0x00\n    /* \"#utility.yul\":7853:7859   */\n  not\n    /* \"#utility.yul\":7845:7850   */\n  dup5\n    /* \"#utility.yul\":7842:7843   */\n  0x08\n    /* \"#utility.yul\":7838:7851   */\n  mul\n    /* \"#utility.yul\":7809:7860   */\n  tag_102\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":7805:7861   */\n  not\n    /* \"#utility.yul\":7890:7894   */\n  dup1\n    /* \"#utility.yul\":7884:7888   */\n  dup4\n    /* \"#utility.yul\":7880:7895   */\n  and\n    /* \"#utility.yul\":7870:7895   */\n  swap2\n  pop\n    /* \"#utility.yul\":7783:7901   */\n  pop\n    /* \"#utility.yul\":7732:7901   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7906:8201   */\ntag_104:\n    /* \"#utility.yul\":7982:7986   */\n  0x00\n    /* \"#utility.yul\":8128:8157   */\n  tag_215\n    /* \"#utility.yul\":8153:8156   */\n  dup4\n    /* \"#utility.yul\":8147:8151   */\n  dup4\n    /* \"#utility.yul\":8128:8157   */\n  tag_103\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":8120:8157   */\n  swap2\n  pop\n    /* \"#utility.yul\":8190:8193   */\n  dup3\n    /* \"#utility.yul\":8187:8188   */\n  0x02\n    /* \"#utility.yul\":8183:8194   */\n  mul\n    /* \"#utility.yul\":8177:8181   */\n  dup3\n    /* \"#utility.yul\":8174:8195   */\n  or\n    /* \"#utility.yul\":8166:8195   */\n  swap1\n  pop\n    /* \"#utility.yul\":7906:8201   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8206:9601   */\ntag_15:\n    /* \"#utility.yul\":8323:8360   */\n  tag_217\n    /* \"#utility.yul\":8356:8359   */\n  dup3\n    /* \"#utility.yul\":8323:8360   */\n  tag_86\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":8425:8443   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8417:8423   */\n  dup2\n    /* \"#utility.yul\":8414:8444   */\n  gt\n    /* \"#utility.yul\":8411:8467   */\n  iszero\n  tag_218\n  jumpi\n    /* \"#utility.yul\":8447:8465   */\n  tag_219\n  tag_87\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":8411:8467   */\ntag_218:\n    /* \"#utility.yul\":8491:8529   */\n  tag_220\n    /* \"#utility.yul\":8523:8527   */\n  dup3\n    /* \"#utility.yul\":8517:8528   */\n  sload\n    /* \"#utility.yul\":8491:8529   */\n  tag_89\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":8576:8643   */\n  tag_221\n    /* \"#utility.yul\":8636:8642   */\n  dup3\n    /* \"#utility.yul\":8628:8634   */\n  dup3\n    /* \"#utility.yul\":8622:8626   */\n  dup6\n    /* \"#utility.yul\":8576:8643   */\n  tag_101\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":8670:8671   */\n  0x00\n    /* \"#utility.yul\":8694:8698   */\n  0x20\n    /* \"#utility.yul\":8681:8698   */\n  swap1\n  pop\n    /* \"#utility.yul\":8726:8728   */\n  0x1f\n    /* \"#utility.yul\":8718:8724   */\n  dup4\n    /* \"#utility.yul\":8715:8729   */\n  gt\n    /* \"#utility.yul\":8743:8744   */\n  0x01\n    /* \"#utility.yul\":8738:9356   */\n  dup2\n  eq\n  tag_223\n  jumpi\n    /* \"#utility.yul\":9400:9401   */\n  0x00\n    /* \"#utility.yul\":9417:9423   */\n  dup5\n    /* \"#utility.yul\":9414:9491   */\n  iszero\n  tag_224\n  jumpi\n    /* \"#utility.yul\":9466:9475   */\n  dup3\n    /* \"#utility.yul\":9461:9464   */\n  dup8\n    /* \"#utility.yul\":9457:9476   */\n  add\n    /* \"#utility.yul\":9451:9477   */\n  mload\n    /* \"#utility.yul\":9442:9477   */\n  swap1\n  pop\n    /* \"#utility.yul\":9414:9491   */\ntag_224:\n    /* \"#utility.yul\":9517:9584   */\n  tag_225\n    /* \"#utility.yul\":9577:9583   */\n  dup6\n    /* \"#utility.yul\":9570:9575   */\n  dup3\n    /* \"#utility.yul\":9517:9584   */\n  tag_104\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":9511:9515   */\n  dup7\n    /* \"#utility.yul\":9504:9585   */\n  sstore\n    /* \"#utility.yul\":9373:9595   */\n  pop\n    /* \"#utility.yul\":8708:9595   */\n  jump(tag_222)\n    /* \"#utility.yul\":8738:9356   */\ntag_223:\n    /* \"#utility.yul\":8790:8794   */\n  0x1f\n    /* \"#utility.yul\":8786:8795   */\n  not\n    /* \"#utility.yul\":8778:8784   */\n  dup5\n    /* \"#utility.yul\":8774:8796   */\n  and\n    /* \"#utility.yul\":8824:8861   */\n  tag_226\n    /* \"#utility.yul\":8856:8860   */\n  dup7\n    /* \"#utility.yul\":8824:8861   */\n  tag_90\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":8883:8884   */\n  0x00\n    /* \"#utility.yul\":8897:9105   */\ntag_227:\n    /* \"#utility.yul\":8911:8918   */\n  dup3\n    /* \"#utility.yul\":8908:8909   */\n  dup2\n    /* \"#utility.yul\":8905:8919   */\n  lt\n    /* \"#utility.yul\":8897:9105   */\n  iszero\n  tag_229\n  jumpi\n    /* \"#utility.yul\":8990:8999   */\n  dup5\n    /* \"#utility.yul\":8985:8988   */\n  dup10\n    /* \"#utility.yul\":8981:9000   */\n  add\n    /* \"#utility.yul\":8975:9001   */\n  mload\n    /* \"#utility.yul\":8967:8973   */\n  dup3\n    /* \"#utility.yul\":8960:9002   */\n  sstore\n    /* \"#utility.yul\":9041:9042   */\n  0x01\n    /* \"#utility.yul\":9033:9039   */\n  dup3\n    /* \"#utility.yul\":9029:9043   */\n  add\n    /* \"#utility.yul\":9019:9043   */\n  swap2\n  pop\n    /* \"#utility.yul\":9088:9090   */\n  0x20\n    /* \"#utility.yul\":9077:9086   */\n  dup6\n    /* \"#utility.yul\":9073:9091   */\n  add\n    /* \"#utility.yul\":9060:9091   */\n  swap5\n  pop\n    /* \"#utility.yul\":8934:8938   */\n  0x20\n    /* \"#utility.yul\":8931:8932   */\n  dup2\n    /* \"#utility.yul\":8927:8939   */\n  add\n    /* \"#utility.yul\":8922:8939   */\n  swap1\n  pop\n    /* \"#utility.yul\":8897:9105   */\n  jump(tag_227)\ntag_229:\n    /* \"#utility.yul\":9133:9139   */\n  dup7\n    /* \"#utility.yul\":9124:9131   */\n  dup4\n    /* \"#utility.yul\":9121:9140   */\n  lt\n    /* \"#utility.yul\":9118:9297   */\n  iszero\n  tag_230\n  jumpi\n    /* \"#utility.yul\":9191:9200   */\n  dup5\n    /* \"#utility.yul\":9186:9189   */\n  dup10\n    /* \"#utility.yul\":9182:9201   */\n  add\n    /* \"#utility.yul\":9176:9202   */\n  mload\n    /* \"#utility.yul\":9234:9282   */\n  tag_231\n    /* \"#utility.yul\":9276:9280   */\n  0x1f\n    /* \"#utility.yul\":9268:9274   */\n  dup10\n    /* \"#utility.yul\":9264:9281   */\n  and\n    /* \"#utility.yul\":9253:9262   */\n  dup3\n    /* \"#utility.yul\":9234:9282   */\n  tag_103\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":9226:9232   */\n  dup4\n    /* \"#utility.yul\":9219:9283   */\n  sstore\n    /* \"#utility.yul\":9141:9297   */\n  pop\n    /* \"#utility.yul\":9118:9297   */\ntag_230:\n    /* \"#utility.yul\":9343:9344   */\n  0x01\n    /* \"#utility.yul\":9339:9340   */\n  0x02\n    /* \"#utility.yul\":9331:9337   */\n  dup9\n    /* \"#utility.yul\":9327:9341   */\n  mul\n    /* \"#utility.yul\":9323:9345   */\n  add\n    /* \"#utility.yul\":9317:9321   */\n  dup9\n    /* \"#utility.yul\":9310:9346   */\n  sstore\n    /* \"#utility.yul\":8745:9356   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8708:9595   */\ntag_222:\n  pop\n    /* \"#utility.yul\":8298:9601   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8206:9601   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9607:9725   */\ntag_105:\n    /* \"#utility.yul\":9694:9718   */\n  tag_233\n    /* \"#utility.yul\":9712:9717   */\n  dup2\n    /* \"#utility.yul\":9694:9718   */\n  tag_83\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":9689:9692   */\n  dup3\n    /* \"#utility.yul\":9682:9719   */\n  mstore\n    /* \"#utility.yul\":9607:9725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9731:9953   */\ntag_20:\n    /* \"#utility.yul\":9824:9828   */\n  0x00\n    /* \"#utility.yul\":9862:9864   */\n  0x20\n    /* \"#utility.yul\":9851:9860   */\n  dup3\n    /* \"#utility.yul\":9847:9865   */\n  add\n    /* \"#utility.yul\":9839:9865   */\n  swap1\n  pop\n    /* \"#utility.yul\":9875:9946   */\n  tag_235\n    /* \"#utility.yul\":9943:9944   */\n  0x00\n    /* \"#utility.yul\":9932:9941   */\n  dup4\n    /* \"#utility.yul\":9928:9945   */\n  add\n    /* \"#utility.yul\":9919:9925   */\n  dup5\n    /* \"#utility.yul\":9875:9946   */\n  tag_105\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":9731:9953   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9959:10128   */\ntag_106:\n    /* \"#utility.yul\":10043:10054   */\n  0x00\n    /* \"#utility.yul\":10077:10083   */\n  dup3\n    /* \"#utility.yul\":10072:10075   */\n  dup3\n    /* \"#utility.yul\":10065:10084   */\n  mstore\n    /* \"#utility.yul\":10117:10121   */\n  0x20\n    /* \"#utility.yul\":10112:10115   */\n  dup3\n    /* \"#utility.yul\":10108:10122   */\n  add\n    /* \"#utility.yul\":10093:10122   */\n  swap1\n  pop\n    /* \"#utility.yul\":9959:10128   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10134:10305   */\ntag_107:\n    /* \"#utility.yul\":10274:10297   */\n  0x426c61636b6c6973746564204164647265737365730000000000000000000000\n    /* \"#utility.yul\":10270:10271   */\n  0x00\n    /* \"#utility.yul\":10262:10268   */\n  dup3\n    /* \"#utility.yul\":10258:10272   */\n  add\n    /* \"#utility.yul\":10251:10298   */\n  mstore\n    /* \"#utility.yul\":10134:10305   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10311:10677   */\ntag_108:\n    /* \"#utility.yul\":10453:10456   */\n  0x00\n    /* \"#utility.yul\":10474:10541   */\n  tag_239\n    /* \"#utility.yul\":10538:10540   */\n  0x15\n    /* \"#utility.yul\":10533:10536   */\n  dup4\n    /* \"#utility.yul\":10474:10541   */\n  tag_106\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":10467:10541   */\n  swap2\n  pop\n    /* \"#utility.yul\":10550:10643   */\n  tag_240\n    /* \"#utility.yul\":10639:10642   */\n  dup3\n    /* \"#utility.yul\":10550:10643   */\n  tag_107\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":10668:10670   */\n  0x20\n    /* \"#utility.yul\":10663:10666   */\n  dup3\n    /* \"#utility.yul\":10659:10671   */\n  add\n    /* \"#utility.yul\":10652:10671   */\n  swap1\n  pop\n    /* \"#utility.yul\":10311:10677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10683:11102   */\ntag_38:\n    /* \"#utility.yul\":10849:10853   */\n  0x00\n    /* \"#utility.yul\":10887:10889   */\n  0x20\n    /* \"#utility.yul\":10876:10885   */\n  dup3\n    /* \"#utility.yul\":10872:10890   */\n  add\n    /* \"#utility.yul\":10864:10890   */\n  swap1\n  pop\n    /* \"#utility.yul\":10936:10945   */\n  dup2\n    /* \"#utility.yul\":10930:10934   */\n  dup2\n    /* \"#utility.yul\":10926:10946   */\n  sub\n    /* \"#utility.yul\":10922:10923   */\n  0x00\n    /* \"#utility.yul\":10911:10920   */\n  dup4\n    /* \"#utility.yul\":10907:10924   */\n  add\n    /* \"#utility.yul\":10900:10947   */\n  mstore\n    /* \"#utility.yul\":10964:11095   */\n  tag_242\n    /* \"#utility.yul\":11090:11094   */\n  dup2\n    /* \"#utility.yul\":10964:11095   */\n  tag_108\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":10956:11095   */\n  swap1\n  pop\n    /* \"#utility.yul\":10683:11102   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11108:11329   */\ntag_109:\n    /* \"#utility.yul\":11248:11282   */\n  0x426f746820616464726573736573206d7573742062652077686974656c697374\n    /* \"#utility.yul\":11244:11245   */\n  0x00\n    /* \"#utility.yul\":11236:11242   */\n  dup3\n    /* \"#utility.yul\":11232:11246   */\n  add\n    /* \"#utility.yul\":11225:11283   */\n  mstore\n    /* \"#utility.yul\":11317:11321   */\n  0x6564000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11312:11314   */\n  0x20\n    /* \"#utility.yul\":11304:11310   */\n  dup3\n    /* \"#utility.yul\":11300:11315   */\n  add\n    /* \"#utility.yul\":11293:11322   */\n  mstore\n    /* \"#utility.yul\":11108:11329   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11335:11701   */\ntag_110:\n    /* \"#utility.yul\":11477:11480   */\n  0x00\n    /* \"#utility.yul\":11498:11565   */\n  tag_245\n    /* \"#utility.yul\":11562:11564   */\n  0x22\n    /* \"#utility.yul\":11557:11560   */\n  dup4\n    /* \"#utility.yul\":11498:11565   */\n  tag_106\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":11491:11565   */\n  swap2\n  pop\n    /* \"#utility.yul\":11574:11667   */\n  tag_246\n    /* \"#utility.yul\":11663:11666   */\n  dup3\n    /* \"#utility.yul\":11574:11667   */\n  tag_109\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":11692:11694   */\n  0x40\n    /* \"#utility.yul\":11687:11690   */\n  dup3\n    /* \"#utility.yul\":11683:11695   */\n  add\n    /* \"#utility.yul\":11676:11695   */\n  swap1\n  pop\n    /* \"#utility.yul\":11335:11701   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11707:12126   */\ntag_43:\n    /* \"#utility.yul\":11873:11877   */\n  0x00\n    /* \"#utility.yul\":11911:11913   */\n  0x20\n    /* \"#utility.yul\":11900:11909   */\n  dup3\n    /* \"#utility.yul\":11896:11914   */\n  add\n    /* \"#utility.yul\":11888:11914   */\n  swap1\n  pop\n    /* \"#utility.yul\":11960:11969   */\n  dup2\n    /* \"#utility.yul\":11954:11958   */\n  dup2\n    /* \"#utility.yul\":11950:11970   */\n  sub\n    /* \"#utility.yul\":11946:11947   */\n  0x00\n    /* \"#utility.yul\":11935:11944   */\n  dup4\n    /* \"#utility.yul\":11931:11948   */\n  add\n    /* \"#utility.yul\":11924:11971   */\n  mstore\n    /* \"#utility.yul\":11988:12119   */\n  tag_248\n    /* \"#utility.yul\":12114:12118   */\n  dup2\n    /* \"#utility.yul\":11988:12119   */\n  tag_110\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":11980:12119   */\n  swap1\n  pop\n    /* \"#utility.yul\":11707:12126   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12132:12311   */\ntag_111:\n    /* \"#utility.yul\":12272:12303   */\n  0x546f6b656e205472616e73666572204c696d6974204578636565646564000000\n    /* \"#utility.yul\":12268:12269   */\n  0x00\n    /* \"#utility.yul\":12260:12266   */\n  dup3\n    /* \"#utility.yul\":12256:12270   */\n  add\n    /* \"#utility.yul\":12249:12304   */\n  mstore\n    /* \"#utility.yul\":12132:12311   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12317:12683   */\ntag_112:\n    /* \"#utility.yul\":12459:12462   */\n  0x00\n    /* \"#utility.yul\":12480:12547   */\n  tag_251\n    /* \"#utility.yul\":12544:12546   */\n  0x1d\n    /* \"#utility.yul\":12539:12542   */\n  dup4\n    /* \"#utility.yul\":12480:12547   */\n  tag_106\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":12473:12547   */\n  swap2\n  pop\n    /* \"#utility.yul\":12556:12649   */\n  tag_252\n    /* \"#utility.yul\":12645:12648   */\n  dup3\n    /* \"#utility.yul\":12556:12649   */\n  tag_111\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":12674:12676   */\n  0x20\n    /* \"#utility.yul\":12669:12672   */\n  dup3\n    /* \"#utility.yul\":12665:12677   */\n  add\n    /* \"#utility.yul\":12658:12677   */\n  swap1\n  pop\n    /* \"#utility.yul\":12317:12683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12689:13108   */\ntag_46:\n    /* \"#utility.yul\":12855:12859   */\n  0x00\n    /* \"#utility.yul\":12893:12895   */\n  0x20\n    /* \"#utility.yul\":12882:12891   */\n  dup3\n    /* \"#utility.yul\":12878:12896   */\n  add\n    /* \"#utility.yul\":12870:12896   */\n  swap1\n  pop\n    /* \"#utility.yul\":12942:12951   */\n  dup2\n    /* \"#utility.yul\":12936:12940   */\n  dup2\n    /* \"#utility.yul\":12932:12952   */\n  sub\n    /* \"#utility.yul\":12928:12929   */\n  0x00\n    /* \"#utility.yul\":12917:12926   */\n  dup4\n    /* \"#utility.yul\":12913:12930   */\n  add\n    /* \"#utility.yul\":12906:12953   */\n  mstore\n    /* \"#utility.yul\":12970:13101   */\n  tag_254\n    /* \"#utility.yul\":13096:13100   */\n  dup2\n    /* \"#utility.yul\":12970:13101   */\n  tag_112\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":12962:13101   */\n  swap1\n  pop\n    /* \"#utility.yul\":12689:13108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13114:13305   */\ntag_48:\n    /* \"#utility.yul\":13154:13157   */\n  0x00\n    /* \"#utility.yul\":13173:13193   */\n  tag_256\n    /* \"#utility.yul\":13191:13192   */\n  dup3\n    /* \"#utility.yul\":13173:13193   */\n  tag_77\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":13168:13193   */\n  swap2\n  pop\n    /* \"#utility.yul\":13207:13227   */\n  tag_257\n    /* \"#utility.yul\":13225:13226   */\n  dup4\n    /* \"#utility.yul\":13207:13227   */\n  tag_77\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":13202:13227   */\n  swap3\n  pop\n    /* \"#utility.yul\":13250:13251   */\n  dup3\n    /* \"#utility.yul\":13247:13248   */\n  dup3\n    /* \"#utility.yul\":13243:13252   */\n  add\n    /* \"#utility.yul\":13236:13252   */\n  swap1\n  pop\n    /* \"#utility.yul\":13271:13274   */\n  dup1\n    /* \"#utility.yul\":13268:13269   */\n  dup3\n    /* \"#utility.yul\":13265:13275   */\n  gt\n    /* \"#utility.yul\":13262:13298   */\n  iszero\n  tag_258\n  jumpi\n    /* \"#utility.yul\":13278:13296   */\n  tag_259\n  tag_73\n  jump\t// in\ntag_259:\n    /* \"#utility.yul\":13262:13298   */\ntag_258:\n    /* \"#utility.yul\":13114:13305   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13311:13487   */\ntag_113:\n    /* \"#utility.yul\":13451:13479   */\n  0x546f6b656e205472616e7366657220696e20636f6f6c646f776e000000000000\n    /* \"#utility.yul\":13447:13448   */\n  0x00\n    /* \"#utility.yul\":13439:13445   */\n  dup3\n    /* \"#utility.yul\":13435:13449   */\n  add\n    /* \"#utility.yul\":13428:13480   */\n  mstore\n    /* \"#utility.yul\":13311:13487   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13493:13859   */\ntag_114:\n    /* \"#utility.yul\":13635:13638   */\n  0x00\n    /* \"#utility.yul\":13656:13723   */\n  tag_262\n    /* \"#utility.yul\":13720:13722   */\n  0x1a\n    /* \"#utility.yul\":13715:13718   */\n  dup4\n    /* \"#utility.yul\":13656:13723   */\n  tag_106\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":13649:13723   */\n  swap2\n  pop\n    /* \"#utility.yul\":13732:13825   */\n  tag_263\n    /* \"#utility.yul\":13821:13824   */\n  dup3\n    /* \"#utility.yul\":13732:13825   */\n  tag_113\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":13850:13852   */\n  0x20\n    /* \"#utility.yul\":13845:13848   */\n  dup3\n    /* \"#utility.yul\":13841:13853   */\n  add\n    /* \"#utility.yul\":13834:13853   */\n  swap1\n  pop\n    /* \"#utility.yul\":13493:13859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13865:14284   */\ntag_51:\n    /* \"#utility.yul\":14031:14035   */\n  0x00\n    /* \"#utility.yul\":14069:14071   */\n  0x20\n    /* \"#utility.yul\":14058:14067   */\n  dup3\n    /* \"#utility.yul\":14054:14072   */\n  add\n    /* \"#utility.yul\":14046:14072   */\n  swap1\n  pop\n    /* \"#utility.yul\":14118:14127   */\n  dup2\n    /* \"#utility.yul\":14112:14116   */\n  dup2\n    /* \"#utility.yul\":14108:14128   */\n  sub\n    /* \"#utility.yul\":14104:14105   */\n  0x00\n    /* \"#utility.yul\":14093:14102   */\n  dup4\n    /* \"#utility.yul\":14089:14106   */\n  add\n    /* \"#utility.yul\":14082:14129   */\n  mstore\n    /* \"#utility.yul\":14146:14277   */\n  tag_265\n    /* \"#utility.yul\":14272:14276   */\n  dup2\n    /* \"#utility.yul\":14146:14277   */\n  tag_114\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":14138:14277   */\n  swap1\n  pop\n    /* \"#utility.yul\":13865:14284   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14290:14470   */\ntag_115:\n    /* \"#utility.yul\":14338:14415   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":14335:14336   */\n  0x00\n    /* \"#utility.yul\":14328:14416   */\n  mstore\n    /* \"#utility.yul\":14435:14439   */\n  0x12\n    /* \"#utility.yul\":14432:14433   */\n  0x04\n    /* \"#utility.yul\":14425:14440   */\n  mstore\n    /* \"#utility.yul\":14459:14463   */\n  0x24\n    /* \"#utility.yul\":14456:14457   */\n  0x00\n    /* \"#utility.yul\":14449:14464   */\n  revert\n    /* \"#utility.yul\":14476:14661   */\ntag_56:\n    /* \"#utility.yul\":14516:14517   */\n  0x00\n    /* \"#utility.yul\":14533:14553   */\n  tag_268\n    /* \"#utility.yul\":14551:14552   */\n  dup3\n    /* \"#utility.yul\":14533:14553   */\n  tag_77\n  jump\t// in\ntag_268:\n    /* \"#utility.yul\":14528:14553   */\n  swap2\n  pop\n    /* \"#utility.yul\":14567:14587   */\n  tag_269\n    /* \"#utility.yul\":14585:14586   */\n  dup4\n    /* \"#utility.yul\":14567:14587   */\n  tag_77\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":14562:14587   */\n  swap3\n  pop\n    /* \"#utility.yul\":14606:14607   */\n  dup3\n    /* \"#utility.yul\":14596:14631   */\n  tag_270\n  jumpi\n    /* \"#utility.yul\":14611:14629   */\n  tag_271\n  tag_115\n  jump\t// in\ntag_271:\n    /* \"#utility.yul\":14596:14631   */\ntag_270:\n    /* \"#utility.yul\":14653:14654   */\n  dup3\n    /* \"#utility.yul\":14650:14651   */\n  dup3\n    /* \"#utility.yul\":14646:14655   */\n  div\n    /* \"#utility.yul\":14641:14655   */\n  swap1\n  pop\n    /* \"#utility.yul\":14476:14661   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14667:14861   */\ntag_58:\n    /* \"#utility.yul\":14707:14711   */\n  0x00\n    /* \"#utility.yul\":14727:14747   */\n  tag_273\n    /* \"#utility.yul\":14745:14746   */\n  dup3\n    /* \"#utility.yul\":14727:14747   */\n  tag_77\n  jump\t// in\ntag_273:\n    /* \"#utility.yul\":14722:14747   */\n  swap2\n  pop\n    /* \"#utility.yul\":14761:14781   */\n  tag_274\n    /* \"#utility.yul\":14779:14780   */\n  dup4\n    /* \"#utility.yul\":14761:14781   */\n  tag_77\n  jump\t// in\ntag_274:\n    /* \"#utility.yul\":14756:14781   */\n  swap3\n  pop\n    /* \"#utility.yul\":14805:14806   */\n  dup3\n    /* \"#utility.yul\":14802:14803   */\n  dup3\n    /* \"#utility.yul\":14798:14807   */\n  sub\n    /* \"#utility.yul\":14790:14807   */\n  swap1\n  pop\n    /* \"#utility.yul\":14829:14830   */\n  dup2\n    /* \"#utility.yul\":14823:14827   */\n  dup2\n    /* \"#utility.yul\":14820:14831   */\n  gt\n    /* \"#utility.yul\":14817:14854   */\n  iszero\n  tag_275\n  jumpi\n    /* \"#utility.yul\":14834:14852   */\n  tag_276\n  tag_73\n  jump\t// in\ntag_276:\n    /* \"#utility.yul\":14817:14854   */\ntag_275:\n    /* \"#utility.yul\":14667:14861   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14867:14985   */\ntag_116:\n    /* \"#utility.yul\":14954:14978   */\n  tag_278\n    /* \"#utility.yul\":14972:14977   */\n  dup2\n    /* \"#utility.yul\":14954:14978   */\n  tag_77\n  jump\t// in\ntag_278:\n    /* \"#utility.yul\":14949:14952   */\n  dup3\n    /* \"#utility.yul\":14942:14979   */\n  mstore\n    /* \"#utility.yul\":14867:14985   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14991:15433   */\ntag_68:\n    /* \"#utility.yul\":15140:15144   */\n  0x00\n    /* \"#utility.yul\":15178:15180   */\n  0x60\n    /* \"#utility.yul\":15167:15176   */\n  dup3\n    /* \"#utility.yul\":15163:15181   */\n  add\n    /* \"#utility.yul\":15155:15181   */\n  swap1\n  pop\n    /* \"#utility.yul\":15191:15262   */\n  tag_280\n    /* \"#utility.yul\":15259:15260   */\n  0x00\n    /* \"#utility.yul\":15248:15257   */\n  dup4\n    /* \"#utility.yul\":15244:15261   */\n  add\n    /* \"#utility.yul\":15235:15241   */\n  dup7\n    /* \"#utility.yul\":15191:15262   */\n  tag_105\n  jump\t// in\ntag_280:\n    /* \"#utility.yul\":15272:15344   */\n  tag_281\n    /* \"#utility.yul\":15340:15342   */\n  0x20\n    /* \"#utility.yul\":15329:15338   */\n  dup4\n    /* \"#utility.yul\":15325:15343   */\n  add\n    /* \"#utility.yul\":15316:15322   */\n  dup6\n    /* \"#utility.yul\":15272:15344   */\n  tag_116\n  jump\t// in\ntag_281:\n    /* \"#utility.yul\":15354:15426   */\n  tag_282\n    /* \"#utility.yul\":15422:15424   */\n  0x40\n    /* \"#utility.yul\":15411:15420   */\n  dup4\n    /* \"#utility.yul\":15407:15425   */\n  add\n    /* \"#utility.yul\":15398:15404   */\n  dup5\n    /* \"#utility.yul\":15354:15426   */\n  tag_116\n  jump\t// in\ntag_282:\n    /* \"#utility.yul\":14991:15433   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15439:15661   */\ntag_72:\n    /* \"#utility.yul\":15532:15536   */\n  0x00\n    /* \"#utility.yul\":15570:15572   */\n  0x20\n    /* \"#utility.yul\":15559:15568   */\n  dup3\n    /* \"#utility.yul\":15555:15573   */\n  add\n    /* \"#utility.yul\":15547:15573   */\n  swap1\n  pop\n    /* \"#utility.yul\":15583:15654   */\n  tag_284\n    /* \"#utility.yul\":15651:15652   */\n  0x00\n    /* \"#utility.yul\":15640:15649   */\n  dup4\n    /* \"#utility.yul\":15636:15653   */\n  add\n    /* \"#utility.yul\":15627:15633   */\n  dup5\n    /* \"#utility.yul\":15583:15654   */\n  tag_116\n  jump\t// in\ntag_284:\n    /* \"#utility.yul\":15439:15661   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"ChaiToken.sol\":224:4510  contract ChaiToken is ERC20, Ownable {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ChaiToken.sol\":224:4510  contract ChaiToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xb319c6b7\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xec28438a\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0xb319c6b7\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb7bda68f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xcc7a736d\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xced695a4\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9dfc9117\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8c0b5e22\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x3af32abf\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x537df3b6\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x537df3b6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x53eb3bcf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x688188e8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x6d8b0527\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6e16de11\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x3af32abf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x44337ea1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x49192418\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4ebc552d\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x1c0aecfa\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x1c0aecfa\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2958ad7f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0ddc0976\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":452:478  uint256 public taxFees = 5 */\n    tag_5:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":2295:2407  function isWhiteListingEnabled() external view returns(bool)... */\n    tag_7:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":1626:1726  function enableWhiteListing() external onlyOwner... */\n    tag_9:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":2167:2287  function isWhitelisted(address account) external view returns(bool)  ... */\n    tag_11:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":1222:1370  function addToBlacklist(address account) external onlyOwner... */\n    tag_12:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"ChaiToken.sol\":3136:3338  function setSlippageFees(uint256 newSlippageFees) external onlyOwner... */\n    tag_13:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"ChaiToken.sol\":2960:3128  function setTaxes(uint256 newTaxFee) external onlyOwner... */\n    tag_14:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"ChaiToken.sol\":1376:1492  function removeFromBlacklist(address account) external onlyOwner... */\n    tag_15:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"ChaiToken.sol\":3346:3428  function enableTax() external onlyOwner... */\n    tag_16:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      stop\n        /* \"ChaiToken.sol\":1734:1836  function disableWhiteListing() external onlyOwner... */\n    tag_17:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      stop\n        /* \"ChaiToken.sol\":2543:2642  function getMaxTxAmount() external view returns(uint256)... */\n    tag_18:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":2650:2773  function setCoolDownTime(uint256 newCoolDowntime) external onlyOwner... */\n    tag_19:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":1115:1214  function renounceOwnership() public override onlyOwner {... */\n    tag_21:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      stop\n        /* \"ChaiToken.sol\":2045:2161  function removeFromWhitelist(address account) external onlyOwner... */\n    tag_22:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"ChaiToken.sol\":356:399  uint256 public maxTxAmount = _initialSupply */\n    tag_23:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_24:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_25:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":2781:2952  function getContractDetails() external view returns (address, uint256, uint256,uint256)... */\n    tag_26:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":406:445  uint256 public cooldownTime = 1 minutes */\n    tag_28:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":770:795  address public taxAddress */\n    tag_29:\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":485:516  uint256 public SlippageFees = 2 */\n    tag_30:\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":3436:3520  function disableTax() external onlyOwner... */\n    tag_31:\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_32:\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      tag_144\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChaiToken.sol\":1844:2039  function addToWhitelist(address account) external onlyOwner... */\n    tag_33:\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      stop\n        /* \"ChaiToken.sol\":2415:2535  function setMaxTxAmount(uint256 newMaxTxAmount) external onlyOwner... */\n    tag_34:\n      tag_149\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n    tag_149:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_35:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n    tag_152:\n      stop\n        /* \"ChaiToken.sol\":1498:1618  function isBlacklisted(address account) external view returns(bool)  ... */\n    tag_36:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_161\n      jump\t// in\n    tag_162:\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_164\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_163)\n    tag_164:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_165:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_165\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":452:478  uint256 public taxFees = 5 */\n    tag_55:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ChaiToken.sol\":2295:2407  function isWhiteListingEnabled() external view returns(bool)... */\n    tag_62:\n        /* \"ChaiToken.sol\":2350:2354  bool */\n      0x00\n        /* \"ChaiToken.sol\":2379:2399  _whiteListingEnabled */\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ChaiToken.sol\":2372:2399  return _whiteListingEnabled */\n      swap1\n      pop\n        /* \"ChaiToken.sol\":2295:2407  function isWhiteListingEnabled() external view returns(bool)... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":1626:1726  function enableWhiteListing() external onlyOwner... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_180:\n        /* \"ChaiToken.sol\":1714:1718  true */\n      0x01\n        /* \"ChaiToken.sol\":1691:1711  _whiteListingEnabled */\n      0x0e\n      0x00\n        /* \"ChaiToken.sol\":1691:1718  _whiteListingEnabled = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":1626:1726  function enableWhiteListing() external onlyOwner... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ChaiToken.sol\":2167:2287  function isWhitelisted(address account) external view returns(bool)  ... */\n    tag_78:\n        /* \"ChaiToken.sol\":2229:2233  bool */\n      0x00\n        /* \"ChaiToken.sol\":2260:2270  _whitelist */\n      0x0c\n        /* \"ChaiToken.sol\":2260:2279  _whitelist[account] */\n      0x00\n        /* \"ChaiToken.sol\":2271:2278  account */\n      dup4\n        /* \"ChaiToken.sol\":2260:2279  _whitelist[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ChaiToken.sol\":2253:2279  return _whitelist[account] */\n      swap1\n      pop\n        /* \"ChaiToken.sol\":2167:2287  function isWhitelisted(address account) external view returns(bool)  ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":1222:1370  function addToBlacklist(address account) external onlyOwner... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"ChaiToken.sol\":1320:1324  true */\n      0x01\n        /* \"ChaiToken.sol\":1298:1308  _blacklist */\n      0x0b\n        /* \"ChaiToken.sol\":1298:1317  _blacklist[account] */\n      0x00\n        /* \"ChaiToken.sol\":1309:1316  account */\n      dup4\n        /* \"ChaiToken.sol\":1298:1317  _blacklist[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ChaiToken.sol\":1298:1324  _blacklist[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":1357:1362  false */\n      0x00\n        /* \"ChaiToken.sol\":1335:1345  _whitelist */\n      0x0c\n        /* \"ChaiToken.sol\":1335:1354  _whitelist[account] */\n      0x00\n        /* \"ChaiToken.sol\":1346:1353  account */\n      dup4\n        /* \"ChaiToken.sol\":1335:1354  _whitelist[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ChaiToken.sol\":1335:1362  _whitelist[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":1222:1370  function addToBlacklist(address account) external onlyOwner... */\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":3136:3338  function setSlippageFees(uint256 newSlippageFees) external onlyOwner... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"ChaiToken.sol\":3248:3249  5 */\n      0x05\n        /* \"ChaiToken.sol\":3229:3244  newSlippageFees */\n      dup2\n        /* \"ChaiToken.sol\":3229:3249  newSlippageFees <= 5 */\n      gt\n      iszero\n        /* \"ChaiToken.sol\":3221:3289  require(newSlippageFees <= 5 , \"Slippage fees must be less than 5%\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"ChaiToken.sol\":3315:3330  newSlippageFees */\n      dup1\n        /* \"ChaiToken.sol\":3300:3312  SlippageFees */\n      0x0a\n        /* \"ChaiToken.sol\":3300:3330  SlippageFees = newSlippageFees */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":3136:3338  function setSlippageFees(uint256 newSlippageFees) external onlyOwner... */\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":2960:3128  function setTaxes(uint256 newTaxFee) external onlyOwner... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_195:\n        /* \"ChaiToken.sol\":3053:3055  10 */\n      0x0a\n        /* \"ChaiToken.sol\":3040:3049  newTaxFee */\n      dup2\n        /* \"ChaiToken.sol\":3040:3055  newTaxFee <= 10 */\n      gt\n      iszero\n        /* \"ChaiToken.sol\":3032:3090  require(newTaxFee <= 10 , \"Tax fee must be less than 10%\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"ChaiToken.sol\":3111:3120  newTaxFee */\n      dup1\n        /* \"ChaiToken.sol\":3101:3108  taxFees */\n      0x09\n        /* \"ChaiToken.sol\":3101:3120  taxFees = newTaxFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":2960:3128  function setTaxes(uint256 newTaxFee) external onlyOwner... */\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":1376:1492  function removeFromBlacklist(address account) external onlyOwner... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_201:\n        /* \"ChaiToken.sol\":1479:1484  false */\n      0x00\n        /* \"ChaiToken.sol\":1457:1467  _blacklist */\n      0x0b\n        /* \"ChaiToken.sol\":1457:1476  _blacklist[account] */\n      0x00\n        /* \"ChaiToken.sol\":1468:1475  account */\n      dup4\n        /* \"ChaiToken.sol\":1457:1476  _blacklist[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ChaiToken.sol\":1457:1484  _blacklist[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":1376:1492  function removeFromBlacklist(address account) external onlyOwner... */\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":3346:3428  function enableTax() external onlyOwner... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_204:\n        /* \"ChaiToken.sol\":3416:3420  true */\n      0x01\n        /* \"ChaiToken.sol\":3402:3413  _TaxEnabled */\n      0x0e\n      0x01\n        /* \"ChaiToken.sol\":3402:3420  _TaxEnabled = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":3346:3428  function enableTax() external onlyOwner... */\n      jump\t// out\n        /* \"ChaiToken.sol\":1734:1836  function disableWhiteListing() external onlyOwner... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_207:\n        /* \"ChaiToken.sol\":1823:1828  false */\n      0x00\n        /* \"ChaiToken.sol\":1800:1820  _whiteListingEnabled */\n      0x0e\n      0x00\n        /* \"ChaiToken.sol\":1800:1828  _whiteListingEnabled = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":1734:1836  function disableWhiteListing() external onlyOwner... */\n      jump\t// out\n        /* \"ChaiToken.sol\":2543:2642  function getMaxTxAmount() external view returns(uint256)... */\n    tag_98:\n        /* \"ChaiToken.sol\":2591:2598  uint256 */\n      0x00\n        /* \"ChaiToken.sol\":2623:2634  maxTxAmount */\n      sload(0x07)\n        /* \"ChaiToken.sol\":2616:2634  return maxTxAmount */\n      swap1\n      pop\n        /* \"ChaiToken.sol\":2543:2642  function getMaxTxAmount() external view returns(uint256)... */\n      swap1\n      jump\t// out\n        /* \"ChaiToken.sol\":2650:2773  function setCoolDownTime(uint256 newCoolDowntime) external onlyOwner... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"ChaiToken.sol\":2750:2765  newCoolDowntime */\n      dup1\n        /* \"ChaiToken.sol\":2735:2747  cooldownTime */\n      0x08\n        /* \"ChaiToken.sol\":2735:2765  cooldownTime = newCoolDowntime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":2650:2773  function setCoolDownTime(uint256 newCoolDowntime) external onlyOwner... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":1115:1214  function renounceOwnership() public override onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_215:\n        /* \"ChaiToken.sol\":1181:1206  super.renounceOwnership() */\n      tag_217\n        /* \"ChaiToken.sol\":1181:1204  super.renounceOwnership */\n      tag_218\n        /* \"ChaiToken.sol\":1181:1206  super.renounceOwnership() */\n      jump\t// in\n    tag_217:\n        /* \"ChaiToken.sol\":1115:1214  function renounceOwnership() public override onlyOwner {... */\n      jump\t// out\n        /* \"ChaiToken.sol\":2045:2161  function removeFromWhitelist(address account) external onlyOwner... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"ChaiToken.sol\":2148:2153  false */\n      0x00\n        /* \"ChaiToken.sol\":2126:2136  _whitelist */\n      0x0c\n        /* \"ChaiToken.sol\":2126:2145  _whitelist[account] */\n      0x00\n        /* \"ChaiToken.sol\":2137:2144  account */\n      dup4\n        /* \"ChaiToken.sol\":2126:2145  _whitelist[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ChaiToken.sol\":2126:2153  _whitelist[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":2045:2161  function removeFromWhitelist(address account) external onlyOwner... */\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":356:399  uint256 public maxTxAmount = _initialSupply */\n    tag_113:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_224\n      swap1\n      tag_161\n      jump\t// in\n    tag_224:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_225\n      swap1\n      tag_161\n      jump\t// in\n    tag_225:\n      dup1\n      iszero\n      tag_226\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_227\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_226)\n    tag_227:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_228:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_228\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ChaiToken.sol\":2781:2952  function getContractDetails() external view returns (address, uint256, uint256,uint256)... */\n    tag_123:\n        /* \"ChaiToken.sol\":2834:2841  address */\n      0x00\n        /* \"ChaiToken.sol\":2843:2850  uint256 */\n      dup1\n        /* \"ChaiToken.sol\":2852:2859  uint256 */\n      0x00\n        /* \"ChaiToken.sol\":2860:2867  uint256 */\n      dup1\n        /* \"ChaiToken.sol\":2893:2900  owner() */\n      tag_230\n        /* \"ChaiToken.sol\":2893:2898  owner */\n      tag_116\n        /* \"ChaiToken.sol\":2893:2900  owner() */\n      jump\t// in\n    tag_230:\n        /* \"ChaiToken.sol\":2902:2913  maxTxAmount */\n      sload(0x07)\n        /* \"ChaiToken.sol\":2915:2927  cooldownTime */\n      sload(0x08)\n        /* \"ChaiToken.sol\":2929:2943  _initialSupply */\n      sload(0x06)\n        /* \"ChaiToken.sol\":2885:2944  return (owner(), maxTxAmount, cooldownTime, _initialSupply) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"ChaiToken.sol\":2781:2952  function getContractDetails() external view returns (address, uint256, uint256,uint256)... */\n      swap1\n      swap2\n      swap3\n      swap4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":406:445  uint256 public cooldownTime = 1 minutes */\n    tag_131:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"ChaiToken.sol\":770:795  address public taxAddress */\n    tag_134:\n      0x0e\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ChaiToken.sol\":485:516  uint256 public SlippageFees = 2 */\n    tag_137:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"ChaiToken.sol\":3436:3520  function disableTax() external onlyOwner... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_235:\n        /* \"ChaiToken.sol\":3507:3512  false */\n      0x00\n        /* \"ChaiToken.sol\":3493:3504  _TaxEnabled */\n      0x0e\n      0x01\n        /* \"ChaiToken.sol\":3493:3512  _TaxEnabled = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":3436:3520  function disableTax() external onlyOwner... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":1844:2039  function addToWhitelist(address account) external onlyOwner... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_239:\n        /* \"ChaiToken.sol\":1929:1939  _blacklist */\n      0x0b\n        /* \"ChaiToken.sol\":1929:1948  _blacklist[account] */\n      0x00\n        /* \"ChaiToken.sol\":1940:1947  account */\n      dup3\n        /* \"ChaiToken.sol\":1929:1948  _blacklist[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ChaiToken.sol\":1928:1948  !_blacklist[account] */\n      iszero\n        /* \"ChaiToken.sol\":1920:1994  require(!_blacklist[account], \"Blacklisted address cannot be whitelisted\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"ChaiToken.sol\":2027:2031  true */\n      0x01\n        /* \"ChaiToken.sol\":2005:2015  _whitelist */\n      0x0c\n        /* \"ChaiToken.sol\":2005:2024  _whitelist[account] */\n      0x00\n        /* \"ChaiToken.sol\":2016:2023  account */\n      dup4\n        /* \"ChaiToken.sol\":2005:2024  _whitelist[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ChaiToken.sol\":2005:2031  _whitelist[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":1844:2039  function addToWhitelist(address account) external onlyOwner... */\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":2415:2535  function setMaxTxAmount(uint256 newMaxTxAmount) external onlyOwner... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_245:\n        /* \"ChaiToken.sol\":2512:2526  newMaxTxAmount */\n      dup1\n        /* \"ChaiToken.sol\":2498:2509  maxTxAmount */\n      0x07\n        /* \"ChaiToken.sol\":2498:2526  maxTxAmount = newMaxTxAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":2415:2535  function setMaxTxAmount(uint256 newMaxTxAmount) external onlyOwner... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_248\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":1498:1618  function isBlacklisted(address account) external view returns(bool)  ... */\n    tag_157:\n        /* \"ChaiToken.sol\":1560:1564  bool */\n      0x00\n        /* \"ChaiToken.sol\":1591:1601  _blacklist */\n      0x0b\n        /* \"ChaiToken.sol\":1591:1610  _blacklist[account] */\n      0x00\n        /* \"ChaiToken.sol\":1602:1609  account */\n      dup4\n        /* \"ChaiToken.sol\":1591:1610  _blacklist[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ChaiToken.sol\":1584:1610  return _blacklist[account] */\n      swap1\n      pop\n        /* \"ChaiToken.sol\":1498:1618  function isBlacklisted(address account) external view returns(bool)  ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_277\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_282\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_290\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ChaiToken.sol\":3528:4505  function _update(address from, address to, uint256 value) internal override ... */\n    tag_272:\n        /* \"ChaiToken.sol\":3630:3640  _blacklist */\n      0x0b\n        /* \"ChaiToken.sol\":3630:3646  _blacklist[from] */\n      0x00\n        /* \"ChaiToken.sol\":3641:3645  from */\n      dup5\n        /* \"ChaiToken.sol\":3630:3646  _blacklist[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ChaiToken.sol\":3629:3646  !_blacklist[from] */\n      iszero\n        /* \"ChaiToken.sol\":3629:3665  !_blacklist[from] && !_blacklist[to] */\n      dup1\n      iszero\n      tag_292\n      jumpi\n      pop\n        /* \"ChaiToken.sol\":3651:3661  _blacklist */\n      0x0b\n        /* \"ChaiToken.sol\":3651:3665  _blacklist[to] */\n      0x00\n        /* \"ChaiToken.sol\":3662:3664  to */\n      dup4\n        /* \"ChaiToken.sol\":3651:3665  _blacklist[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ChaiToken.sol\":3650:3665  !_blacklist[to] */\n      iszero\n        /* \"ChaiToken.sol\":3629:3665  !_blacklist[from] && !_blacklist[to] */\n    tag_292:\n        /* \"ChaiToken.sol\":3621:3692  require(!_blacklist[from] && !_blacklist[to] , \"Blacklisted Addresses\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_293:\n        /* \"ChaiToken.sol\":3706:3726  _whiteListingEnabled */\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ChaiToken.sol\":3703:3846  if(_whiteListingEnabled)... */\n      iszero\n      tag_296\n      jumpi\n        /* \"ChaiToken.sol\":3760:3770  _whitelist */\n      0x0c\n        /* \"ChaiToken.sol\":3760:3776  _whitelist[from] */\n      0x00\n        /* \"ChaiToken.sol\":3771:3775  from */\n      dup5\n        /* \"ChaiToken.sol\":3760:3776  _whitelist[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ChaiToken.sol\":3760:3794  _whitelist[from] && _whitelist[to] */\n      dup1\n      iszero\n      tag_297\n      jumpi\n      pop\n        /* \"ChaiToken.sol\":3780:3790  _whitelist */\n      0x0c\n        /* \"ChaiToken.sol\":3780:3794  _whitelist[to] */\n      0x00\n        /* \"ChaiToken.sol\":3791:3793  to */\n      dup4\n        /* \"ChaiToken.sol\":3780:3794  _whitelist[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ChaiToken.sol\":3760:3794  _whitelist[from] && _whitelist[to] */\n    tag_297:\n        /* \"ChaiToken.sol\":3752:3834  require(_whitelist[from] && _whitelist[to] , \"Both addresses must be whitelisted\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_298:\n        /* \"ChaiToken.sol\":3703:3846  if(_whiteListingEnabled)... */\n    tag_296:\n        /* \"ChaiToken.sol\":3873:3884  maxTxAmount */\n      sload(0x07)\n        /* \"ChaiToken.sol\":3864:3869  value */\n      dup2\n        /* \"ChaiToken.sol\":3864:3884  value <= maxTxAmount */\n      gt\n      iszero\n        /* \"ChaiToken.sol\":3856:3919  require(value <= maxTxAmount , \"Token Transfer Limit Exceeded\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n        /* \"ChaiToken.sol\":3975:3987  cooldownTime */\n      sload(0x08)\n        /* \"ChaiToken.sol\":3957:3968  _lastTxTime */\n      0x0d\n        /* \"ChaiToken.sol\":3957:3974  _lastTxTime[from] */\n      0x00\n        /* \"ChaiToken.sol\":3969:3973  from */\n      dup6\n        /* \"ChaiToken.sol\":3957:3974  _lastTxTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ChaiToken.sol\":3957:3987  _lastTxTime[from]+cooldownTime */\n      tag_304\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"ChaiToken.sol\":3938:3953  block.timestamp */\n      timestamp\n        /* \"ChaiToken.sol\":3938:3987  block.timestamp >= _lastTxTime[from]+cooldownTime */\n      lt\n      iszero\n        /* \"ChaiToken.sol\":3930:4019  require(block.timestamp >= _lastTxTime[from]+cooldownTime , \"Token Transfer in cooldown\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n        /* \"ChaiToken.sol\":4040:4062  uint256 transferAmount */\n      0x00\n        /* \"ChaiToken.sol\":4065:4070  value */\n      dup2\n        /* \"ChaiToken.sol\":4040:4070  uint256 transferAmount = value */\n      swap1\n      pop\n        /* \"ChaiToken.sol\":4084:4095  _TaxEnabled */\n      0x0e\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ChaiToken.sol\":4081:4354  if(_TaxEnabled)... */\n      iszero\n      tag_309\n      jumpi\n        /* \"ChaiToken.sol\":4121:4138  uint256 totalFees */\n      0x00\n        /* \"ChaiToken.sol\":4151:4163  SlippageFees */\n      sload(0x0a)\n        /* \"ChaiToken.sol\":4141:4148  taxFees */\n      sload(0x09)\n        /* \"ChaiToken.sol\":4141:4163  taxFees + SlippageFees */\n      tag_310\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_310:\n        /* \"ChaiToken.sol\":4121:4163  uint256 totalFees = taxFees + SlippageFees */\n      swap1\n      pop\n        /* \"ChaiToken.sol\":4192:4209  uint256 feeAmount */\n      0x00\n        /* \"ChaiToken.sol\":4232:4235  100 */\n      0x64\n        /* \"ChaiToken.sol\":4221:4230  totalFees */\n      dup3\n        /* \"ChaiToken.sol\":4213:4218  value */\n      dup6\n        /* \"ChaiToken.sol\":4213:4230  value * totalFees */\n      tag_311\n      swap2\n      swap1\n      tag_312\n      jump\t// in\n    tag_311:\n        /* \"ChaiToken.sol\":4212:4235  (value * totalFees)/100 */\n      tag_313\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"ChaiToken.sol\":4192:4235  uint256 feeAmount = (value * totalFees)/100 */\n      swap1\n      pop\n        /* \"ChaiToken.sol\":4275:4284  feeAmount */\n      dup1\n        /* \"ChaiToken.sol\":4267:4272  value */\n      dup5\n        /* \"ChaiToken.sol\":4267:4284  value - feeAmount */\n      tag_315\n      swap2\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n        /* \"ChaiToken.sol\":4250:4284  transferAmount = value - feeAmount */\n      swap3\n      pop\n        /* \"ChaiToken.sol\":4299:4342  super._update(from, taxAddress , feeAmount) */\n      tag_317\n        /* \"ChaiToken.sol\":4313:4317  from */\n      dup7\n        /* \"ChaiToken.sol\":4319:4329  taxAddress */\n      0x0e\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ChaiToken.sol\":4332:4341  feeAmount */\n      dup4\n        /* \"ChaiToken.sol\":4299:4312  super._update */\n      tag_318\n        /* \"ChaiToken.sol\":4299:4342  super._update(from, taxAddress , feeAmount) */\n      jump\t// in\n    tag_317:\n        /* \"ChaiToken.sol\":4106:4354  {... */\n      pop\n      pop\n        /* \"ChaiToken.sol\":4081:4354  if(_TaxEnabled)... */\n    tag_309:\n        /* \"ChaiToken.sol\":4394:4409  block.timestamp */\n      timestamp\n        /* \"ChaiToken.sol\":4374:4385  _lastTxTime */\n      0x0d\n        /* \"ChaiToken.sol\":4374:4391  _lastTxTime[from] */\n      0x00\n        /* \"ChaiToken.sol\":4386:4390  from */\n      dup7\n        /* \"ChaiToken.sol\":4374:4391  _lastTxTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ChaiToken.sol\":4374:4409  _lastTxTime[from] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ChaiToken.sol\":4420:4459  super._update(from, to, transferAmount) */\n      tag_319\n        /* \"ChaiToken.sol\":4434:4438  from */\n      dup5\n        /* \"ChaiToken.sol\":4440:4442  to */\n      dup5\n        /* \"ChaiToken.sol\":4444:4458  transferAmount */\n      dup4\n        /* \"ChaiToken.sol\":4420:4433  super._update */\n      tag_318\n        /* \"ChaiToken.sol\":4420:4459  super._update(from, to, transferAmount) */\n      jump\t// in\n    tag_319:\n        /* \"ChaiToken.sol\":3610:4505  {... */\n      pop\n        /* \"ChaiToken.sol\":3528:4505  function _update(address from, address to, uint256 value) internal override ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_322\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_322:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_323)\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_327)\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_328\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_329:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_330:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_331:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_332:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_333:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_373\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_329\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":711:782   */\n      tag_374\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_330\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_375\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_331\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":881:910   */\n      tag_376\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_332\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_47:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_378\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_333\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_335:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_337:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_338:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_384\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_337\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_339:\n        /* \"#utility.yul\":1876:1900   */\n      tag_386\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_338\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_387:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_340:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_389\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_339\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_341:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_342:\n        /* \"#utility.yul\":2232:2256   */\n      tag_392\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_341\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_393:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_343:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_395\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_342\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_50:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_398\n      tag_335\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2525:2644   */\n    tag_397:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_399\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_340\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_400\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_343\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_344:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_345:\n        /* \"#utility.yul\":3089:3110   */\n      tag_403\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_344\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_53:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_405\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_345\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_346:\n        /* \"#utility.yul\":3426:3450   */\n      tag_407\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_341\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_57:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_409\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_346\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_66:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_412\n      tag_335\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3801:3920   */\n    tag_411:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_413\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_340\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_414\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_340\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_415\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_343\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_347:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_348:\n        /* \"#utility.yul\":4491:4513   */\n      tag_418\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_347\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_74:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_420\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_348\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_77:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_423\n      tag_335\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4822:4941   */\n    tag_422:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_424\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_340\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_85:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_427\n      tag_335\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5157:5276   */\n    tag_426:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_428\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_343\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_349:\n        /* \"#utility.yul\":5503:5527   */\n      tag_430\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_338\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_118:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_432\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_349\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6321   */\n    tag_125:\n        /* \"#utility.yul\":5945:5949   */\n      0x00\n        /* \"#utility.yul\":5983:5986   */\n      0x80\n        /* \"#utility.yul\":5972:5981   */\n      dup3\n        /* \"#utility.yul\":5968:5987   */\n      add\n        /* \"#utility.yul\":5960:5987   */\n      swap1\n      pop\n        /* \"#utility.yul\":5997:6068   */\n      tag_434\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6054:6063   */\n      dup4\n        /* \"#utility.yul\":6050:6067   */\n      add\n        /* \"#utility.yul\":6041:6047   */\n      dup8\n        /* \"#utility.yul\":5997:6068   */\n      tag_349\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6078:6150   */\n      tag_435\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6135:6144   */\n      dup4\n        /* \"#utility.yul\":6131:6149   */\n      add\n        /* \"#utility.yul\":6122:6128   */\n      dup7\n        /* \"#utility.yul\":6078:6150   */\n      tag_346\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6160:6232   */\n      tag_436\n        /* \"#utility.yul\":6228:6230   */\n      0x40\n        /* \"#utility.yul\":6217:6226   */\n      dup4\n        /* \"#utility.yul\":6213:6231   */\n      add\n        /* \"#utility.yul\":6204:6210   */\n      dup6\n        /* \"#utility.yul\":6160:6232   */\n      tag_346\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6242:6314   */\n      tag_437\n        /* \"#utility.yul\":6310:6312   */\n      0x60\n        /* \"#utility.yul\":6299:6308   */\n      dup4\n        /* \"#utility.yul\":6295:6313   */\n      add\n        /* \"#utility.yul\":6286:6292   */\n      dup5\n        /* \"#utility.yul\":6242:6314   */\n      tag_346\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5768:6321   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6327:6801   */\n    tag_143:\n        /* \"#utility.yul\":6395:6401   */\n      0x00\n        /* \"#utility.yul\":6403:6409   */\n      dup1\n        /* \"#utility.yul\":6452:6454   */\n      0x40\n        /* \"#utility.yul\":6440:6449   */\n      dup4\n        /* \"#utility.yul\":6431:6438   */\n      dup6\n        /* \"#utility.yul\":6427:6450   */\n      sub\n        /* \"#utility.yul\":6423:6455   */\n      slt\n        /* \"#utility.yul\":6420:6539   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":6458:6537   */\n      tag_440\n      tag_335\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6420:6539   */\n    tag_439:\n        /* \"#utility.yul\":6578:6579   */\n      0x00\n        /* \"#utility.yul\":6603:6656   */\n      tag_441\n        /* \"#utility.yul\":6648:6655   */\n      dup6\n        /* \"#utility.yul\":6639:6645   */\n      dup3\n        /* \"#utility.yul\":6628:6637   */\n      dup7\n        /* \"#utility.yul\":6624:6646   */\n      add\n        /* \"#utility.yul\":6603:6656   */\n      tag_340\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6593:6656   */\n      swap3\n      pop\n        /* \"#utility.yul\":6549:6666   */\n      pop\n        /* \"#utility.yul\":6705:6707   */\n      0x20\n        /* \"#utility.yul\":6731:6784   */\n      tag_442\n        /* \"#utility.yul\":6776:6783   */\n      dup6\n        /* \"#utility.yul\":6767:6773   */\n      dup3\n        /* \"#utility.yul\":6756:6765   */\n      dup7\n        /* \"#utility.yul\":6752:6774   */\n      add\n        /* \"#utility.yul\":6731:6784   */\n      tag_340\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":6721:6784   */\n      swap2\n      pop\n        /* \"#utility.yul\":6676:6794   */\n      pop\n        /* \"#utility.yul\":6327:6801   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6807:6987   */\n    tag_350:\n        /* \"#utility.yul\":6855:6932   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6852:6853   */\n      0x00\n        /* \"#utility.yul\":6845:6933   */\n      mstore\n        /* \"#utility.yul\":6952:6956   */\n      0x22\n        /* \"#utility.yul\":6949:6950   */\n      0x04\n        /* \"#utility.yul\":6942:6957   */\n      mstore\n        /* \"#utility.yul\":6976:6980   */\n      0x24\n        /* \"#utility.yul\":6973:6974   */\n      0x00\n        /* \"#utility.yul\":6966:6981   */\n      revert\n        /* \"#utility.yul\":6993:7313   */\n    tag_161:\n        /* \"#utility.yul\":7037:7043   */\n      0x00\n        /* \"#utility.yul\":7074:7075   */\n      0x02\n        /* \"#utility.yul\":7068:7072   */\n      dup3\n        /* \"#utility.yul\":7064:7076   */\n      div\n        /* \"#utility.yul\":7054:7076   */\n      swap1\n      pop\n        /* \"#utility.yul\":7121:7122   */\n      0x01\n        /* \"#utility.yul\":7115:7119   */\n      dup3\n        /* \"#utility.yul\":7111:7123   */\n      and\n        /* \"#utility.yul\":7142:7160   */\n      dup1\n        /* \"#utility.yul\":7132:7213   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":7198:7202   */\n      0x7f\n        /* \"#utility.yul\":7190:7196   */\n      dup3\n        /* \"#utility.yul\":7186:7203   */\n      and\n        /* \"#utility.yul\":7176:7203   */\n      swap2\n      pop\n        /* \"#utility.yul\":7132:7213   */\n    tag_445:\n        /* \"#utility.yul\":7260:7262   */\n      0x20\n        /* \"#utility.yul\":7252:7258   */\n      dup3\n        /* \"#utility.yul\":7249:7263   */\n      lt\n        /* \"#utility.yul\":7229:7247   */\n      dup2\n        /* \"#utility.yul\":7226:7264   */\n      sub\n        /* \"#utility.yul\":7223:7307   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":7279:7297   */\n      tag_447\n      tag_350\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7223:7307   */\n    tag_446:\n        /* \"#utility.yul\":7044:7313   */\n      pop\n        /* \"#utility.yul\":6993:7313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7319:7540   */\n    tag_351:\n        /* \"#utility.yul\":7459:7493   */\n      0x536c6970706167652066656573206d757374206265206c657373207468616e20\n        /* \"#utility.yul\":7455:7456   */\n      0x00\n        /* \"#utility.yul\":7447:7453   */\n      dup3\n        /* \"#utility.yul\":7443:7457   */\n      add\n        /* \"#utility.yul\":7436:7494   */\n      mstore\n        /* \"#utility.yul\":7528:7532   */\n      0x3525000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7523:7525   */\n      0x20\n        /* \"#utility.yul\":7515:7521   */\n      dup3\n        /* \"#utility.yul\":7511:7526   */\n      add\n        /* \"#utility.yul\":7504:7533   */\n      mstore\n        /* \"#utility.yul\":7319:7540   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7546:7912   */\n    tag_352:\n        /* \"#utility.yul\":7688:7691   */\n      0x00\n        /* \"#utility.yul\":7709:7776   */\n      tag_450\n        /* \"#utility.yul\":7773:7775   */\n      0x22\n        /* \"#utility.yul\":7768:7771   */\n      dup4\n        /* \"#utility.yul\":7709:7776   */\n      tag_330\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7702:7776   */\n      swap2\n      pop\n        /* \"#utility.yul\":7785:7878   */\n      tag_451\n        /* \"#utility.yul\":7874:7877   */\n      dup3\n        /* \"#utility.yul\":7785:7878   */\n      tag_351\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":7903:7905   */\n      0x40\n        /* \"#utility.yul\":7898:7901   */\n      dup3\n        /* \"#utility.yul\":7894:7906   */\n      add\n        /* \"#utility.yul\":7887:7906   */\n      swap1\n      pop\n        /* \"#utility.yul\":7546:7912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7918:8337   */\n    tag_193:\n        /* \"#utility.yul\":8084:8088   */\n      0x00\n        /* \"#utility.yul\":8122:8124   */\n      0x20\n        /* \"#utility.yul\":8111:8120   */\n      dup3\n        /* \"#utility.yul\":8107:8125   */\n      add\n        /* \"#utility.yul\":8099:8125   */\n      swap1\n      pop\n        /* \"#utility.yul\":8171:8180   */\n      dup2\n        /* \"#utility.yul\":8165:8169   */\n      dup2\n        /* \"#utility.yul\":8161:8181   */\n      sub\n        /* \"#utility.yul\":8157:8158   */\n      0x00\n        /* \"#utility.yul\":8146:8155   */\n      dup4\n        /* \"#utility.yul\":8142:8159   */\n      add\n        /* \"#utility.yul\":8135:8182   */\n      mstore\n        /* \"#utility.yul\":8199:8330   */\n      tag_453\n        /* \"#utility.yul\":8325:8329   */\n      dup2\n        /* \"#utility.yul\":8199:8330   */\n      tag_352\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8191:8330   */\n      swap1\n      pop\n        /* \"#utility.yul\":7918:8337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8343:8522   */\n    tag_353:\n        /* \"#utility.yul\":8483:8514   */\n      0x54617820666565206d757374206265206c657373207468616e20313025000000\n        /* \"#utility.yul\":8479:8480   */\n      0x00\n        /* \"#utility.yul\":8471:8477   */\n      dup3\n        /* \"#utility.yul\":8467:8481   */\n      add\n        /* \"#utility.yul\":8460:8515   */\n      mstore\n        /* \"#utility.yul\":8343:8522   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8528:8894   */\n    tag_354:\n        /* \"#utility.yul\":8670:8673   */\n      0x00\n        /* \"#utility.yul\":8691:8758   */\n      tag_456\n        /* \"#utility.yul\":8755:8757   */\n      0x1d\n        /* \"#utility.yul\":8750:8753   */\n      dup4\n        /* \"#utility.yul\":8691:8758   */\n      tag_330\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8684:8758   */\n      swap2\n      pop\n        /* \"#utility.yul\":8767:8860   */\n      tag_457\n        /* \"#utility.yul\":8856:8859   */\n      dup3\n        /* \"#utility.yul\":8767:8860   */\n      tag_353\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8885:8887   */\n      0x20\n        /* \"#utility.yul\":8880:8883   */\n      dup3\n        /* \"#utility.yul\":8876:8888   */\n      add\n        /* \"#utility.yul\":8869:8888   */\n      swap1\n      pop\n        /* \"#utility.yul\":8528:8894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8900:9319   */\n    tag_199:\n        /* \"#utility.yul\":9066:9070   */\n      0x00\n        /* \"#utility.yul\":9104:9106   */\n      0x20\n        /* \"#utility.yul\":9093:9102   */\n      dup3\n        /* \"#utility.yul\":9089:9107   */\n      add\n        /* \"#utility.yul\":9081:9107   */\n      swap1\n      pop\n        /* \"#utility.yul\":9153:9162   */\n      dup2\n        /* \"#utility.yul\":9147:9151   */\n      dup2\n        /* \"#utility.yul\":9143:9163   */\n      sub\n        /* \"#utility.yul\":9139:9140   */\n      0x00\n        /* \"#utility.yul\":9128:9137   */\n      dup4\n        /* \"#utility.yul\":9124:9141   */\n      add\n        /* \"#utility.yul\":9117:9164   */\n      mstore\n        /* \"#utility.yul\":9181:9312   */\n      tag_459\n        /* \"#utility.yul\":9307:9311   */\n      dup2\n        /* \"#utility.yul\":9181:9312   */\n      tag_354\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9173:9312   */\n      swap1\n      pop\n        /* \"#utility.yul\":8900:9319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9325:9553   */\n    tag_355:\n        /* \"#utility.yul\":9465:9499   */\n      0x426c61636b6c697374656420616464726573732063616e6e6f74206265207768\n        /* \"#utility.yul\":9461:9462   */\n      0x00\n        /* \"#utility.yul\":9453:9459   */\n      dup3\n        /* \"#utility.yul\":9449:9463   */\n      add\n        /* \"#utility.yul\":9442:9500   */\n      mstore\n        /* \"#utility.yul\":9534:9545   */\n      0x6974656c69737465640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9529:9531   */\n      0x20\n        /* \"#utility.yul\":9521:9527   */\n      dup3\n        /* \"#utility.yul\":9517:9532   */\n      add\n        /* \"#utility.yul\":9510:9546   */\n      mstore\n        /* \"#utility.yul\":9325:9553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9559:9925   */\n    tag_356:\n        /* \"#utility.yul\":9701:9704   */\n      0x00\n        /* \"#utility.yul\":9722:9789   */\n      tag_462\n        /* \"#utility.yul\":9786:9788   */\n      0x29\n        /* \"#utility.yul\":9781:9784   */\n      dup4\n        /* \"#utility.yul\":9722:9789   */\n      tag_330\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9715:9789   */\n      swap2\n      pop\n        /* \"#utility.yul\":9798:9891   */\n      tag_463\n        /* \"#utility.yul\":9887:9890   */\n      dup3\n        /* \"#utility.yul\":9798:9891   */\n      tag_355\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":9916:9918   */\n      0x40\n        /* \"#utility.yul\":9911:9914   */\n      dup3\n        /* \"#utility.yul\":9907:9919   */\n      add\n        /* \"#utility.yul\":9900:9919   */\n      swap1\n      pop\n        /* \"#utility.yul\":9559:9925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9931:10350   */\n    tag_243:\n        /* \"#utility.yul\":10097:10101   */\n      0x00\n        /* \"#utility.yul\":10135:10137   */\n      0x20\n        /* \"#utility.yul\":10124:10133   */\n      dup3\n        /* \"#utility.yul\":10120:10138   */\n      add\n        /* \"#utility.yul\":10112:10138   */\n      swap1\n      pop\n        /* \"#utility.yul\":10184:10193   */\n      dup2\n        /* \"#utility.yul\":10178:10182   */\n      dup2\n        /* \"#utility.yul\":10174:10194   */\n      sub\n        /* \"#utility.yul\":10170:10171   */\n      0x00\n        /* \"#utility.yul\":10159:10168   */\n      dup4\n        /* \"#utility.yul\":10155:10172   */\n      add\n        /* \"#utility.yul\":10148:10195   */\n      mstore\n        /* \"#utility.yul\":10212:10343   */\n      tag_465\n        /* \"#utility.yul\":10338:10342   */\n      dup2\n        /* \"#utility.yul\":10212:10343   */\n      tag_356\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10204:10343   */\n      swap1\n      pop\n        /* \"#utility.yul\":9931:10350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10356:10798   */\n    tag_264:\n        /* \"#utility.yul\":10505:10509   */\n      0x00\n        /* \"#utility.yul\":10543:10545   */\n      0x60\n        /* \"#utility.yul\":10532:10541   */\n      dup3\n        /* \"#utility.yul\":10528:10546   */\n      add\n        /* \"#utility.yul\":10520:10546   */\n      swap1\n      pop\n        /* \"#utility.yul\":10556:10627   */\n      tag_467\n        /* \"#utility.yul\":10624:10625   */\n      0x00\n        /* \"#utility.yul\":10613:10622   */\n      dup4\n        /* \"#utility.yul\":10609:10626   */\n      add\n        /* \"#utility.yul\":10600:10606   */\n      dup7\n        /* \"#utility.yul\":10556:10627   */\n      tag_349\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10637:10709   */\n      tag_468\n        /* \"#utility.yul\":10705:10707   */\n      0x20\n        /* \"#utility.yul\":10694:10703   */\n      dup4\n        /* \"#utility.yul\":10690:10708   */\n      add\n        /* \"#utility.yul\":10681:10687   */\n      dup6\n        /* \"#utility.yul\":10637:10709   */\n      tag_346\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10719:10791   */\n      tag_469\n        /* \"#utility.yul\":10787:10789   */\n      0x40\n        /* \"#utility.yul\":10776:10785   */\n      dup4\n        /* \"#utility.yul\":10772:10790   */\n      add\n        /* \"#utility.yul\":10763:10769   */\n      dup5\n        /* \"#utility.yul\":10719:10791   */\n      tag_346\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10356:10798   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10804:10975   */\n    tag_357:\n        /* \"#utility.yul\":10944:10967   */\n      0x426c61636b6c6973746564204164647265737365730000000000000000000000\n        /* \"#utility.yul\":10940:10941   */\n      0x00\n        /* \"#utility.yul\":10932:10938   */\n      dup3\n        /* \"#utility.yul\":10928:10942   */\n      add\n        /* \"#utility.yul\":10921:10968   */\n      mstore\n        /* \"#utility.yul\":10804:10975   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10981:11347   */\n    tag_358:\n        /* \"#utility.yul\":11123:11126   */\n      0x00\n        /* \"#utility.yul\":11144:11211   */\n      tag_472\n        /* \"#utility.yul\":11208:11210   */\n      0x15\n        /* \"#utility.yul\":11203:11206   */\n      dup4\n        /* \"#utility.yul\":11144:11211   */\n      tag_330\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11137:11211   */\n      swap2\n      pop\n        /* \"#utility.yul\":11220:11313   */\n      tag_473\n        /* \"#utility.yul\":11309:11312   */\n      dup3\n        /* \"#utility.yul\":11220:11313   */\n      tag_357\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11338:11340   */\n      0x20\n        /* \"#utility.yul\":11333:11336   */\n      dup3\n        /* \"#utility.yul\":11329:11341   */\n      add\n        /* \"#utility.yul\":11322:11341   */\n      swap1\n      pop\n        /* \"#utility.yul\":10981:11347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11353:11772   */\n    tag_295:\n        /* \"#utility.yul\":11519:11523   */\n      0x00\n        /* \"#utility.yul\":11557:11559   */\n      0x20\n        /* \"#utility.yul\":11546:11555   */\n      dup3\n        /* \"#utility.yul\":11542:11560   */\n      add\n        /* \"#utility.yul\":11534:11560   */\n      swap1\n      pop\n        /* \"#utility.yul\":11606:11615   */\n      dup2\n        /* \"#utility.yul\":11600:11604   */\n      dup2\n        /* \"#utility.yul\":11596:11616   */\n      sub\n        /* \"#utility.yul\":11592:11593   */\n      0x00\n        /* \"#utility.yul\":11581:11590   */\n      dup4\n        /* \"#utility.yul\":11577:11594   */\n      add\n        /* \"#utility.yul\":11570:11617   */\n      mstore\n        /* \"#utility.yul\":11634:11765   */\n      tag_475\n        /* \"#utility.yul\":11760:11764   */\n      dup2\n        /* \"#utility.yul\":11634:11765   */\n      tag_358\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":11626:11765   */\n      swap1\n      pop\n        /* \"#utility.yul\":11353:11772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11778:11999   */\n    tag_359:\n        /* \"#utility.yul\":11918:11952   */\n      0x426f746820616464726573736573206d7573742062652077686974656c697374\n        /* \"#utility.yul\":11914:11915   */\n      0x00\n        /* \"#utility.yul\":11906:11912   */\n      dup3\n        /* \"#utility.yul\":11902:11916   */\n      add\n        /* \"#utility.yul\":11895:11953   */\n      mstore\n        /* \"#utility.yul\":11987:11991   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11982:11984   */\n      0x20\n        /* \"#utility.yul\":11974:11980   */\n      dup3\n        /* \"#utility.yul\":11970:11985   */\n      add\n        /* \"#utility.yul\":11963:11992   */\n      mstore\n        /* \"#utility.yul\":11778:11999   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12005:12371   */\n    tag_360:\n        /* \"#utility.yul\":12147:12150   */\n      0x00\n        /* \"#utility.yul\":12168:12235   */\n      tag_478\n        /* \"#utility.yul\":12232:12234   */\n      0x22\n        /* \"#utility.yul\":12227:12230   */\n      dup4\n        /* \"#utility.yul\":12168:12235   */\n      tag_330\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12161:12235   */\n      swap2\n      pop\n        /* \"#utility.yul\":12244:12337   */\n      tag_479\n        /* \"#utility.yul\":12333:12336   */\n      dup3\n        /* \"#utility.yul\":12244:12337   */\n      tag_359\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12362:12364   */\n      0x40\n        /* \"#utility.yul\":12357:12360   */\n      dup3\n        /* \"#utility.yul\":12353:12365   */\n      add\n        /* \"#utility.yul\":12346:12365   */\n      swap1\n      pop\n        /* \"#utility.yul\":12005:12371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12377:12796   */\n    tag_300:\n        /* \"#utility.yul\":12543:12547   */\n      0x00\n        /* \"#utility.yul\":12581:12583   */\n      0x20\n        /* \"#utility.yul\":12570:12579   */\n      dup3\n        /* \"#utility.yul\":12566:12584   */\n      add\n        /* \"#utility.yul\":12558:12584   */\n      swap1\n      pop\n        /* \"#utility.yul\":12630:12639   */\n      dup2\n        /* \"#utility.yul\":12624:12628   */\n      dup2\n        /* \"#utility.yul\":12620:12640   */\n      sub\n        /* \"#utility.yul\":12616:12617   */\n      0x00\n        /* \"#utility.yul\":12605:12614   */\n      dup4\n        /* \"#utility.yul\":12601:12618   */\n      add\n        /* \"#utility.yul\":12594:12641   */\n      mstore\n        /* \"#utility.yul\":12658:12789   */\n      tag_481\n        /* \"#utility.yul\":12784:12788   */\n      dup2\n        /* \"#utility.yul\":12658:12789   */\n      tag_360\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12650:12789   */\n      swap1\n      pop\n        /* \"#utility.yul\":12377:12796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12802:12981   */\n    tag_361:\n        /* \"#utility.yul\":12942:12973   */\n      0x546f6b656e205472616e73666572204c696d6974204578636565646564000000\n        /* \"#utility.yul\":12938:12939   */\n      0x00\n        /* \"#utility.yul\":12930:12936   */\n      dup3\n        /* \"#utility.yul\":12926:12940   */\n      add\n        /* \"#utility.yul\":12919:12974   */\n      mstore\n        /* \"#utility.yul\":12802:12981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12987:13353   */\n    tag_362:\n        /* \"#utility.yul\":13129:13132   */\n      0x00\n        /* \"#utility.yul\":13150:13217   */\n      tag_484\n        /* \"#utility.yul\":13214:13216   */\n      0x1d\n        /* \"#utility.yul\":13209:13212   */\n      dup4\n        /* \"#utility.yul\":13150:13217   */\n      tag_330\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":13143:13217   */\n      swap2\n      pop\n        /* \"#utility.yul\":13226:13319   */\n      tag_485\n        /* \"#utility.yul\":13315:13318   */\n      dup3\n        /* \"#utility.yul\":13226:13319   */\n      tag_361\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":13344:13346   */\n      0x20\n        /* \"#utility.yul\":13339:13342   */\n      dup3\n        /* \"#utility.yul\":13335:13347   */\n      add\n        /* \"#utility.yul\":13328:13347   */\n      swap1\n      pop\n        /* \"#utility.yul\":12987:13353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13359:13778   */\n    tag_303:\n        /* \"#utility.yul\":13525:13529   */\n      0x00\n        /* \"#utility.yul\":13563:13565   */\n      0x20\n        /* \"#utility.yul\":13552:13561   */\n      dup3\n        /* \"#utility.yul\":13548:13566   */\n      add\n        /* \"#utility.yul\":13540:13566   */\n      swap1\n      pop\n        /* \"#utility.yul\":13612:13621   */\n      dup2\n        /* \"#utility.yul\":13606:13610   */\n      dup2\n        /* \"#utility.yul\":13602:13622   */\n      sub\n        /* \"#utility.yul\":13598:13599   */\n      0x00\n        /* \"#utility.yul\":13587:13596   */\n      dup4\n        /* \"#utility.yul\":13583:13600   */\n      add\n        /* \"#utility.yul\":13576:13623   */\n      mstore\n        /* \"#utility.yul\":13640:13771   */\n      tag_487\n        /* \"#utility.yul\":13766:13770   */\n      dup2\n        /* \"#utility.yul\":13640:13771   */\n      tag_362\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13632:13771   */\n      swap1\n      pop\n        /* \"#utility.yul\":13359:13778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13784:13964   */\n    tag_363:\n        /* \"#utility.yul\":13832:13909   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13829:13830   */\n      0x00\n        /* \"#utility.yul\":13822:13910   */\n      mstore\n        /* \"#utility.yul\":13929:13933   */\n      0x11\n        /* \"#utility.yul\":13926:13927   */\n      0x04\n        /* \"#utility.yul\":13919:13934   */\n      mstore\n        /* \"#utility.yul\":13953:13957   */\n      0x24\n        /* \"#utility.yul\":13950:13951   */\n      0x00\n        /* \"#utility.yul\":13943:13958   */\n      revert\n        /* \"#utility.yul\":13970:14161   */\n    tag_305:\n        /* \"#utility.yul\":14010:14013   */\n      0x00\n        /* \"#utility.yul\":14029:14049   */\n      tag_490\n        /* \"#utility.yul\":14047:14048   */\n      dup3\n        /* \"#utility.yul\":14029:14049   */\n      tag_341\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":14024:14049   */\n      swap2\n      pop\n        /* \"#utility.yul\":14063:14083   */\n      tag_491\n        /* \"#utility.yul\":14081:14082   */\n      dup4\n        /* \"#utility.yul\":14063:14083   */\n      tag_341\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14058:14083   */\n      swap3\n      pop\n        /* \"#utility.yul\":14106:14107   */\n      dup3\n        /* \"#utility.yul\":14103:14104   */\n      dup3\n        /* \"#utility.yul\":14099:14108   */\n      add\n        /* \"#utility.yul\":14092:14108   */\n      swap1\n      pop\n        /* \"#utility.yul\":14127:14130   */\n      dup1\n        /* \"#utility.yul\":14124:14125   */\n      dup3\n        /* \"#utility.yul\":14121:14131   */\n      gt\n        /* \"#utility.yul\":14118:14154   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":14134:14152   */\n      tag_493\n      tag_363\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14118:14154   */\n    tag_492:\n        /* \"#utility.yul\":13970:14161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14167:14343   */\n    tag_364:\n        /* \"#utility.yul\":14307:14335   */\n      0x546f6b656e205472616e7366657220696e20636f6f6c646f776e000000000000\n        /* \"#utility.yul\":14303:14304   */\n      0x00\n        /* \"#utility.yul\":14295:14301   */\n      dup3\n        /* \"#utility.yul\":14291:14305   */\n      add\n        /* \"#utility.yul\":14284:14336   */\n      mstore\n        /* \"#utility.yul\":14167:14343   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14349:14715   */\n    tag_365:\n        /* \"#utility.yul\":14491:14494   */\n      0x00\n        /* \"#utility.yul\":14512:14579   */\n      tag_496\n        /* \"#utility.yul\":14576:14578   */\n      0x1a\n        /* \"#utility.yul\":14571:14574   */\n      dup4\n        /* \"#utility.yul\":14512:14579   */\n      tag_330\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":14505:14579   */\n      swap2\n      pop\n        /* \"#utility.yul\":14588:14681   */\n      tag_497\n        /* \"#utility.yul\":14677:14680   */\n      dup3\n        /* \"#utility.yul\":14588:14681   */\n      tag_364\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":14706:14708   */\n      0x20\n        /* \"#utility.yul\":14701:14704   */\n      dup3\n        /* \"#utility.yul\":14697:14709   */\n      add\n        /* \"#utility.yul\":14690:14709   */\n      swap1\n      pop\n        /* \"#utility.yul\":14349:14715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14721:15140   */\n    tag_308:\n        /* \"#utility.yul\":14887:14891   */\n      0x00\n        /* \"#utility.yul\":14925:14927   */\n      0x20\n        /* \"#utility.yul\":14914:14923   */\n      dup3\n        /* \"#utility.yul\":14910:14928   */\n      add\n        /* \"#utility.yul\":14902:14928   */\n      swap1\n      pop\n        /* \"#utility.yul\":14974:14983   */\n      dup2\n        /* \"#utility.yul\":14968:14972   */\n      dup2\n        /* \"#utility.yul\":14964:14984   */\n      sub\n        /* \"#utility.yul\":14960:14961   */\n      0x00\n        /* \"#utility.yul\":14949:14958   */\n      dup4\n        /* \"#utility.yul\":14945:14962   */\n      add\n        /* \"#utility.yul\":14938:14985   */\n      mstore\n        /* \"#utility.yul\":15002:15133   */\n      tag_499\n        /* \"#utility.yul\":15128:15132   */\n      dup2\n        /* \"#utility.yul\":15002:15133   */\n      tag_365\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14994:15133   */\n      swap1\n      pop\n        /* \"#utility.yul\":14721:15140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15146:15556   */\n    tag_312:\n        /* \"#utility.yul\":15186:15193   */\n      0x00\n        /* \"#utility.yul\":15209:15229   */\n      tag_501\n        /* \"#utility.yul\":15227:15228   */\n      dup3\n        /* \"#utility.yul\":15209:15229   */\n      tag_341\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":15204:15229   */\n      swap2\n      pop\n        /* \"#utility.yul\":15243:15263   */\n      tag_502\n        /* \"#utility.yul\":15261:15262   */\n      dup4\n        /* \"#utility.yul\":15243:15263   */\n      tag_341\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":15238:15263   */\n      swap3\n      pop\n        /* \"#utility.yul\":15298:15299   */\n      dup3\n        /* \"#utility.yul\":15295:15296   */\n      dup3\n        /* \"#utility.yul\":15291:15300   */\n      mul\n        /* \"#utility.yul\":15320:15350   */\n      tag_503\n        /* \"#utility.yul\":15338:15349   */\n      dup2\n        /* \"#utility.yul\":15320:15350   */\n      tag_341\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":15309:15350   */\n      swap2\n      pop\n        /* \"#utility.yul\":15499:15500   */\n      dup3\n        /* \"#utility.yul\":15490:15497   */\n      dup3\n        /* \"#utility.yul\":15486:15501   */\n      div\n        /* \"#utility.yul\":15483:15484   */\n      dup5\n        /* \"#utility.yul\":15480:15502   */\n      eq\n        /* \"#utility.yul\":15460:15461   */\n      dup4\n        /* \"#utility.yul\":15453:15462   */\n      iszero\n        /* \"#utility.yul\":15433:15516   */\n      or\n        /* \"#utility.yul\":15410:15549   */\n      tag_504\n      jumpi\n        /* \"#utility.yul\":15529:15547   */\n      tag_505\n      tag_363\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":15410:15549   */\n    tag_504:\n        /* \"#utility.yul\":15194:15556   */\n      pop\n        /* \"#utility.yul\":15146:15556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15562:15742   */\n    tag_366:\n        /* \"#utility.yul\":15610:15687   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15607:15608   */\n      0x00\n        /* \"#utility.yul\":15600:15688   */\n      mstore\n        /* \"#utility.yul\":15707:15711   */\n      0x12\n        /* \"#utility.yul\":15704:15705   */\n      0x04\n        /* \"#utility.yul\":15697:15712   */\n      mstore\n        /* \"#utility.yul\":15731:15735   */\n      0x24\n        /* \"#utility.yul\":15728:15729   */\n      0x00\n        /* \"#utility.yul\":15721:15736   */\n      revert\n        /* \"#utility.yul\":15748:15933   */\n    tag_314:\n        /* \"#utility.yul\":15788:15789   */\n      0x00\n        /* \"#utility.yul\":15805:15825   */\n      tag_508\n        /* \"#utility.yul\":15823:15824   */\n      dup3\n        /* \"#utility.yul\":15805:15825   */\n      tag_341\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":15800:15825   */\n      swap2\n      pop\n        /* \"#utility.yul\":15839:15859   */\n      tag_509\n        /* \"#utility.yul\":15857:15858   */\n      dup4\n        /* \"#utility.yul\":15839:15859   */\n      tag_341\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":15834:15859   */\n      swap3\n      pop\n        /* \"#utility.yul\":15878:15879   */\n      dup3\n        /* \"#utility.yul\":15868:15903   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":15883:15901   */\n      tag_511\n      tag_366\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":15868:15903   */\n    tag_510:\n        /* \"#utility.yul\":15925:15926   */\n      dup3\n        /* \"#utility.yul\":15922:15923   */\n      dup3\n        /* \"#utility.yul\":15918:15927   */\n      div\n        /* \"#utility.yul\":15913:15927   */\n      swap1\n      pop\n        /* \"#utility.yul\":15748:15933   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15939:16133   */\n    tag_316:\n        /* \"#utility.yul\":15979:15983   */\n      0x00\n        /* \"#utility.yul\":15999:16019   */\n      tag_513\n        /* \"#utility.yul\":16017:16018   */\n      dup3\n        /* \"#utility.yul\":15999:16019   */\n      tag_341\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":15994:16019   */\n      swap2\n      pop\n        /* \"#utility.yul\":16033:16053   */\n      tag_514\n        /* \"#utility.yul\":16051:16052   */\n      dup4\n        /* \"#utility.yul\":16033:16053   */\n      tag_341\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":16028:16053   */\n      swap3\n      pop\n        /* \"#utility.yul\":16077:16078   */\n      dup3\n        /* \"#utility.yul\":16074:16075   */\n      dup3\n        /* \"#utility.yul\":16070:16079   */\n      sub\n        /* \"#utility.yul\":16062:16079   */\n      swap1\n      pop\n        /* \"#utility.yul\":16101:16102   */\n      dup2\n        /* \"#utility.yul\":16095:16099   */\n      dup2\n        /* \"#utility.yul\":16092:16103   */\n      gt\n        /* \"#utility.yul\":16089:16126   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":16106:16124   */\n      tag_516\n      tag_363\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":16089:16126   */\n    tag_515:\n        /* \"#utility.yul\":15939:16133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c8eef9ad00a7b632390a46735f590f1c972c5b793843d324fb126788631b197364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1011": {
									"entryPoint": null,
									"id": 1011,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 814,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 619,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1362": {
									"entryPoint": 947,
									"id": 1362,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1846,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 611,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 2985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2440,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 3471,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 3437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 3330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 3363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 3228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7": {
									"entryPoint": 3871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72": {
									"entryPoint": 3975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 3240,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 3372,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15664:7",
										"nodeType": "YulBlock",
										"src": "0:15664:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:7",
													"nodeType": "YulBlock",
													"src": "35:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:7",
																		"nodeType": "YulLiteral",
																		"src": "52:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:7",
																		"nodeType": "YulLiteral",
																		"src": "55:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:7"
																},
																"nativeSrc": "45:88:7",
																"nodeType": "YulFunctionCall",
																"src": "45:88:7"
															},
															"nativeSrc": "45:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:7",
																		"nodeType": "YulLiteral",
																		"src": "149:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:7",
																		"nodeType": "YulLiteral",
																		"src": "152:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:7"
																},
																"nativeSrc": "142:15:7",
																"nodeType": "YulFunctionCall",
																"src": "142:15:7"
															},
															"nativeSrc": "142:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:7",
																		"nodeType": "YulLiteral",
																		"src": "173:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:7",
																		"nodeType": "YulLiteral",
																		"src": "176:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nativeSrc": "166:15:7",
																"nodeType": "YulFunctionCall",
																"src": "166:15:7"
															},
															"nativeSrc": "166:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:7"
											},
											{
												"body": {
													"nativeSrc": "244:51:7",
													"nodeType": "YulBlock",
													"src": "244:51:7",
													"statements": [
														{
															"nativeSrc": "254:34:7",
															"nodeType": "YulAssignment",
															"src": "254:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "279:1:7",
																		"nodeType": "YulLiteral",
																		"src": "279:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "282:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "282:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "275:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nativeSrc": "275:13:7",
																"nodeType": "YulFunctionCall",
																"src": "275:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "254:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "254:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "193:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "225:5:7",
														"nodeType": "YulTypedName",
														"src": "225:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "235:8:7",
														"nodeType": "YulTypedName",
														"src": "235:8:7",
														"type": ""
													}
												],
												"src": "193:102:7"
											},
											{
												"body": {
													"nativeSrc": "374:775:7",
													"nodeType": "YulBlock",
													"src": "374:775:7",
													"statements": [
														{
															"nativeSrc": "384:15:7",
															"nodeType": "YulAssignment",
															"src": "384:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "393:6:7",
																"nodeType": "YulIdentifier",
																"src": "393:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "384:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "384:5:7"
																}
															]
														},
														{
															"nativeSrc": "408:14:7",
															"nodeType": "YulAssignment",
															"src": "408:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "417:5:7",
																"nodeType": "YulIdentifier",
																"src": "417:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "408:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "408:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "466:677:7",
																"nodeType": "YulBlock",
																"src": "466:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "554:22:7",
																			"nodeType": "YulBlock",
																			"src": "554:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "556:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "556:16:7"
																						},
																						"nativeSrc": "556:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "556:18:7"
																					},
																					"nativeSrc": "556:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "556:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "532:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "532:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "542:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "547:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "547:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "538:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "538:3:7"
																					},
																					"nativeSrc": "538:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "538:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "529:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "529:2:7"
																			},
																			"nativeSrc": "529:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "529:24:7"
																		},
																		"nativeSrc": "526:50:7",
																		"nodeType": "YulIf",
																		"src": "526:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "621:419:7",
																			"nodeType": "YulBlock",
																			"src": "621:419:7",
																			"statements": [
																				{
																					"nativeSrc": "1001:25:7",
																					"nodeType": "YulAssignment",
																					"src": "1001:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "1014:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1014:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "1021:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1021:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "1010:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1010:3:7"
																						},
																						"nativeSrc": "1010:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1010:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "1001:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1001:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "596:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "596:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "606:1:7",
																					"nodeType": "YulLiteral",
																					"src": "606:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "592:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "592:3:7"
																			},
																			"nativeSrc": "592:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "592:16:7"
																		},
																		"nativeSrc": "589:451:7",
																		"nodeType": "YulIf",
																		"src": "589:451:7"
																	},
																	{
																		"nativeSrc": "1053:23:7",
																		"nodeType": "YulAssignment",
																		"src": "1053:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1065:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1065:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "1071:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1071:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "1061:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1061:3:7"
																			},
																			"nativeSrc": "1061:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1061:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "1053:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1053:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1089:44:7",
																		"nodeType": "YulAssignment",
																		"src": "1089:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "1124:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "1124:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "1101:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "1101:22:7"
																			},
																			"nativeSrc": "1101:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1101:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "1089:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1089:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "442:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "442:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "452:1:7",
																		"nodeType": "YulLiteral",
																		"src": "452:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "439:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "439:2:7"
																},
																"nativeSrc": "439:15:7",
																"nodeType": "YulFunctionCall",
																"src": "439:15:7"
															},
															"nativeSrc": "431:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "455:2:7",
																"nodeType": "YulBlock",
																"src": "455:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "435:3:7",
																"nodeType": "YulBlock",
																"src": "435:3:7",
																"statements": []
															},
															"src": "431:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "301:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "329:6:7",
														"nodeType": "YulTypedName",
														"src": "329:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "337:5:7",
														"nodeType": "YulTypedName",
														"src": "337:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "344:8:7",
														"nodeType": "YulTypedName",
														"src": "344:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "354:3:7",
														"nodeType": "YulTypedName",
														"src": "354:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "362:5:7",
														"nodeType": "YulTypedName",
														"src": "362:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "369:4:7",
														"nodeType": "YulTypedName",
														"src": "369:4:7",
														"type": ""
													}
												],
												"src": "301:848:7"
											},
											{
												"body": {
													"nativeSrc": "1215:1013:7",
													"nodeType": "YulBlock",
													"src": "1215:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1410:20:7",
																"nodeType": "YulBlock",
																"src": "1410:20:7",
																"statements": [
																	{
																		"nativeSrc": "1412:10:7",
																		"nodeType": "YulAssignment",
																		"src": "1412:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1421:1:7",
																			"nodeType": "YulLiteral",
																			"src": "1421:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1412:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1412:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1423:5:7",
																		"nodeType": "YulLeave",
																		"src": "1423:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "1400:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1400:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:7"
																},
																"nativeSrc": "1393:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1393:16:7"
															},
															"nativeSrc": "1390:40:7",
															"nodeType": "YulIf",
															"src": "1390:40:7"
														},
														{
															"body": {
																"nativeSrc": "1455:20:7",
																"nodeType": "YulBlock",
																"src": "1455:20:7",
																"statements": [
																	{
																		"nativeSrc": "1457:10:7",
																		"nodeType": "YulAssignment",
																		"src": "1457:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1466:1:7",
																			"nodeType": "YulLiteral",
																			"src": "1466:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1457:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1457:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1468:5:7",
																		"nodeType": "YulLeave",
																		"src": "1468:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1449:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1449:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1442:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:7"
																},
																"nativeSrc": "1442:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1442:12:7"
															},
															"nativeSrc": "1439:36:7",
															"nodeType": "YulIf",
															"src": "1439:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1585:20:7",
																		"nodeType": "YulBlock",
																		"src": "1585:20:7",
																		"statements": [
																			{
																				"nativeSrc": "1587:10:7",
																				"nodeType": "YulAssignment",
																				"src": "1587:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1596:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1596:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1587:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1587:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1598:5:7",
																				"nodeType": "YulLeave",
																				"src": "1598:5:7"
																			}
																		]
																	},
																	"nativeSrc": "1578:27:7",
																	"nodeType": "YulCase",
																	"src": "1578:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1583:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1583:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1629:176:7",
																		"nodeType": "YulBlock",
																		"src": "1629:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "1664:22:7",
																					"nodeType": "YulBlock",
																					"src": "1664:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1666:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "1666:16:7"
																								},
																								"nativeSrc": "1666:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1666:18:7"
																							},
																							"nativeSrc": "1666:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "1666:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "1649:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "1649:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1659:3:7",
																							"nodeType": "YulLiteral",
																							"src": "1659:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1646:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1646:2:7"
																					},
																					"nativeSrc": "1646:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1646:17:7"
																				},
																				"nativeSrc": "1643:43:7",
																				"nodeType": "YulIf",
																				"src": "1643:43:7"
																			},
																			{
																				"nativeSrc": "1699:25:7",
																				"nodeType": "YulAssignment",
																				"src": "1699:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1712:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1712:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "1715:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "1715:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "1708:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1708:3:7"
																					},
																					"nativeSrc": "1708:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1708:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1699:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1699:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1755:22:7",
																					"nodeType": "YulBlock",
																					"src": "1755:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1757:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "1757:16:7"
																								},
																								"nativeSrc": "1757:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1757:18:7"
																							},
																							"nativeSrc": "1757:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "1757:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "1743:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1743:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "1750:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1750:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1740:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1740:2:7"
																					},
																					"nativeSrc": "1740:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1740:14:7"
																				},
																				"nativeSrc": "1737:40:7",
																				"nodeType": "YulIf",
																				"src": "1737:40:7"
																			},
																			{
																				"nativeSrc": "1790:5:7",
																				"nodeType": "YulLeave",
																				"src": "1790:5:7"
																			}
																		]
																	},
																	"nativeSrc": "1614:191:7",
																	"nodeType": "YulCase",
																	"src": "1614:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1619:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1619:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "1535:4:7",
																"nodeType": "YulIdentifier",
																"src": "1535:4:7"
															},
															"nativeSrc": "1528:277:7",
															"nodeType": "YulSwitch",
															"src": "1528:277:7"
														},
														{
															"body": {
																"nativeSrc": "1937:123:7",
																"nodeType": "YulBlock",
																"src": "1937:123:7",
																"statements": [
																	{
																		"nativeSrc": "1951:28:7",
																		"nodeType": "YulAssignment",
																		"src": "1951:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1964:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1964:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "1970:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "1970:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "1960:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1960:3:7"
																			},
																			"nativeSrc": "1960:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1960:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1951:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1951:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2010:22:7",
																			"nodeType": "YulBlock",
																			"src": "2010:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "2012:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "2012:16:7"
																						},
																						"nativeSrc": "2012:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2012:18:7"
																					},
																					"nativeSrc": "2012:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "2012:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "1998:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1998:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "2005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2005:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "1995:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1995:2:7"
																			},
																			"nativeSrc": "1995:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1995:14:7"
																		},
																		"nativeSrc": "1992:40:7",
																		"nodeType": "YulIf",
																		"src": "1992:40:7"
																	},
																	{
																		"nativeSrc": "2045:5:7",
																		"nodeType": "YulLeave",
																		"src": "2045:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1840:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1840:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1846:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1846:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1837:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1837:2:7"
																				},
																				"nativeSrc": "1837:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1854:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "1854:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1864:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1864:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1851:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1851:2:7"
																				},
																				"nativeSrc": "1851:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1851:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:7"
																		},
																		"nativeSrc": "1833:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1889:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1889:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1895:3:7",
																						"nodeType": "YulLiteral",
																						"src": "1895:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1886:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1886:2:7"
																				},
																				"nativeSrc": "1886:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1886:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1904:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "1904:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1914:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1914:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1901:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1901:2:7"
																				},
																				"nativeSrc": "1901:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1901:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1882:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:7"
																		},
																		"nativeSrc": "1882:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1882:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1817:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1817:2:7"
																},
																"nativeSrc": "1817:111:7",
																"nodeType": "YulFunctionCall",
																"src": "1817:111:7"
															},
															"nativeSrc": "1814:246:7",
															"nodeType": "YulIf",
															"src": "1814:246:7"
														},
														{
															"nativeSrc": "2070:57:7",
															"nodeType": "YulAssignment",
															"src": "2070:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2104:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2104:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2107:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2107:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2113:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2113:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "2123:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2123:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "2085:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:7"
																},
																"nativeSrc": "2085:42:7",
																"nodeType": "YulFunctionCall",
																"src": "2085:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2070:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2070:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "2077:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2166:22:7",
																"nodeType": "YulBlock",
																"src": "2166:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2168:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2168:16:7"
																			},
																			"nativeSrc": "2168:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2168:18:7"
																		},
																		"nativeSrc": "2168:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2168:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2143:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2143:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "2154:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2154:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "2159:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2159:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2150:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:7"
																		},
																		"nativeSrc": "2150:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2150:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2140:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:7"
																},
																"nativeSrc": "2140:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2140:25:7"
															},
															"nativeSrc": "2137:51:7",
															"nodeType": "YulIf",
															"src": "2137:51:7"
														},
														{
															"nativeSrc": "2197:25:7",
															"nodeType": "YulAssignment",
															"src": "2197:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2210:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2210:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2217:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2217:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2206:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2206:3:7"
																},
																"nativeSrc": "2206:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2206:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2197:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2197:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "1155:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "1185:4:7",
														"nodeType": "YulTypedName",
														"src": "1185:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1191:8:7",
														"nodeType": "YulTypedName",
														"src": "1191:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "1201:3:7",
														"nodeType": "YulTypedName",
														"src": "1201:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1209:5:7",
														"nodeType": "YulTypedName",
														"src": "1209:5:7",
														"type": ""
													}
												],
												"src": "1155:1073:7"
											},
											{
												"body": {
													"nativeSrc": "2279:32:7",
													"nodeType": "YulBlock",
													"src": "2279:32:7",
													"statements": [
														{
															"nativeSrc": "2289:16:7",
															"nodeType": "YulAssignment",
															"src": "2289:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2300:5:7",
																"nodeType": "YulIdentifier",
																"src": "2300:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2289:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2289:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2234:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2261:5:7",
														"nodeType": "YulTypedName",
														"src": "2261:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2271:7:7",
														"nodeType": "YulTypedName",
														"src": "2271:7:7",
														"type": ""
													}
												],
												"src": "2234:77:7"
											},
											{
												"body": {
													"nativeSrc": "2360:43:7",
													"nodeType": "YulBlock",
													"src": "2360:43:7",
													"statements": [
														{
															"nativeSrc": "2370:27:7",
															"nodeType": "YulAssignment",
															"src": "2370:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2385:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2385:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2392:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2381:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2381:3:7"
																},
																"nativeSrc": "2381:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2381:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2370:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2370:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2317:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2342:5:7",
														"nodeType": "YulTypedName",
														"src": "2342:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2352:7:7",
														"nodeType": "YulTypedName",
														"src": "2352:7:7",
														"type": ""
													}
												],
												"src": "2317:86:7"
											},
											{
												"body": {
													"nativeSrc": "2473:217:7",
													"nodeType": "YulBlock",
													"src": "2473:217:7",
													"statements": [
														{
															"nativeSrc": "2483:31:7",
															"nodeType": "YulAssignment",
															"src": "2483:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2509:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2509:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2491:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2491:17:7"
																},
																"nativeSrc": "2491:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2491:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2483:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2483:4:7"
																}
															]
														},
														{
															"nativeSrc": "2523:37:7",
															"nodeType": "YulAssignment",
															"src": "2523:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2551:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2551:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "2535:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "2535:15:7"
																},
																"nativeSrc": "2535:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2535:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "2523:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2523:8:7"
																}
															]
														},
														{
															"nativeSrc": "2570:113:7",
															"nodeType": "YulAssignment",
															"src": "2570:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2600:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2600:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2606:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2606:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2616:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2616:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "2579:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "2579:20:7"
																},
																"nativeSrc": "2579:104:7",
																"nodeType": "YulFunctionCall",
																"src": "2579:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2570:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2570:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "2409:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "2448:4:7",
														"nodeType": "YulTypedName",
														"src": "2448:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2454:8:7",
														"nodeType": "YulTypedName",
														"src": "2454:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2467:5:7",
														"nodeType": "YulTypedName",
														"src": "2467:5:7",
														"type": ""
													}
												],
												"src": "2409:281:7"
											},
											{
												"body": {
													"nativeSrc": "2744:362:7",
													"nodeType": "YulBlock",
													"src": "2744:362:7",
													"statements": [
														{
															"nativeSrc": "2754:25:7",
															"nodeType": "YulAssignment",
															"src": "2754:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2777:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2777:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2759:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:7"
																},
																"nativeSrc": "2759:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2759:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2754:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "2754:1:7"
																}
															]
														},
														{
															"nativeSrc": "2788:25:7",
															"nodeType": "YulAssignment",
															"src": "2788:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2811:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2811:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2793:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2793:17:7"
																},
																"nativeSrc": "2793:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2793:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2788:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "2788:1:7"
																}
															]
														},
														{
															"nativeSrc": "2822:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2822:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2845:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2845:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2848:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2848:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:7"
																},
																"nativeSrc": "2841:9:7",
																"nodeType": "YulFunctionCall",
																"src": "2841:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2826:11:7",
																	"nodeType": "YulTypedName",
																	"src": "2826:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2859:41:7",
															"nodeType": "YulAssignment",
															"src": "2859:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2888:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "2888:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2870:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2870:17:7"
																},
																"nativeSrc": "2870:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2870:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2859:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2859:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3077:22:7",
																"nodeType": "YulBlock",
																"src": "3077:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3079:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3079:16:7"
																			},
																			"nativeSrc": "3079:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3079:18:7"
																		},
																		"nativeSrc": "3079:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3079:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3010:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "3010:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3003:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3003:6:7"
																				},
																				"nativeSrc": "3003:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3003:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3033:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "3033:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3040:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "3040:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3049:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "3049:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3036:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3036:3:7"
																						},
																						"nativeSrc": "3036:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3036:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3030:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "3030:2:7"
																				},
																				"nativeSrc": "3030:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3030:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2983:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2983:2:7"
																		},
																		"nativeSrc": "2983:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2963:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2963:6:7"
																},
																"nativeSrc": "2963:113:7",
																"nodeType": "YulFunctionCall",
																"src": "2963:113:7"
															},
															"nativeSrc": "2960:139:7",
															"nodeType": "YulIf",
															"src": "2960:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2696:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2727:1:7",
														"nodeType": "YulTypedName",
														"src": "2727:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2730:1:7",
														"nodeType": "YulTypedName",
														"src": "2730:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2736:7:7",
														"nodeType": "YulTypedName",
														"src": "2736:7:7",
														"type": ""
													}
												],
												"src": "2696:410:7"
											},
											{
												"body": {
													"nativeSrc": "3152:35:7",
													"nodeType": "YulBlock",
													"src": "3152:35:7",
													"statements": [
														{
															"nativeSrc": "3162:19:7",
															"nodeType": "YulAssignment",
															"src": "3162:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3178:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3178:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3172:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3172:5:7"
																},
																"nativeSrc": "3172:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3172:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3162:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "3112:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3145:6:7",
														"nodeType": "YulTypedName",
														"src": "3145:6:7",
														"type": ""
													}
												],
												"src": "3112:75:7"
											},
											{
												"body": {
													"nativeSrc": "3282:28:7",
													"nodeType": "YulBlock",
													"src": "3282:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3299:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3299:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3302:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3302:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:7"
																},
																"nativeSrc": "3292:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3292:12:7"
															},
															"nativeSrc": "3292:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3292:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "3193:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3193:117:7"
											},
											{
												"body": {
													"nativeSrc": "3405:28:7",
													"nodeType": "YulBlock",
													"src": "3405:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3422:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3422:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3425:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3425:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3415:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:7"
																},
																"nativeSrc": "3415:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3415:12:7"
															},
															"nativeSrc": "3415:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3415:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "3316:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3316:117:7"
											},
											{
												"body": {
													"nativeSrc": "3484:81:7",
													"nodeType": "YulBlock",
													"src": "3484:81:7",
													"statements": [
														{
															"nativeSrc": "3494:65:7",
															"nodeType": "YulAssignment",
															"src": "3494:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3509:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3509:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3516:42:7",
																		"nodeType": "YulLiteral",
																		"src": "3516:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3505:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:7"
																},
																"nativeSrc": "3505:54:7",
																"nodeType": "YulFunctionCall",
																"src": "3505:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3494:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3494:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3439:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3466:5:7",
														"nodeType": "YulTypedName",
														"src": "3466:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3476:7:7",
														"nodeType": "YulTypedName",
														"src": "3476:7:7",
														"type": ""
													}
												],
												"src": "3439:126:7"
											},
											{
												"body": {
													"nativeSrc": "3616:51:7",
													"nodeType": "YulBlock",
													"src": "3616:51:7",
													"statements": [
														{
															"nativeSrc": "3626:35:7",
															"nodeType": "YulAssignment",
															"src": "3626:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3655:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3655:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3637:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3637:17:7"
																},
																"nativeSrc": "3637:24:7",
																"nodeType": "YulFunctionCall",
																"src": "3637:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3626:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3626:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3571:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3598:5:7",
														"nodeType": "YulTypedName",
														"src": "3598:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3608:7:7",
														"nodeType": "YulTypedName",
														"src": "3608:7:7",
														"type": ""
													}
												],
												"src": "3571:96:7"
											},
											{
												"body": {
													"nativeSrc": "3716:79:7",
													"nodeType": "YulBlock",
													"src": "3716:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3773:16:7",
																"nodeType": "YulBlock",
																"src": "3773:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3782:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3782:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3785:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3785:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3775:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3775:6:7"
																			},
																			"nativeSrc": "3775:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3775:12:7"
																		},
																		"nativeSrc": "3775:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3775:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3739:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3739:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3764:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3764:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3746:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3746:17:7"
																				},
																				"nativeSrc": "3746:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3746:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3736:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3736:2:7"
																		},
																		"nativeSrc": "3736:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3736:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3729:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:7"
																},
																"nativeSrc": "3729:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3729:43:7"
															},
															"nativeSrc": "3726:63:7",
															"nodeType": "YulIf",
															"src": "3726:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3673:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3709:5:7",
														"nodeType": "YulTypedName",
														"src": "3709:5:7",
														"type": ""
													}
												],
												"src": "3673:122:7"
											},
											{
												"body": {
													"nativeSrc": "3864:80:7",
													"nodeType": "YulBlock",
													"src": "3864:80:7",
													"statements": [
														{
															"nativeSrc": "3874:22:7",
															"nodeType": "YulAssignment",
															"src": "3874:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3889:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3889:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3883:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3883:5:7"
																},
																"nativeSrc": "3883:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3883:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3874:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3874:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3932:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3932:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3905:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3905:26:7"
																},
																"nativeSrc": "3905:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3905:33:7"
															},
															"nativeSrc": "3905:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3905:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3801:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3842:6:7",
														"nodeType": "YulTypedName",
														"src": "3842:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3850:3:7",
														"nodeType": "YulTypedName",
														"src": "3850:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3858:5:7",
														"nodeType": "YulTypedName",
														"src": "3858:5:7",
														"type": ""
													}
												],
												"src": "3801:143:7"
											},
											{
												"body": {
													"nativeSrc": "4044:413:7",
													"nodeType": "YulBlock",
													"src": "4044:413:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4090:83:7",
																"nodeType": "YulBlock",
																"src": "4090:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4092:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4092:77:7"
																			},
																			"nativeSrc": "4092:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4092:79:7"
																		},
																		"nativeSrc": "4092:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4092:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4074:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4061:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4061:3:7"
																		},
																		"nativeSrc": "4061:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4057:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4057:3:7"
																},
																"nativeSrc": "4057:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4057:32:7"
															},
															"nativeSrc": "4054:119:7",
															"nodeType": "YulIf",
															"src": "4054:119:7"
														},
														{
															"nativeSrc": "4183:128:7",
															"nodeType": "YulBlock",
															"src": "4183:128:7",
															"statements": [
																{
																	"nativeSrc": "4198:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4198:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4212:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4212:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4202:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4202:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4227:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4227:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4273:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4273:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4284:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4284:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4269:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4269:3:7"
																				},
																				"nativeSrc": "4269:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4269:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4293:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4293:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4237:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4237:31:7"
																		},
																		"nativeSrc": "4237:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4237:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4227:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4227:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4321:129:7",
															"nodeType": "YulBlock",
															"src": "4321:129:7",
															"statements": [
																{
																	"nativeSrc": "4336:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4336:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4350:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4350:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4340:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4340:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4366:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4366:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4412:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4412:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4423:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4423:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4408:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4408:3:7"
																				},
																				"nativeSrc": "4408:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4408:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4432:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4432:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4376:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4376:31:7"
																		},
																		"nativeSrc": "4376:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4376:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4366:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4366:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "3950:507:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4006:9:7",
														"nodeType": "YulTypedName",
														"src": "4006:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4017:7:7",
														"nodeType": "YulTypedName",
														"src": "4017:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4029:6:7",
														"nodeType": "YulTypedName",
														"src": "4029:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4037:6:7",
														"nodeType": "YulTypedName",
														"src": "4037:6:7",
														"type": ""
													}
												],
												"src": "3950:507:7"
											},
											{
												"body": {
													"nativeSrc": "4522:40:7",
													"nodeType": "YulBlock",
													"src": "4522:40:7",
													"statements": [
														{
															"nativeSrc": "4533:22:7",
															"nodeType": "YulAssignment",
															"src": "4533:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4549:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4549:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4543:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4543:5:7"
																},
																"nativeSrc": "4543:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4543:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4533:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4533:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4463:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4505:5:7",
														"nodeType": "YulTypedName",
														"src": "4505:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4515:6:7",
														"nodeType": "YulTypedName",
														"src": "4515:6:7",
														"type": ""
													}
												],
												"src": "4463:99:7"
											},
											{
												"body": {
													"nativeSrc": "4596:152:7",
													"nodeType": "YulBlock",
													"src": "4596:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4616:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4616:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4606:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4606:6:7"
																},
																"nativeSrc": "4606:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4606:88:7"
															},
															"nativeSrc": "4606:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4606:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4710:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4710:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4713:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4713:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4703:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4703:6:7"
																},
																"nativeSrc": "4703:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4703:15:7"
															},
															"nativeSrc": "4703:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4703:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4734:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4734:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4737:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4737:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4727:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4727:6:7"
																},
																"nativeSrc": "4727:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4727:15:7"
															},
															"nativeSrc": "4727:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4727:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4568:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4568:180:7"
											},
											{
												"body": {
													"nativeSrc": "4782:152:7",
													"nodeType": "YulBlock",
													"src": "4782:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4799:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4799:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4802:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4802:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4792:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:7"
																},
																"nativeSrc": "4792:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4792:88:7"
															},
															"nativeSrc": "4792:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4792:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4896:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4896:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4899:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4899:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4889:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4889:6:7"
																},
																"nativeSrc": "4889:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4889:15:7"
															},
															"nativeSrc": "4889:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4889:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4920:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4920:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4923:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4923:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4913:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4913:6:7"
																},
																"nativeSrc": "4913:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4913:15:7"
															},
															"nativeSrc": "4913:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4913:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4754:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4754:180:7"
											},
											{
												"body": {
													"nativeSrc": "4991:269:7",
													"nodeType": "YulBlock",
													"src": "4991:269:7",
													"statements": [
														{
															"nativeSrc": "5001:22:7",
															"nodeType": "YulAssignment",
															"src": "5001:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5015:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5015:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5021:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5021:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5011:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5011:3:7"
																},
																"nativeSrc": "5011:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5011:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5001:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5001:6:7"
																}
															]
														},
														{
															"nativeSrc": "5032:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5032:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5062:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5062:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5068:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5068:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5058:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5058:3:7"
																},
																"nativeSrc": "5058:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5058:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5036:18:7",
																	"nodeType": "YulTypedName",
																	"src": "5036:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5109:51:7",
																"nodeType": "YulBlock",
																"src": "5109:51:7",
																"statements": [
																	{
																		"nativeSrc": "5123:27:7",
																		"nodeType": "YulAssignment",
																		"src": "5123:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5137:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5137:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5145:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5145:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5133:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5133:3:7"
																			},
																			"nativeSrc": "5133:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5133:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5123:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5123:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5089:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5089:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5082:6:7"
																},
																"nativeSrc": "5082:26:7",
																"nodeType": "YulFunctionCall",
																"src": "5082:26:7"
															},
															"nativeSrc": "5079:81:7",
															"nodeType": "YulIf",
															"src": "5079:81:7"
														},
														{
															"body": {
																"nativeSrc": "5212:42:7",
																"nodeType": "YulBlock",
																"src": "5212:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5226:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5226:16:7"
																			},
																			"nativeSrc": "5226:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5226:18:7"
																		},
																		"nativeSrc": "5226:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5226:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5176:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5176:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5199:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5199:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5207:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5207:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5196:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5196:2:7"
																		},
																		"nativeSrc": "5196:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5196:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5173:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5173:2:7"
																},
																"nativeSrc": "5173:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5173:38:7"
															},
															"nativeSrc": "5170:84:7",
															"nodeType": "YulIf",
															"src": "5170:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4940:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4975:4:7",
														"nodeType": "YulTypedName",
														"src": "4975:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4984:6:7",
														"nodeType": "YulTypedName",
														"src": "4984:6:7",
														"type": ""
													}
												],
												"src": "4940:320:7"
											},
											{
												"body": {
													"nativeSrc": "5320:87:7",
													"nodeType": "YulBlock",
													"src": "5320:87:7",
													"statements": [
														{
															"nativeSrc": "5330:11:7",
															"nodeType": "YulAssignment",
															"src": "5330:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5338:3:7",
																"nodeType": "YulIdentifier",
																"src": "5338:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5330:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5330:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5358:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5358:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5361:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5361:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5351:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5351:6:7"
																},
																"nativeSrc": "5351:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5351:14:7"
															},
															"nativeSrc": "5351:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "5351:14:7"
														},
														{
															"nativeSrc": "5374:26:7",
															"nodeType": "YulAssignment",
															"src": "5374:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5392:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5392:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5395:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5395:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5382:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5382:9:7"
																},
																"nativeSrc": "5382:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5382:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5374:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5374:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5266:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5307:3:7",
														"nodeType": "YulTypedName",
														"src": "5307:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5315:4:7",
														"nodeType": "YulTypedName",
														"src": "5315:4:7",
														"type": ""
													}
												],
												"src": "5266:141:7"
											},
											{
												"body": {
													"nativeSrc": "5457:49:7",
													"nodeType": "YulBlock",
													"src": "5457:49:7",
													"statements": [
														{
															"nativeSrc": "5467:33:7",
															"nodeType": "YulAssignment",
															"src": "5467:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5485:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5485:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5492:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5492:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5481:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5481:3:7"
																		},
																		"nativeSrc": "5481:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5481:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5497:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5497:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5477:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5477:3:7"
																},
																"nativeSrc": "5477:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5477:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5467:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5467:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5413:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5440:5:7",
														"nodeType": "YulTypedName",
														"src": "5440:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5450:6:7",
														"nodeType": "YulTypedName",
														"src": "5450:6:7",
														"type": ""
													}
												],
												"src": "5413:93:7"
											},
											{
												"body": {
													"nativeSrc": "5565:54:7",
													"nodeType": "YulBlock",
													"src": "5565:54:7",
													"statements": [
														{
															"nativeSrc": "5575:37:7",
															"nodeType": "YulAssignment",
															"src": "5575:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5600:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5606:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5606:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5596:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:7"
																},
																"nativeSrc": "5596:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5596:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5575:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5575:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5512:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5540:4:7",
														"nodeType": "YulTypedName",
														"src": "5540:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5546:5:7",
														"nodeType": "YulTypedName",
														"src": "5546:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5556:8:7",
														"nodeType": "YulTypedName",
														"src": "5556:8:7",
														"type": ""
													}
												],
												"src": "5512:107:7"
											},
											{
												"body": {
													"nativeSrc": "5701:317:7",
													"nodeType": "YulBlock",
													"src": "5701:317:7",
													"statements": [
														{
															"nativeSrc": "5711:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5711:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5732:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5732:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5744:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5744:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5728:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5728:3:7"
																},
																"nativeSrc": "5728:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5728:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5715:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5715:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5755:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5755:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5786:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5786:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5797:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5797:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5767:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5767:18:7"
																},
																"nativeSrc": "5767:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5767:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5759:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5759:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5873:51:7",
															"nodeType": "YulAssignment",
															"src": "5873:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5904:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5904:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5915:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5915:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5885:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5885:18:7"
																},
																"nativeSrc": "5885:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5885:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5873:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5873:8:7"
																}
															]
														},
														{
															"nativeSrc": "5933:30:7",
															"nodeType": "YulAssignment",
															"src": "5933:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5946:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5946:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5957:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5957:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5953:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5953:3:7"
																		},
																		"nativeSrc": "5953:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5953:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5942:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5942:3:7"
																},
																"nativeSrc": "5942:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5942:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5933:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5933:5:7"
																}
															]
														},
														{
															"nativeSrc": "5972:40:7",
															"nodeType": "YulAssignment",
															"src": "5972:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5985:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5985:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5996:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5996:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6006:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6006:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5992:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5992:3:7"
																		},
																		"nativeSrc": "5992:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5992:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5982:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5982:2:7"
																},
																"nativeSrc": "5982:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5982:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5972:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5972:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5625:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5662:5:7",
														"nodeType": "YulTypedName",
														"src": "5662:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5669:10:7",
														"nodeType": "YulTypedName",
														"src": "5669:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5681:8:7",
														"nodeType": "YulTypedName",
														"src": "5681:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5694:6:7",
														"nodeType": "YulTypedName",
														"src": "5694:6:7",
														"type": ""
													}
												],
												"src": "5625:393:7"
											},
											{
												"body": {
													"nativeSrc": "6056:28:7",
													"nodeType": "YulBlock",
													"src": "6056:28:7",
													"statements": [
														{
															"nativeSrc": "6066:12:7",
															"nodeType": "YulAssignment",
															"src": "6066:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6073:5:7",
																"nodeType": "YulIdentifier",
																"src": "6073:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6066:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6066:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6024:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6042:5:7",
														"nodeType": "YulTypedName",
														"src": "6042:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6052:3:7",
														"nodeType": "YulTypedName",
														"src": "6052:3:7",
														"type": ""
													}
												],
												"src": "6024:60:7"
											},
											{
												"body": {
													"nativeSrc": "6150:82:7",
													"nodeType": "YulBlock",
													"src": "6150:82:7",
													"statements": [
														{
															"nativeSrc": "6160:66:7",
															"nodeType": "YulAssignment",
															"src": "6160:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6218:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6218:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6200:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "6200:17:7"
																				},
																				"nativeSrc": "6200:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6200:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6191:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "6191:8:7"
																		},
																		"nativeSrc": "6191:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6191:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6173:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6173:17:7"
																},
																"nativeSrc": "6173:53:7",
																"nodeType": "YulFunctionCall",
																"src": "6173:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6160:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6090:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6130:5:7",
														"nodeType": "YulTypedName",
														"src": "6130:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6140:9:7",
														"nodeType": "YulTypedName",
														"src": "6140:9:7",
														"type": ""
													}
												],
												"src": "6090:142:7"
											},
											{
												"body": {
													"nativeSrc": "6285:28:7",
													"nodeType": "YulBlock",
													"src": "6285:28:7",
													"statements": [
														{
															"nativeSrc": "6295:12:7",
															"nodeType": "YulAssignment",
															"src": "6295:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6302:5:7",
																"nodeType": "YulIdentifier",
																"src": "6302:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6295:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6295:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6238:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6271:5:7",
														"nodeType": "YulTypedName",
														"src": "6271:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6281:3:7",
														"nodeType": "YulTypedName",
														"src": "6281:3:7",
														"type": ""
													}
												],
												"src": "6238:75:7"
											},
											{
												"body": {
													"nativeSrc": "6395:193:7",
													"nodeType": "YulBlock",
													"src": "6395:193:7",
													"statements": [
														{
															"nativeSrc": "6405:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6405:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6460:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6460:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6429:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6429:30:7"
																},
																"nativeSrc": "6429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6429:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6409:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6409:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6484:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6484:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6524:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6524:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6518:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6518:5:7"
																				},
																				"nativeSrc": "6518:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6518:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6531:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6531:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6563:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6563:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6539:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6539:23:7"
																				},
																				"nativeSrc": "6539:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6539:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6490:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6490:27:7"
																		},
																		"nativeSrc": "6490:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6490:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6477:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6477:6:7"
																},
																"nativeSrc": "6477:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6477:105:7"
															},
															"nativeSrc": "6477:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6477:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6319:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6372:4:7",
														"nodeType": "YulTypedName",
														"src": "6372:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6378:6:7",
														"nodeType": "YulTypedName",
														"src": "6378:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6386:7:7",
														"nodeType": "YulTypedName",
														"src": "6386:7:7",
														"type": ""
													}
												],
												"src": "6319:269:7"
											},
											{
												"body": {
													"nativeSrc": "6643:24:7",
													"nodeType": "YulBlock",
													"src": "6643:24:7",
													"statements": [
														{
															"nativeSrc": "6653:8:7",
															"nodeType": "YulAssignment",
															"src": "6653:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6660:1:7",
																"nodeType": "YulLiteral",
																"src": "6660:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6653:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6653:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6594:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6639:3:7",
														"nodeType": "YulTypedName",
														"src": "6639:3:7",
														"type": ""
													}
												],
												"src": "6594:73:7"
											},
											{
												"body": {
													"nativeSrc": "6726:136:7",
													"nodeType": "YulBlock",
													"src": "6726:136:7",
													"statements": [
														{
															"nativeSrc": "6736:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6736:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6750:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6750:30:7"
																},
																"nativeSrc": "6750:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6750:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6740:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6740:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6835:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6835:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6841:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6841:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6849:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6791:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6791:43:7"
																},
																"nativeSrc": "6791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6791:65:7"
															},
															"nativeSrc": "6791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6791:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6673:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6712:4:7",
														"nodeType": "YulTypedName",
														"src": "6712:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6718:6:7",
														"nodeType": "YulTypedName",
														"src": "6718:6:7",
														"type": ""
													}
												],
												"src": "6673:189:7"
											},
											{
												"body": {
													"nativeSrc": "6918:136:7",
													"nodeType": "YulBlock",
													"src": "6918:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6985:63:7",
																"nodeType": "YulBlock",
																"src": "6985:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7029:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7029:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7036:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7036:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6999:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6999:29:7"
																			},
																			"nativeSrc": "6999:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6999:39:7"
																		},
																		"nativeSrc": "6999:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6999:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6938:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6938:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6945:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6945:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6935:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6935:2:7"
																},
																"nativeSrc": "6935:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6935:14:7"
															},
															"nativeSrc": "6928:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6950:26:7",
																"nodeType": "YulBlock",
																"src": "6950:26:7",
																"statements": [
																	{
																		"nativeSrc": "6952:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6952:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6965:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6965:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6972:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6972:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6961:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6961:3:7"
																			},
																			"nativeSrc": "6961:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6961:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6952:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6952:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6932:2:7",
																"nodeType": "YulBlock",
																"src": "6932:2:7",
																"statements": []
															},
															"src": "6928:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6868:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6906:5:7",
														"nodeType": "YulTypedName",
														"src": "6906:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6913:3:7",
														"nodeType": "YulTypedName",
														"src": "6913:3:7",
														"type": ""
													}
												],
												"src": "6868:186:7"
											},
											{
												"body": {
													"nativeSrc": "7139:464:7",
													"nodeType": "YulBlock",
													"src": "7139:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7165:431:7",
																"nodeType": "YulBlock",
																"src": "7165:431:7",
																"statements": [
																	{
																		"nativeSrc": "7179:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7179:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7227:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7227:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7195:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "7195:31:7"
																			},
																			"nativeSrc": "7195:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7195:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7183:8:7",
																				"nodeType": "YulTypedName",
																				"src": "7183:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7246:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7246:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7269:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7269:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7297:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7297:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7279:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "7279:17:7"
																					},
																					"nativeSrc": "7279:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7279:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7265:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7265:3:7"
																			},
																			"nativeSrc": "7265:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7265:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7250:11:7",
																				"nodeType": "YulTypedName",
																				"src": "7250:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7466:27:7",
																			"nodeType": "YulBlock",
																			"src": "7466:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7468:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7468:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7483:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7483:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7468:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7468:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7450:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7450:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7462:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7462:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7447:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7447:2:7"
																			},
																			"nativeSrc": "7447:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7447:18:7"
																		},
																		"nativeSrc": "7444:49:7",
																		"nodeType": "YulIf",
																		"src": "7444:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7535:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7535:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7552:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7552:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7580:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7580:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7562:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7562:17:7"
																							},
																							"nativeSrc": "7562:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7562:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7548:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7548:3:7"
																					},
																					"nativeSrc": "7548:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7548:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7506:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7506:28:7"
																			},
																			"nativeSrc": "7506:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7506:80:7"
																		},
																		"nativeSrc": "7506:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7506:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7156:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7156:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7161:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7161:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7153:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7153:2:7"
																},
																"nativeSrc": "7153:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7153:11:7"
															},
															"nativeSrc": "7150:446:7",
															"nodeType": "YulIf",
															"src": "7150:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7060:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7115:5:7",
														"nodeType": "YulTypedName",
														"src": "7115:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7122:3:7",
														"nodeType": "YulTypedName",
														"src": "7122:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7127:10:7",
														"nodeType": "YulTypedName",
														"src": "7127:10:7",
														"type": ""
													}
												],
												"src": "7060:543:7"
											},
											{
												"body": {
													"nativeSrc": "7672:54:7",
													"nodeType": "YulBlock",
													"src": "7672:54:7",
													"statements": [
														{
															"nativeSrc": "7682:37:7",
															"nodeType": "YulAssignment",
															"src": "7682:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7707:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7707:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7713:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7713:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7703:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7703:3:7"
																},
																"nativeSrc": "7703:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7703:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7682:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7682:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7609:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7647:4:7",
														"nodeType": "YulTypedName",
														"src": "7647:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7653:5:7",
														"nodeType": "YulTypedName",
														"src": "7653:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7663:8:7",
														"nodeType": "YulTypedName",
														"src": "7663:8:7",
														"type": ""
													}
												],
												"src": "7609:117:7"
											},
											{
												"body": {
													"nativeSrc": "7783:118:7",
													"nodeType": "YulBlock",
													"src": "7783:118:7",
													"statements": [
														{
															"nativeSrc": "7793:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7793:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7842:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7842:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7838:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7838:3:7"
																				},
																				"nativeSrc": "7838:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7838:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7857:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7857:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7853:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7853:3:7"
																				},
																				"nativeSrc": "7853:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7853:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7809:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7809:28:7"
																		},
																		"nativeSrc": "7809:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7809:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7805:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7805:3:7"
																},
																"nativeSrc": "7805:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7805:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7797:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7797:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7870:25:7",
															"nodeType": "YulAssignment",
															"src": "7870:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7884:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7884:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7890:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7890:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7880:3:7"
																},
																"nativeSrc": "7880:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7880:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7870:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7870:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7732:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7760:4:7",
														"nodeType": "YulTypedName",
														"src": "7760:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7766:5:7",
														"nodeType": "YulTypedName",
														"src": "7766:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7776:6:7",
														"nodeType": "YulTypedName",
														"src": "7776:6:7",
														"type": ""
													}
												],
												"src": "7732:169:7"
											},
											{
												"body": {
													"nativeSrc": "7987:214:7",
													"nodeType": "YulBlock",
													"src": "7987:214:7",
													"statements": [
														{
															"nativeSrc": "8120:37:7",
															"nodeType": "YulAssignment",
															"src": "8120:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8147:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8147:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8153:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8153:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8128:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "8128:18:7"
																},
																"nativeSrc": "8128:29:7",
																"nodeType": "YulFunctionCall",
																"src": "8128:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8120:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8120:4:7"
																}
															]
														},
														{
															"nativeSrc": "8166:29:7",
															"nodeType": "YulAssignment",
															"src": "8166:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8177:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8177:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8187:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8187:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8190:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8190:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8183:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8183:3:7"
																		},
																		"nativeSrc": "8183:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8183:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8174:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8174:2:7"
																},
																"nativeSrc": "8174:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8174:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8166:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8166:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7906:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7968:4:7",
														"nodeType": "YulTypedName",
														"src": "7968:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7974:3:7",
														"nodeType": "YulTypedName",
														"src": "7974:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7982:4:7",
														"nodeType": "YulTypedName",
														"src": "7982:4:7",
														"type": ""
													}
												],
												"src": "7906:295:7"
											},
											{
												"body": {
													"nativeSrc": "8298:1303:7",
													"nodeType": "YulBlock",
													"src": "8298:1303:7",
													"statements": [
														{
															"nativeSrc": "8309:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8309:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8356:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8356:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8323:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "8323:32:7"
																},
																"nativeSrc": "8323:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8323:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8313:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8313:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8445:22:7",
																"nodeType": "YulBlock",
																"src": "8445:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8447:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8447:16:7"
																			},
																			"nativeSrc": "8447:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8447:18:7"
																		},
																		"nativeSrc": "8447:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8447:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8417:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8417:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8425:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8425:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8414:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8414:2:7"
																},
																"nativeSrc": "8414:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8414:30:7"
															},
															"nativeSrc": "8411:56:7",
															"nodeType": "YulIf",
															"src": "8411:56:7"
														},
														{
															"nativeSrc": "8477:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8477:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8523:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8523:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8517:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8517:5:7"
																		},
																		"nativeSrc": "8517:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8517:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8491:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8491:25:7"
																},
																"nativeSrc": "8491:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8491:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8481:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8481:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8622:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8622:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8628:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8628:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8636:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8636:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8576:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8576:45:7"
																},
																"nativeSrc": "8576:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8576:67:7"
															},
															"nativeSrc": "8576:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8576:67:7"
														},
														{
															"nativeSrc": "8653:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8653:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8670:1:7",
																"nodeType": "YulLiteral",
																"src": "8670:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8657:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8657:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8681:17:7",
															"nodeType": "YulAssignment",
															"src": "8681:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8694:4:7",
																"nodeType": "YulLiteral",
																"src": "8694:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8681:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8681:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8745:611:7",
																		"nodeType": "YulBlock",
																		"src": "8745:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8759:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8759:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8778:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8778:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8790:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8790:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8786:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8786:3:7"
																							},
																							"nativeSrc": "8786:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8786:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8774:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8774:3:7"
																					},
																					"nativeSrc": "8774:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8774:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8763:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8763:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8810:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8810:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8856:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8856:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8824:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8824:31:7"
																					},
																					"nativeSrc": "8824:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8824:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8814:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8814:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8874:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8874:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8883:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8883:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8878:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8878:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8942:163:7",
																					"nodeType": "YulBlock",
																					"src": "8942:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8967:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8967:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8985:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8985:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8990:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8990:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8981:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8981:3:7"
																												},
																												"nativeSrc": "8981:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8981:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8975:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8975:5:7"
																										},
																										"nativeSrc": "8975:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8975:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8960:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8960:6:7"
																								},
																								"nativeSrc": "8960:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8960:42:7"
																							},
																							"nativeSrc": "8960:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8960:42:7"
																						},
																						{
																							"nativeSrc": "9019:24:7",
																							"nodeType": "YulAssignment",
																							"src": "9019:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9033:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9033:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9041:1:7",
																										"nodeType": "YulLiteral",
																										"src": "9041:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9029:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9029:3:7"
																								},
																								"nativeSrc": "9029:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9029:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9019:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9019:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9060:31:7",
																							"nodeType": "YulAssignment",
																							"src": "9060:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9077:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "9077:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9088:2:7",
																										"nodeType": "YulLiteral",
																										"src": "9088:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9073:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9073:3:7"
																								},
																								"nativeSrc": "9073:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9073:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9060:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "9060:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8908:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8908:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8911:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8911:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8905:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8905:2:7"
																					},
																					"nativeSrc": "8905:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8905:14:7"
																				},
																				"nativeSrc": "8897:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8920:21:7",
																					"nodeType": "YulBlock",
																					"src": "8920:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8922:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8922:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8931:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8931:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8934:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8934:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8927:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8927:3:7"
																								},
																								"nativeSrc": "8927:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8927:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8922:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8922:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8901:3:7",
																					"nodeType": "YulBlock",
																					"src": "8901:3:7",
																					"statements": []
																				},
																				"src": "8897:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "9141:156:7",
																					"nodeType": "YulBlock",
																					"src": "9141:156:7",
																					"statements": [
																						{
																							"nativeSrc": "9159:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9159:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9186:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9186:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9191:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9191:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9182:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9182:3:7"
																										},
																										"nativeSrc": "9182:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9182:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9176:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9176:5:7"
																								},
																								"nativeSrc": "9176:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9176:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9163:9:7",
																									"nodeType": "YulTypedName",
																									"src": "9163:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9226:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9226:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9253:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9253:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9268:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "9268:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9276:4:7",
																														"nodeType": "YulLiteral",
																														"src": "9276:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9264:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9264:3:7"
																												},
																												"nativeSrc": "9264:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9264:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9234:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "9234:18:7"
																										},
																										"nativeSrc": "9234:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9234:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9219:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9219:6:7"
																								},
																								"nativeSrc": "9219:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9219:64:7"
																							},
																							"nativeSrc": "9219:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9219:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9124:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "9124:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9133:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "9133:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9121:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "9121:2:7"
																					},
																					"nativeSrc": "9121:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9121:19:7"
																				},
																				"nativeSrc": "9118:179:7",
																				"nodeType": "YulIf",
																				"src": "9118:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9317:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9317:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9331:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "9331:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9339:1:7",
																											"nodeType": "YulLiteral",
																											"src": "9339:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9327:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "9327:3:7"
																									},
																									"nativeSrc": "9327:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9327:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9343:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9343:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9323:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9323:3:7"
																							},
																							"nativeSrc": "9323:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9323:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9310:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9310:6:7"
																					},
																					"nativeSrc": "9310:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9310:36:7"
																				},
																				"nativeSrc": "9310:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9310:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8738:618:7",
																	"nodeType": "YulCase",
																	"src": "8738:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8743:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8743:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9373:222:7",
																		"nodeType": "YulBlock",
																		"src": "9373:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9387:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9387:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9400:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9400:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9391:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9391:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9424:67:7",
																					"nodeType": "YulBlock",
																					"src": "9424:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9442:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9442:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9461:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9461:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9466:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9466:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9457:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9457:3:7"
																										},
																										"nativeSrc": "9457:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9457:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9451:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9451:5:7"
																								},
																								"nativeSrc": "9451:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9451:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9442:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9442:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9417:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9417:6:7"
																				},
																				"nativeSrc": "9414:77:7",
																				"nodeType": "YulIf",
																				"src": "9414:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9511:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9511:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9570:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9570:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9577:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9577:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9517:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9517:52:7"
																							},
																							"nativeSrc": "9517:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9517:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9504:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9504:6:7"
																					},
																					"nativeSrc": "9504:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9504:81:7"
																				},
																				"nativeSrc": "9504:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9504:81:7"
																			}
																		]
																	},
																	"nativeSrc": "9365:230:7",
																	"nodeType": "YulCase",
																	"src": "9365:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8718:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8718:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8726:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8726:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8715:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8715:2:7"
																},
																"nativeSrc": "8715:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8715:14:7"
															},
															"nativeSrc": "8708:887:7",
															"nodeType": "YulSwitch",
															"src": "8708:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8206:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8287:4:7",
														"nodeType": "YulTypedName",
														"src": "8287:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8293:3:7",
														"nodeType": "YulTypedName",
														"src": "8293:3:7",
														"type": ""
													}
												],
												"src": "8206:1395:7"
											},
											{
												"body": {
													"nativeSrc": "9672:53:7",
													"nodeType": "YulBlock",
													"src": "9672:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9689:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9689:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9712:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9712:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9694:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9694:17:7"
																		},
																		"nativeSrc": "9694:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9694:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9682:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9682:6:7"
																},
																"nativeSrc": "9682:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9682:37:7"
															},
															"nativeSrc": "9682:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9682:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9607:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9660:5:7",
														"nodeType": "YulTypedName",
														"src": "9660:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9667:3:7",
														"nodeType": "YulTypedName",
														"src": "9667:3:7",
														"type": ""
													}
												],
												"src": "9607:118:7"
											},
											{
												"body": {
													"nativeSrc": "9829:124:7",
													"nodeType": "YulBlock",
													"src": "9829:124:7",
													"statements": [
														{
															"nativeSrc": "9839:26:7",
															"nodeType": "YulAssignment",
															"src": "9839:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9851:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9851:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9862:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9862:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9847:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9847:3:7"
																},
																"nativeSrc": "9847:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9847:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9839:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9839:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9919:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9919:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9932:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9932:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9943:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9943:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9928:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9928:3:7"
																		},
																		"nativeSrc": "9928:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9928:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9875:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9875:43:7"
																},
																"nativeSrc": "9875:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9875:71:7"
															},
															"nativeSrc": "9875:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9875:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9731:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9801:9:7",
														"nodeType": "YulTypedName",
														"src": "9801:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9813:6:7",
														"nodeType": "YulTypedName",
														"src": "9813:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9824:4:7",
														"nodeType": "YulTypedName",
														"src": "9824:4:7",
														"type": ""
													}
												],
												"src": "9731:222:7"
											},
											{
												"body": {
													"nativeSrc": "10055:73:7",
													"nodeType": "YulBlock",
													"src": "10055:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10072:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10072:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10077:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10077:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10065:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10065:6:7"
																},
																"nativeSrc": "10065:19:7",
																"nodeType": "YulFunctionCall",
																"src": "10065:19:7"
															},
															"nativeSrc": "10065:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "10065:19:7"
														},
														{
															"nativeSrc": "10093:29:7",
															"nodeType": "YulAssignment",
															"src": "10093:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10112:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10112:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10117:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10117:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10108:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10108:3:7"
																},
																"nativeSrc": "10108:14:7",
																"nodeType": "YulFunctionCall",
																"src": "10108:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10093:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "10093:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9959:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10027:3:7",
														"nodeType": "YulTypedName",
														"src": "10027:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10032:6:7",
														"nodeType": "YulTypedName",
														"src": "10032:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10043:11:7",
														"nodeType": "YulTypedName",
														"src": "10043:11:7",
														"type": ""
													}
												],
												"src": "9959:169:7"
											},
											{
												"body": {
													"nativeSrc": "10240:65:7",
													"nodeType": "YulBlock",
													"src": "10240:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10262:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10262:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10270:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10270:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10258:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10258:3:7"
																		},
																		"nativeSrc": "10258:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10258:14:7"
																	},
																	{
																		"hexValue": "426c61636b6c697374656420416464726573736573",
																		"kind": "string",
																		"nativeSrc": "10274:23:7",
																		"nodeType": "YulLiteral",
																		"src": "10274:23:7",
																		"type": "",
																		"value": "Blacklisted Addresses"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10251:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10251:6:7"
																},
																"nativeSrc": "10251:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10251:47:7"
															},
															"nativeSrc": "10251:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10251:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7",
												"nativeSrc": "10134:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10232:6:7",
														"nodeType": "YulTypedName",
														"src": "10232:6:7",
														"type": ""
													}
												],
												"src": "10134:171:7"
											},
											{
												"body": {
													"nativeSrc": "10457:220:7",
													"nodeType": "YulBlock",
													"src": "10457:220:7",
													"statements": [
														{
															"nativeSrc": "10467:74:7",
															"nodeType": "YulAssignment",
															"src": "10467:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10533:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10533:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10538:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10538:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10474:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10474:58:7"
																},
																"nativeSrc": "10474:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10474:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10467:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10467:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10639:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10639:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7",
																	"nativeSrc": "10550:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10550:88:7"
																},
																"nativeSrc": "10550:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10550:93:7"
															},
															"nativeSrc": "10550:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10550:93:7"
														},
														{
															"nativeSrc": "10652:19:7",
															"nodeType": "YulAssignment",
															"src": "10652:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10663:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10663:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10668:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10668:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10659:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10659:3:7"
																},
																"nativeSrc": "10659:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10659:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10652:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10311:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10445:3:7",
														"nodeType": "YulTypedName",
														"src": "10445:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10453:3:7",
														"nodeType": "YulTypedName",
														"src": "10453:3:7",
														"type": ""
													}
												],
												"src": "10311:366:7"
											},
											{
												"body": {
													"nativeSrc": "10854:248:7",
													"nodeType": "YulBlock",
													"src": "10854:248:7",
													"statements": [
														{
															"nativeSrc": "10864:26:7",
															"nodeType": "YulAssignment",
															"src": "10864:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10876:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10876:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10887:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10887:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10872:3:7"
																},
																"nativeSrc": "10872:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10872:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10864:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10864:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10911:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10911:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10922:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10922:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10907:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:7"
																		},
																		"nativeSrc": "10907:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10907:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10930:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10930:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10936:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10936:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10926:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10926:3:7"
																		},
																		"nativeSrc": "10926:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10926:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10900:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10900:6:7"
																},
																"nativeSrc": "10900:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10900:47:7"
															},
															"nativeSrc": "10900:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10900:47:7"
														},
														{
															"nativeSrc": "10956:139:7",
															"nodeType": "YulAssignment",
															"src": "10956:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11090:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11090:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10964:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10964:124:7"
																},
																"nativeSrc": "10964:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10964:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10956:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10956:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10683:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10834:9:7",
														"nodeType": "YulTypedName",
														"src": "10834:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10849:4:7",
														"nodeType": "YulTypedName",
														"src": "10849:4:7",
														"type": ""
													}
												],
												"src": "10683:419:7"
											},
											{
												"body": {
													"nativeSrc": "11214:115:7",
													"nodeType": "YulBlock",
													"src": "11214:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11236:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11236:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11244:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11244:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11232:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11232:3:7"
																		},
																		"nativeSrc": "11232:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11232:14:7"
																	},
																	{
																		"hexValue": "426f746820616464726573736573206d7573742062652077686974656c697374",
																		"kind": "string",
																		"nativeSrc": "11248:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11248:34:7",
																		"type": "",
																		"value": "Both addresses must be whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11225:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11225:6:7"
																},
																"nativeSrc": "11225:58:7",
																"nodeType": "YulFunctionCall",
																"src": "11225:58:7"
															},
															"nativeSrc": "11225:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "11225:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11304:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11304:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11312:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11312:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11300:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11300:3:7"
																		},
																		"nativeSrc": "11300:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11300:15:7"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "11317:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11317:4:7",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11293:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11293:6:7"
																},
																"nativeSrc": "11293:29:7",
																"nodeType": "YulFunctionCall",
																"src": "11293:29:7"
															},
															"nativeSrc": "11293:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "11293:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
												"nativeSrc": "11108:221:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11206:6:7",
														"nodeType": "YulTypedName",
														"src": "11206:6:7",
														"type": ""
													}
												],
												"src": "11108:221:7"
											},
											{
												"body": {
													"nativeSrc": "11481:220:7",
													"nodeType": "YulBlock",
													"src": "11481:220:7",
													"statements": [
														{
															"nativeSrc": "11491:74:7",
															"nodeType": "YulAssignment",
															"src": "11491:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11557:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11557:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11562:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11562:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11498:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11498:58:7"
																},
																"nativeSrc": "11498:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11498:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11491:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11491:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11663:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11663:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
																	"nativeSrc": "11574:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11574:88:7"
																},
																"nativeSrc": "11574:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11574:93:7"
															},
															"nativeSrc": "11574:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11574:93:7"
														},
														{
															"nativeSrc": "11676:19:7",
															"nodeType": "YulAssignment",
															"src": "11676:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11687:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11687:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11692:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11692:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11683:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11683:3:7"
																},
																"nativeSrc": "11683:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11683:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11676:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11676:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11335:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11469:3:7",
														"nodeType": "YulTypedName",
														"src": "11469:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11477:3:7",
														"nodeType": "YulTypedName",
														"src": "11477:3:7",
														"type": ""
													}
												],
												"src": "11335:366:7"
											},
											{
												"body": {
													"nativeSrc": "11878:248:7",
													"nodeType": "YulBlock",
													"src": "11878:248:7",
													"statements": [
														{
															"nativeSrc": "11888:26:7",
															"nodeType": "YulAssignment",
															"src": "11888:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11900:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11900:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11911:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11911:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11896:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11896:3:7"
																},
																"nativeSrc": "11896:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11896:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11888:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11888:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11935:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11935:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11946:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11946:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11931:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11931:3:7"
																		},
																		"nativeSrc": "11931:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11931:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11954:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11954:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11960:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11960:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11950:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11950:3:7"
																		},
																		"nativeSrc": "11950:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11950:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11924:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11924:6:7"
																},
																"nativeSrc": "11924:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11924:47:7"
															},
															"nativeSrc": "11924:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11924:47:7"
														},
														{
															"nativeSrc": "11980:139:7",
															"nodeType": "YulAssignment",
															"src": "11980:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12114:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12114:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11988:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11988:124:7"
																},
																"nativeSrc": "11988:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11988:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11980:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11980:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11707:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11858:9:7",
														"nodeType": "YulTypedName",
														"src": "11858:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11873:4:7",
														"nodeType": "YulTypedName",
														"src": "11873:4:7",
														"type": ""
													}
												],
												"src": "11707:419:7"
											},
											{
												"body": {
													"nativeSrc": "12238:73:7",
													"nodeType": "YulBlock",
													"src": "12238:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12260:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12260:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12268:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12268:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12256:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12256:3:7"
																		},
																		"nativeSrc": "12256:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12256:14:7"
																	},
																	{
																		"hexValue": "546f6b656e205472616e73666572204c696d6974204578636565646564",
																		"kind": "string",
																		"nativeSrc": "12272:31:7",
																		"nodeType": "YulLiteral",
																		"src": "12272:31:7",
																		"type": "",
																		"value": "Token Transfer Limit Exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12249:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12249:6:7"
																},
																"nativeSrc": "12249:55:7",
																"nodeType": "YulFunctionCall",
																"src": "12249:55:7"
															},
															"nativeSrc": "12249:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "12249:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693",
												"nativeSrc": "12132:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12230:6:7",
														"nodeType": "YulTypedName",
														"src": "12230:6:7",
														"type": ""
													}
												],
												"src": "12132:179:7"
											},
											{
												"body": {
													"nativeSrc": "12463:220:7",
													"nodeType": "YulBlock",
													"src": "12463:220:7",
													"statements": [
														{
															"nativeSrc": "12473:74:7",
															"nodeType": "YulAssignment",
															"src": "12473:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12539:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12539:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12544:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12544:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12480:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12480:58:7"
																},
																"nativeSrc": "12480:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12480:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12473:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12473:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12645:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12645:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693",
																	"nativeSrc": "12556:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12556:88:7"
																},
																"nativeSrc": "12556:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12556:93:7"
															},
															"nativeSrc": "12556:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12556:93:7"
														},
														{
															"nativeSrc": "12658:19:7",
															"nodeType": "YulAssignment",
															"src": "12658:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12669:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12669:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12674:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12674:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12665:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12665:3:7"
																},
																"nativeSrc": "12665:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12665:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12658:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12658:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12317:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12451:3:7",
														"nodeType": "YulTypedName",
														"src": "12451:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12459:3:7",
														"nodeType": "YulTypedName",
														"src": "12459:3:7",
														"type": ""
													}
												],
												"src": "12317:366:7"
											},
											{
												"body": {
													"nativeSrc": "12860:248:7",
													"nodeType": "YulBlock",
													"src": "12860:248:7",
													"statements": [
														{
															"nativeSrc": "12870:26:7",
															"nodeType": "YulAssignment",
															"src": "12870:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12882:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12882:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12893:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12893:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12878:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12878:3:7"
																},
																"nativeSrc": "12878:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12878:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12870:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12870:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12917:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12917:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12928:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12928:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12913:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12913:3:7"
																		},
																		"nativeSrc": "12913:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12913:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12936:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12936:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12942:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12942:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12932:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12932:3:7"
																		},
																		"nativeSrc": "12932:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12932:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12906:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12906:6:7"
																},
																"nativeSrc": "12906:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12906:47:7"
															},
															"nativeSrc": "12906:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12906:47:7"
														},
														{
															"nativeSrc": "12962:139:7",
															"nodeType": "YulAssignment",
															"src": "12962:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13096:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13096:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12970:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12970:124:7"
																},
																"nativeSrc": "12970:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12970:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12962:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12962:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12689:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12840:9:7",
														"nodeType": "YulTypedName",
														"src": "12840:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12855:4:7",
														"nodeType": "YulTypedName",
														"src": "12855:4:7",
														"type": ""
													}
												],
												"src": "12689:419:7"
											},
											{
												"body": {
													"nativeSrc": "13158:147:7",
													"nodeType": "YulBlock",
													"src": "13158:147:7",
													"statements": [
														{
															"nativeSrc": "13168:25:7",
															"nodeType": "YulAssignment",
															"src": "13168:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13191:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13191:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13173:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13173:17:7"
																},
																"nativeSrc": "13173:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13173:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13168:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13168:1:7"
																}
															]
														},
														{
															"nativeSrc": "13202:25:7",
															"nodeType": "YulAssignment",
															"src": "13202:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13225:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13225:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13207:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13207:17:7"
																},
																"nativeSrc": "13207:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13207:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13202:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13202:1:7"
																}
															]
														},
														{
															"nativeSrc": "13236:16:7",
															"nodeType": "YulAssignment",
															"src": "13236:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13247:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13247:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13250:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13250:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13243:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13243:3:7"
																},
																"nativeSrc": "13243:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13243:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13236:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13236:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13276:22:7",
																"nodeType": "YulBlock",
																"src": "13276:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13278:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13278:16:7"
																			},
																			"nativeSrc": "13278:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13278:18:7"
																		},
																		"nativeSrc": "13278:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13278:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13268:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13268:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13271:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13271:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13265:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13265:2:7"
																},
																"nativeSrc": "13265:10:7",
																"nodeType": "YulFunctionCall",
																"src": "13265:10:7"
															},
															"nativeSrc": "13262:36:7",
															"nodeType": "YulIf",
															"src": "13262:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13114:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13145:1:7",
														"nodeType": "YulTypedName",
														"src": "13145:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13148:1:7",
														"nodeType": "YulTypedName",
														"src": "13148:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13154:3:7",
														"nodeType": "YulTypedName",
														"src": "13154:3:7",
														"type": ""
													}
												],
												"src": "13114:191:7"
											},
											{
												"body": {
													"nativeSrc": "13417:70:7",
													"nodeType": "YulBlock",
													"src": "13417:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13439:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13439:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13447:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13447:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13435:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13435:3:7"
																		},
																		"nativeSrc": "13435:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13435:14:7"
																	},
																	{
																		"hexValue": "546f6b656e205472616e7366657220696e20636f6f6c646f776e",
																		"kind": "string",
																		"nativeSrc": "13451:28:7",
																		"nodeType": "YulLiteral",
																		"src": "13451:28:7",
																		"type": "",
																		"value": "Token Transfer in cooldown"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13428:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13428:6:7"
																},
																"nativeSrc": "13428:52:7",
																"nodeType": "YulFunctionCall",
																"src": "13428:52:7"
															},
															"nativeSrc": "13428:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "13428:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9",
												"nativeSrc": "13311:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13409:6:7",
														"nodeType": "YulTypedName",
														"src": "13409:6:7",
														"type": ""
													}
												],
												"src": "13311:176:7"
											},
											{
												"body": {
													"nativeSrc": "13639:220:7",
													"nodeType": "YulBlock",
													"src": "13639:220:7",
													"statements": [
														{
															"nativeSrc": "13649:74:7",
															"nodeType": "YulAssignment",
															"src": "13649:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13715:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13715:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13720:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13720:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13656:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13656:58:7"
																},
																"nativeSrc": "13656:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13656:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13649:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13649:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13821:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13821:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9",
																	"nativeSrc": "13732:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13732:88:7"
																},
																"nativeSrc": "13732:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13732:93:7"
															},
															"nativeSrc": "13732:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13732:93:7"
														},
														{
															"nativeSrc": "13834:19:7",
															"nodeType": "YulAssignment",
															"src": "13834:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13845:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13845:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13850:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13850:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13841:3:7"
																},
																"nativeSrc": "13841:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13841:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13834:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13834:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13493:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13627:3:7",
														"nodeType": "YulTypedName",
														"src": "13627:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13635:3:7",
														"nodeType": "YulTypedName",
														"src": "13635:3:7",
														"type": ""
													}
												],
												"src": "13493:366:7"
											},
											{
												"body": {
													"nativeSrc": "14036:248:7",
													"nodeType": "YulBlock",
													"src": "14036:248:7",
													"statements": [
														{
															"nativeSrc": "14046:26:7",
															"nodeType": "YulAssignment",
															"src": "14046:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14058:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14058:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14069:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14069:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14054:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14054:3:7"
																},
																"nativeSrc": "14054:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14054:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14046:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14046:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14093:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14093:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14104:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14104:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14089:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14089:3:7"
																		},
																		"nativeSrc": "14089:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14089:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14112:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14112:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14118:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14118:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14108:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14108:3:7"
																		},
																		"nativeSrc": "14108:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14108:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14082:6:7"
																},
																"nativeSrc": "14082:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14082:47:7"
															},
															"nativeSrc": "14082:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14082:47:7"
														},
														{
															"nativeSrc": "14138:139:7",
															"nodeType": "YulAssignment",
															"src": "14138:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14272:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14272:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14146:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14146:124:7"
																},
																"nativeSrc": "14146:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14146:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14138:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14138:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13865:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14016:9:7",
														"nodeType": "YulTypedName",
														"src": "14016:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14031:4:7",
														"nodeType": "YulTypedName",
														"src": "14031:4:7",
														"type": ""
													}
												],
												"src": "13865:419:7"
											},
											{
												"body": {
													"nativeSrc": "14318:152:7",
													"nodeType": "YulBlock",
													"src": "14318:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14335:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14335:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14338:77:7",
																		"nodeType": "YulLiteral",
																		"src": "14338:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14328:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14328:6:7"
																},
																"nativeSrc": "14328:88:7",
																"nodeType": "YulFunctionCall",
																"src": "14328:88:7"
															},
															"nativeSrc": "14328:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "14328:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14432:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14435:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14435:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14425:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14425:6:7"
																},
																"nativeSrc": "14425:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14425:15:7"
															},
															"nativeSrc": "14425:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14425:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14456:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14456:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14459:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14459:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14449:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14449:6:7"
																},
																"nativeSrc": "14449:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14449:15:7"
															},
															"nativeSrc": "14449:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14449:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14290:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14290:180:7"
											},
											{
												"body": {
													"nativeSrc": "14518:143:7",
													"nodeType": "YulBlock",
													"src": "14518:143:7",
													"statements": [
														{
															"nativeSrc": "14528:25:7",
															"nodeType": "YulAssignment",
															"src": "14528:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14551:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14551:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14533:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14533:17:7"
																},
																"nativeSrc": "14533:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14533:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14528:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14528:1:7"
																}
															]
														},
														{
															"nativeSrc": "14562:25:7",
															"nodeType": "YulAssignment",
															"src": "14562:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14585:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14585:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14567:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14567:17:7"
																},
																"nativeSrc": "14567:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14567:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14562:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14562:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14609:22:7",
																"nodeType": "YulBlock",
																"src": "14609:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14611:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14611:16:7"
																			},
																			"nativeSrc": "14611:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14611:18:7"
																		},
																		"nativeSrc": "14611:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14611:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14606:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14606:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14599:6:7"
																},
																"nativeSrc": "14599:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14599:9:7"
															},
															"nativeSrc": "14596:35:7",
															"nodeType": "YulIf",
															"src": "14596:35:7"
														},
														{
															"nativeSrc": "14641:14:7",
															"nodeType": "YulAssignment",
															"src": "14641:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14650:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14650:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14653:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14653:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14646:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14646:3:7"
																},
																"nativeSrc": "14646:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14646:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14641:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14641:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14476:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14507:1:7",
														"nodeType": "YulTypedName",
														"src": "14507:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14510:1:7",
														"nodeType": "YulTypedName",
														"src": "14510:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14516:1:7",
														"nodeType": "YulTypedName",
														"src": "14516:1:7",
														"type": ""
													}
												],
												"src": "14476:185:7"
											},
											{
												"body": {
													"nativeSrc": "14712:149:7",
													"nodeType": "YulBlock",
													"src": "14712:149:7",
													"statements": [
														{
															"nativeSrc": "14722:25:7",
															"nodeType": "YulAssignment",
															"src": "14722:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14745:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14745:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14727:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14727:17:7"
																},
																"nativeSrc": "14727:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14727:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14722:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14722:1:7"
																}
															]
														},
														{
															"nativeSrc": "14756:25:7",
															"nodeType": "YulAssignment",
															"src": "14756:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14779:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14779:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14761:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14761:17:7"
																},
																"nativeSrc": "14761:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14761:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14756:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14756:1:7"
																}
															]
														},
														{
															"nativeSrc": "14790:17:7",
															"nodeType": "YulAssignment",
															"src": "14790:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14802:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14802:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14805:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14805:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14798:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14798:3:7"
																},
																"nativeSrc": "14798:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14798:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14790:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14790:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14832:22:7",
																"nodeType": "YulBlock",
																"src": "14832:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14834:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14834:16:7"
																			},
																			"nativeSrc": "14834:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14834:18:7"
																		},
																		"nativeSrc": "14834:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14834:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14823:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14823:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14829:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14829:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14820:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14820:2:7"
																},
																"nativeSrc": "14820:11:7",
																"nodeType": "YulFunctionCall",
																"src": "14820:11:7"
															},
															"nativeSrc": "14817:37:7",
															"nodeType": "YulIf",
															"src": "14817:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14667:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14698:1:7",
														"nodeType": "YulTypedName",
														"src": "14698:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14701:1:7",
														"nodeType": "YulTypedName",
														"src": "14701:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14707:4:7",
														"nodeType": "YulTypedName",
														"src": "14707:4:7",
														"type": ""
													}
												],
												"src": "14667:194:7"
											},
											{
												"body": {
													"nativeSrc": "14932:53:7",
													"nodeType": "YulBlock",
													"src": "14932:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14949:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14949:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14972:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14972:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14954:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "14954:17:7"
																		},
																		"nativeSrc": "14954:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14954:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14942:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14942:6:7"
																},
																"nativeSrc": "14942:37:7",
																"nodeType": "YulFunctionCall",
																"src": "14942:37:7"
															},
															"nativeSrc": "14942:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "14942:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "14867:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14920:5:7",
														"nodeType": "YulTypedName",
														"src": "14920:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14927:3:7",
														"nodeType": "YulTypedName",
														"src": "14927:3:7",
														"type": ""
													}
												],
												"src": "14867:118:7"
											},
											{
												"body": {
													"nativeSrc": "15145:288:7",
													"nodeType": "YulBlock",
													"src": "15145:288:7",
													"statements": [
														{
															"nativeSrc": "15155:26:7",
															"nodeType": "YulAssignment",
															"src": "15155:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15167:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15178:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15178:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15163:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15163:3:7"
																},
																"nativeSrc": "15163:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15163:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15155:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15155:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15235:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15235:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15248:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15248:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15259:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15259:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15244:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15244:3:7"
																		},
																		"nativeSrc": "15244:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15244:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15191:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15191:43:7"
																},
																"nativeSrc": "15191:71:7",
																"nodeType": "YulFunctionCall",
																"src": "15191:71:7"
															},
															"nativeSrc": "15191:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "15191:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15316:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15316:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15329:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15329:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15340:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15340:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15325:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15325:3:7"
																		},
																		"nativeSrc": "15325:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15325:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15272:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15272:43:7"
																},
																"nativeSrc": "15272:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15272:72:7"
															},
															"nativeSrc": "15272:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15272:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15398:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15398:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15411:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15411:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15422:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15422:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15407:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15407:3:7"
																		},
																		"nativeSrc": "15407:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15407:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15354:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15354:43:7"
																},
																"nativeSrc": "15354:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15354:72:7"
															},
															"nativeSrc": "15354:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15354:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14991:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15101:9:7",
														"nodeType": "YulTypedName",
														"src": "15101:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15113:6:7",
														"nodeType": "YulTypedName",
														"src": "15113:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15121:6:7",
														"nodeType": "YulTypedName",
														"src": "15121:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15129:6:7",
														"nodeType": "YulTypedName",
														"src": "15129:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15140:4:7",
														"nodeType": "YulTypedName",
														"src": "15140:4:7",
														"type": ""
													}
												],
												"src": "14991:442:7"
											},
											{
												"body": {
													"nativeSrc": "15537:124:7",
													"nodeType": "YulBlock",
													"src": "15537:124:7",
													"statements": [
														{
															"nativeSrc": "15547:26:7",
															"nodeType": "YulAssignment",
															"src": "15547:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15559:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15559:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15570:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15570:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15555:3:7"
																},
																"nativeSrc": "15555:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15555:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15547:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15547:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15627:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15627:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15640:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15640:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15651:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15651:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15636:3:7"
																		},
																		"nativeSrc": "15636:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15636:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15583:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15583:43:7"
																},
																"nativeSrc": "15583:71:7",
																"nodeType": "YulFunctionCall",
																"src": "15583:71:7"
															},
															"nativeSrc": "15583:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "15583:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "15439:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15509:9:7",
														"nodeType": "YulTypedName",
														"src": "15509:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15521:6:7",
														"nodeType": "YulTypedName",
														"src": "15521:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15532:4:7",
														"nodeType": "YulTypedName",
														"src": "15532:4:7",
														"type": ""
													}
												],
												"src": "15439:222:7"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Blacklisted Addresses\")\n\n    }\n\n    function abi_encode_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72(memPtr) {\n\n        mstore(add(memPtr, 0), \"Both addresses must be whitelist\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token Transfer Limit Exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token Transfer in cooldown\")\n\n    }\n\n    function abi_encode_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405261001261026360201b60201c565b600a61001e9190610ac0565b6305f5e10061002d9190610b0a565b600655600654600755603c60085560056009556002600a555f600e5f6101000a81548160ff0219169083151502179055505f600e60016101000a81548160ff021916908315150217905550348015610083575f80fd5b506040516132ff3803806132ff83398181016040528101906100a59190610ba9565b816040518060400160405280600981526020017f43686169546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f436861690000000000000000000000000000000000000000000000000000000081525081600390816101219190610e18565b5080600490816101319190610e18565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101a4575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161019b9190610ef6565b60405180910390fd5b6101b38161026b60201b60201c565b506101c68260065461032e60201b60201c565b6001600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555080600e60026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050611205565b5f6012905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361039e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103959190610ef6565b60405180910390fd5b6103af5f83836103b360201b60201c565b5050565b600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156104515750600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048790610f69565b60405180910390fd5b600e5f9054906101000a900460ff161561058057600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680156105405750600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690610ff7565b60405180910390fd5b5b6007548111156105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc9061105f565b60405180910390fd5b600854600d5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610610919061107d565b421015610652576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610649906110fa565b60405180910390fd5b5f819050600e60019054906101000a900460ff16156106dd575f600a5460095461067c919061107d565b90505f6064828561068d9190610b0a565b6106979190611145565b905080846106a59190611175565b92506106da86600e60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361073660201b60201c565b50505b42600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061073084848361073660201b60201c565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610786578060025f82825461077a919061107d565b92505081905550610854565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561080f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610806939291906111b7565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361089b578060025f82825403925050819055506108e5565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161094291906111ec565b60405180910390a3505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156109d1578086048111156109ad576109ac61094f565b5b60018516156109bc5780820291505b80810290506109ca8561097c565b9450610991565b94509492505050565b5f826109e95760019050610aa4565b816109f6575f9050610aa4565b8160018114610a0c5760028114610a1657610a45565b6001915050610aa4565b60ff841115610a2857610a2761094f565b5b8360020a915084821115610a3f57610a3e61094f565b5b50610aa4565b5060208310610133831016604e8410600b8410161715610a7a5782820a905083811115610a7557610a7461094f565b5b610aa4565b610a878484846001610988565b92509050818404811115610a9e57610a9d61094f565b5b81810290505b9392505050565b5f819050919050565b5f60ff82169050919050565b5f610aca82610aab565b9150610ad583610ab4565b9250610b027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846109da565b905092915050565b5f610b1482610aab565b9150610b1f83610aab565b9250828202610b2d81610aab565b91508282048414831517610b4457610b4361094f565b5b5092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b7882610b4f565b9050919050565b610b8881610b6e565b8114610b92575f80fd5b50565b5f81519050610ba381610b7f565b92915050565b5f8060408385031215610bbf57610bbe610b4b565b5b5f610bcc85828601610b95565b9250506020610bdd85828601610b95565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610c6257607f821691505b602082108103610c7557610c74610c1e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610cd77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610c9c565b610ce18683610c9c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610d1c610d17610d1284610aab565b610cf9565b610aab565b9050919050565b5f819050919050565b610d3583610d02565b610d49610d4182610d23565b848454610ca8565b825550505050565b5f90565b610d5d610d51565b610d68818484610d2c565b505050565b5b81811015610d8b57610d805f82610d55565b600181019050610d6e565b5050565b601f821115610dd057610da181610c7b565b610daa84610c8d565b81016020851015610db9578190505b610dcd610dc585610c8d565b830182610d6d565b50505b505050565b5f82821c905092915050565b5f610df05f1984600802610dd5565b1980831691505092915050565b5f610e088383610de1565b9150826002028217905092915050565b610e2182610be7565b67ffffffffffffffff811115610e3a57610e39610bf1565b5b610e448254610c4b565b610e4f828285610d8f565b5f60209050601f831160018114610e80575f8415610e6e578287015190505b610e788582610dfd565b865550610edf565b601f198416610e8e86610c7b565b5f5b82811015610eb557848901518255600182019150602085019450602081019050610e90565b86831015610ed25784890151610ece601f891682610de1565b8355505b6001600288020188555050505b505050505050565b610ef081610b6e565b82525050565b5f602082019050610f095f830184610ee7565b92915050565b5f82825260208201905092915050565b7f426c61636b6c69737465642041646472657373657300000000000000000000005f82015250565b5f610f53601583610f0f565b9150610f5e82610f1f565b602082019050919050565b5f6020820190508181035f830152610f8081610f47565b9050919050565b7f426f746820616464726573736573206d7573742062652077686974656c6973745f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f610fe1602283610f0f565b9150610fec82610f87565b604082019050919050565b5f6020820190508181035f83015261100e81610fd5565b9050919050565b7f546f6b656e205472616e73666572204c696d69742045786365656465640000005f82015250565b5f611049601d83610f0f565b915061105482611015565b602082019050919050565b5f6020820190508181035f8301526110768161103d565b9050919050565b5f61108782610aab565b915061109283610aab565b92508282019050808211156110aa576110a961094f565b5b92915050565b7f546f6b656e205472616e7366657220696e20636f6f6c646f776e0000000000005f82015250565b5f6110e4601a83610f0f565b91506110ef826110b0565b602082019050919050565b5f6020820190508181035f830152611111816110d8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61114f82610aab565b915061115a83610aab565b92508261116a57611169611118565b5b828204905092915050565b5f61117f82610aab565b915061118a83610aab565b92508282039050818111156111a2576111a161094f565b5b92915050565b6111b181610aab565b82525050565b5f6060820190506111ca5f830186610ee7565b6111d760208301856111a8565b6111e460408301846111a8565b949350505050565b5f6020820190506111ff5f8301846111a8565b92915050565b6120ed806112125f395ff3fe608060405234801561000f575f80fd5b5060043610610204575f3560e01c806370a0823111610118578063b319c6b7116100ab578063dd62ed3e1161007a578063dd62ed3e1461055b578063e43252d71461058b578063ec28438a146105a7578063f2fde38b146105c3578063fe575a87146105df57610204565b8063b319c6b7146104f7578063b7bda68f14610515578063cc7a736d14610533578063ced695a41461055157610204565b80638da5cb5b116100e75780638da5cb5b1461046a57806395d89b41146104885780639dfc9117146104a6578063a9059cbb146104c757610204565b806370a08231146103f6578063715018a6146104265780638ab1d681146104305780638c0b5e221461044c57610204565b80633af32abf1161019b578063537df3b61161016a578063537df3b61461038c57806353eb3bcf146103a8578063688188e8146103b25780636d8b0527146103bc5780636e16de11146103da57610204565b80633af32abf1461030857806344337ea11461033857806349192418146103545780634ebc552d1461037057610204565b80631c0aecfa116101d75780631c0aecfa1461029257806323b872dd146102b05780632958ad7f146102e0578063313ce567146102ea57610204565b806306fdde0314610208578063095ea7b3146102265780630ddc09761461025657806318160ddd14610274575b5f80fd5b61021061060f565b60405161021d91906118dd565b60405180910390f35b610240600480360381019061023b919061198e565b61069f565b60405161024d91906119e6565b60405180910390f35b61025e6106c1565b60405161026b9190611a0e565b60405180910390f35b61027c6106c7565b6040516102899190611a0e565b60405180910390f35b61029a6106d0565b6040516102a791906119e6565b60405180910390f35b6102ca60048036038101906102c59190611a27565b6106e5565b6040516102d791906119e6565b60405180910390f35b6102e8610713565b005b6102f2610737565b6040516102ff9190611a92565b60405180910390f35b610322600480360381019061031d9190611aab565b61073f565b60405161032f91906119e6565b60405180910390f35b610352600480360381019061034d9190611aab565b610791565b005b61036e60048036038101906103699190611ad6565b610845565b005b61038a60048036038101906103859190611ad6565b61089b565b005b6103a660048036038101906103a19190611aab565b6108f1565b005b6103b0610950565b005b6103ba610975565b005b6103c4610998565b6040516103d19190611a0e565b60405180910390f35b6103f460048036038101906103ef9190611ad6565b6109a1565b005b610410600480360381019061040b9190611aab565b6109b3565b60405161041d9190611a0e565b60405180910390f35b61042e6109f8565b005b61044a60048036038101906104459190611aab565b610a0a565b005b610454610a69565b6040516104619190611a0e565b60405180910390f35b610472610a6f565b60405161047f9190611b10565b60405180910390f35b610490610a97565b60405161049d91906118dd565b60405180910390f35b6104ae610b27565b6040516104be9493929190611b29565b60405180910390f35b6104e160048036038101906104dc919061198e565b610b4a565b6040516104ee91906119e6565b60405180910390f35b6104ff610b6c565b60405161050c9190611a0e565b60405180910390f35b61051d610b72565b60405161052a9190611b10565b60405180910390f35b61053b610b98565b6040516105489190611a0e565b60405180910390f35b610559610b9e565b005b61057560048036038101906105709190611b6c565b610bc2565b6040516105829190611a0e565b60405180910390f35b6105a560048036038101906105a09190611aab565b610c44565b005b6105c160048036038101906105bc9190611ad6565b610d2e565b005b6105dd60048036038101906105d89190611aab565b610d40565b005b6105f960048036038101906105f49190611aab565b610dc4565b60405161060691906119e6565b60405180910390f35b60606003805461061e90611bd7565b80601f016020809104026020016040519081016040528092919081815260200182805461064a90611bd7565b80156106955780601f1061066c57610100808354040283529160200191610695565b820191905f5260205f20905b81548152906001019060200180831161067857829003601f168201915b5050505050905090565b5f806106a9610e16565b90506106b6818585610e1d565b600191505092915050565b60095481565b5f600254905090565b5f600e5f9054906101000a900460ff16905090565b5f806106ef610e16565b90506106fc858285610e2f565b610707858585610ec1565b60019150509392505050565b61071b610fb1565b6001600e5f6101000a81548160ff021916908315150217905550565b5f6012905090565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b610799610fb1565b6001600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b61084d610fb1565b6005811115610891576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088890611c77565b60405180910390fd5b80600a8190555050565b6108a3610fb1565b600a8111156108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de90611cdf565b60405180910390fd5b8060098190555050565b6108f9610fb1565b5f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610958610fb1565b6001600e60016101000a81548160ff021916908315150217905550565b61097d610fb1565b5f600e5f6101000a81548160ff021916908315150217905550565b5f600754905090565b6109a9610fb1565b8060088190555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a00610fb1565b610a08611038565b565b610a12610fb1565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b60075481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610aa690611bd7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad290611bd7565b8015610b1d5780601f10610af457610100808354040283529160200191610b1d565b820191905f5260205f20905b815481529060010190602001808311610b0057829003601f168201915b5050505050905090565b5f805f80610b33610a6f565b600754600854600654935093509350935090919293565b5f80610b54610e16565b9050610b61818585610ec1565b600191505092915050565b60085481565b600e60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b610ba6610fb1565b5f600e60016101000a81548160ff021916908315150217905550565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610c4c610fb1565b600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd90611d6d565b60405180910390fd5b6001600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610d36610fb1565b8060078190555050565b610d48610fb1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610db8575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610daf9190611b10565b60405180910390fd5b610dc18161104b565b50565b5f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f33905090565b610e2a838383600161110e565b505050565b5f610e3a8484610bc2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ebb5781811015610eac578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ea393929190611d8b565b60405180910390fd5b610eba84848484035f61110e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f31575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f289190611b10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fa1575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f989190611b10565b60405180910390fd5b610fac8383836112dd565b505050565b610fb9610e16565b73ffffffffffffffffffffffffffffffffffffffff16610fd7610a6f565b73ffffffffffffffffffffffffffffffffffffffff161461103657610ffa610e16565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161102d9190611b10565b60405180910390fd5b565b611040610fb1565b6110495f61104b565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361117e575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111759190611b10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111ee575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111e59190611b10565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156112d7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112ce9190611a0e565b60405180910390a35b50505050565b600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615801561137b5750600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b6113ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b190611e0a565b60405180910390fd5b600e5f9054906101000a900460ff16156114aa57600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16801561146a5750600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b6114a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a090611e98565b60405180910390fd5b5b6007548111156114ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e690611f00565b60405180910390fd5b600854600d5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461153a9190611f4b565b42101561157c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157390611fc8565b60405180910390fd5b5f819050600e60019054906101000a900460ff1615611601575f600a546009546115a69190611f4b565b90505f606482856115b79190611fe6565b6115c19190612054565b905080846115cf9190612084565b92506115fe86600e60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611654565b50505b42600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061164e848483611654565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116a4578060025f8282546116989190611f4b565b92505081905550611772565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561172d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161172493929190611d8b565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117b9578060025f8282540392505081905550611803565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118609190611a0e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6118af8261186d565b6118b98185611877565b93506118c9818560208601611887565b6118d281611895565b840191505092915050565b5f6020820190508181035f8301526118f581846118a5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61192a82611901565b9050919050565b61193a81611920565b8114611944575f80fd5b50565b5f8135905061195581611931565b92915050565b5f819050919050565b61196d8161195b565b8114611977575f80fd5b50565b5f8135905061198881611964565b92915050565b5f80604083850312156119a4576119a36118fd565b5b5f6119b185828601611947565b92505060206119c28582860161197a565b9150509250929050565b5f8115159050919050565b6119e0816119cc565b82525050565b5f6020820190506119f95f8301846119d7565b92915050565b611a088161195b565b82525050565b5f602082019050611a215f8301846119ff565b92915050565b5f805f60608486031215611a3e57611a3d6118fd565b5b5f611a4b86828701611947565b9350506020611a5c86828701611947565b9250506040611a6d8682870161197a565b9150509250925092565b5f60ff82169050919050565b611a8c81611a77565b82525050565b5f602082019050611aa55f830184611a83565b92915050565b5f60208284031215611ac057611abf6118fd565b5b5f611acd84828501611947565b91505092915050565b5f60208284031215611aeb57611aea6118fd565b5b5f611af88482850161197a565b91505092915050565b611b0a81611920565b82525050565b5f602082019050611b235f830184611b01565b92915050565b5f608082019050611b3c5f830187611b01565b611b4960208301866119ff565b611b5660408301856119ff565b611b6360608301846119ff565b95945050505050565b5f8060408385031215611b8257611b816118fd565b5b5f611b8f85828601611947565b9250506020611ba085828601611947565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611bee57607f821691505b602082108103611c0157611c00611baa565b5b50919050565b7f536c6970706167652066656573206d757374206265206c657373207468616e205f8201527f3525000000000000000000000000000000000000000000000000000000000000602082015250565b5f611c61602283611877565b9150611c6c82611c07565b604082019050919050565b5f6020820190508181035f830152611c8e81611c55565b9050919050565b7f54617820666565206d757374206265206c657373207468616e203130250000005f82015250565b5f611cc9601d83611877565b9150611cd482611c95565b602082019050919050565b5f6020820190508181035f830152611cf681611cbd565b9050919050565b7f426c61636b6c697374656420616464726573732063616e6e6f742062652077685f8201527f6974656c69737465640000000000000000000000000000000000000000000000602082015250565b5f611d57602983611877565b9150611d6282611cfd565b604082019050919050565b5f6020820190508181035f830152611d8481611d4b565b9050919050565b5f606082019050611d9e5f830186611b01565b611dab60208301856119ff565b611db860408301846119ff565b949350505050565b7f426c61636b6c69737465642041646472657373657300000000000000000000005f82015250565b5f611df4601583611877565b9150611dff82611dc0565b602082019050919050565b5f6020820190508181035f830152611e2181611de8565b9050919050565b7f426f746820616464726573736573206d7573742062652077686974656c6973745f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f611e82602283611877565b9150611e8d82611e28565b604082019050919050565b5f6020820190508181035f830152611eaf81611e76565b9050919050565b7f546f6b656e205472616e73666572204c696d69742045786365656465640000005f82015250565b5f611eea601d83611877565b9150611ef582611eb6565b602082019050919050565b5f6020820190508181035f830152611f1781611ede565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f558261195b565b9150611f608361195b565b9250828201905080821115611f7857611f77611f1e565b5b92915050565b7f546f6b656e205472616e7366657220696e20636f6f6c646f776e0000000000005f82015250565b5f611fb2601a83611877565b9150611fbd82611f7e565b602082019050919050565b5f6020820190508181035f830152611fdf81611fa6565b9050919050565b5f611ff08261195b565b9150611ffb8361195b565b92508282026120098161195b565b915082820484148315176120205761201f611f1e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61205e8261195b565b91506120698361195b565b92508261207957612078612027565b5b828204905092915050565b5f61208e8261195b565b91506120998361195b565b92508282039050818111156120b1576120b0611f1e565b5b9291505056fea2646970667358221220c8eef9ad00a7b632390a46735f590f1c972c5b793843d324fb126788631b197364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x12 PUSH2 0x263 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x1E SWAP2 SWAP1 PUSH2 0xAC0 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH2 0x2D SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SSTORE PUSH1 0x3C PUSH1 0x8 SSTORE PUSH1 0x5 PUSH1 0x9 SSTORE PUSH1 0x2 PUSH1 0xA SSTORE PUSH0 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xE PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x32FF CODESIZE SUB DUP1 PUSH2 0x32FF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0xBA9 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43686169546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4368616900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xE18 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xE18 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B3 DUP2 PUSH2 0x26B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1C6 DUP3 PUSH1 0x6 SLOAD PUSH2 0x32E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xE PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x1205 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x39E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3AF PUSH0 DUP4 DUP4 PUSH2 0x3B3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x451 JUMPI POP PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x487 SWAP1 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x580 JUMPI PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x540 JUMPI POP PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BC SWAP1 PUSH2 0x105F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x649 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0xE PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6DD JUMPI PUSH0 PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 DUP3 DUP6 PUSH2 0x68D SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x697 SWAP2 SWAP1 PUSH2 0x1145 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x1175 JUMP JUMPDEST SWAP3 POP PUSH2 0x6DA DUP7 PUSH1 0xE PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x736 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMPDEST TIMESTAMP PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x730 DUP5 DUP5 DUP4 PUSH2 0x736 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x786 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x854 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x80F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x806 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8E5 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x9D1 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x9AD JUMPI PUSH2 0x9AC PUSH2 0x94F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x9BC JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x9CA DUP6 PUSH2 0x97C JUMP JUMPDEST SWAP5 POP PUSH2 0x991 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x9E9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST DUP2 PUSH2 0x9F6 JUMPI PUSH0 SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA0C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA16 JUMPI PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA28 JUMPI PUSH2 0xA27 PUSH2 0x94F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xA3F JUMPI PUSH2 0xA3E PUSH2 0x94F JUMP JUMPDEST JUMPDEST POP PUSH2 0xAA4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xA7A JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xA75 JUMPI PUSH2 0xA74 PUSH2 0x94F JUMP JUMPDEST JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0xA87 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x988 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA9D PUSH2 0x94F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xACA DUP3 PUSH2 0xAAB JUMP JUMPDEST SWAP2 POP PUSH2 0xAD5 DUP4 PUSH2 0xAB4 JUMP JUMPDEST SWAP3 POP PUSH2 0xB02 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x9DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB14 DUP3 PUSH2 0xAAB JUMP JUMPDEST SWAP2 POP PUSH2 0xB1F DUP4 PUSH2 0xAAB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB2D DUP2 PUSH2 0xAAB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB44 JUMPI PUSH2 0xB43 PUSH2 0x94F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB78 DUP3 PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB88 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP2 EQ PUSH2 0xB92 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBA3 DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBBF JUMPI PUSH2 0xBBE PUSH2 0xB4B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBCC DUP6 DUP3 DUP7 ADD PUSH2 0xB95 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBDD DUP6 DUP3 DUP7 ADD PUSH2 0xB95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC62 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC75 JUMPI PUSH2 0xC74 PUSH2 0xC1E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xCD7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0xCE1 DUP7 DUP4 PUSH2 0xC9C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD1C PUSH2 0xD17 PUSH2 0xD12 DUP5 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD35 DUP4 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0xD49 PUSH2 0xD41 DUP3 PUSH2 0xD23 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xCA8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xD5D PUSH2 0xD51 JUMP JUMPDEST PUSH2 0xD68 DUP2 DUP5 DUP5 PUSH2 0xD2C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD8B JUMPI PUSH2 0xD80 PUSH0 DUP3 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD6E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xDD0 JUMPI PUSH2 0xDA1 DUP2 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0xDAA DUP5 PUSH2 0xC8D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xDB9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xDCD PUSH2 0xDC5 DUP6 PUSH2 0xC8D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xD6D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xDD5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE08 DUP4 DUP4 PUSH2 0xDE1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE21 DUP3 PUSH2 0xBE7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE3A JUMPI PUSH2 0xE39 PUSH2 0xBF1 JUMP JUMPDEST JUMPDEST PUSH2 0xE44 DUP3 SLOAD PUSH2 0xC4B JUMP JUMPDEST PUSH2 0xE4F DUP3 DUP3 DUP6 PUSH2 0xD8F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xE80 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xE6E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xE78 DUP6 DUP3 PUSH2 0xDFD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xE8E DUP7 PUSH2 0xC7B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEB5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE90 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xED2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xECE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xDE1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEF0 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF09 PUSH0 DUP4 ADD DUP5 PUSH2 0xEE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x426C61636B6C6973746564204164647265737365730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF53 PUSH1 0x15 DUP4 PUSH2 0xF0F JUMP JUMPDEST SWAP2 POP PUSH2 0xF5E DUP3 PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF80 DUP2 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F746820616464726573736573206D7573742062652077686974656C697374 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFE1 PUSH1 0x22 DUP4 PUSH2 0xF0F JUMP JUMPDEST SWAP2 POP PUSH2 0xFEC DUP3 PUSH2 0xF87 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x100E DUP2 PUSH2 0xFD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E73666572204C696D6974204578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1049 PUSH1 0x1D DUP4 PUSH2 0xF0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1054 DUP3 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1076 DUP2 PUSH2 0x103D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1087 DUP3 PUSH2 0xAAB JUMP JUMPDEST SWAP2 POP PUSH2 0x1092 DUP4 PUSH2 0xAAB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10AA JUMPI PUSH2 0x10A9 PUSH2 0x94F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E7366657220696E20636F6F6C646F776E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10E4 PUSH1 0x1A DUP4 PUSH2 0xF0F JUMP JUMPDEST SWAP2 POP PUSH2 0x10EF DUP3 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1111 DUP2 PUSH2 0x10D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x114F DUP3 PUSH2 0xAAB JUMP JUMPDEST SWAP2 POP PUSH2 0x115A DUP4 PUSH2 0xAAB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x116A JUMPI PUSH2 0x1169 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x117F DUP3 PUSH2 0xAAB JUMP JUMPDEST SWAP2 POP PUSH2 0x118A DUP4 PUSH2 0xAAB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11A2 JUMPI PUSH2 0x11A1 PUSH2 0x94F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11B1 DUP2 PUSH2 0xAAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11CA PUSH0 DUP4 ADD DUP7 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x11D7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x11E4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11FF PUSH0 DUP4 ADD DUP5 PUSH2 0x11A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20ED DUP1 PUSH2 0x1212 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xB319C6B7 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x5DF JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xB319C6B7 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xB7BDA68F EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xCC7A736D EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xCED695A4 EQ PUSH2 0x551 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x9DFC9117 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C7 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x44C JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x3AF32ABF GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x537DF3B6 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x53EB3BCF EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x688188E8 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x6D8B0527 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x6E16DE11 EQ PUSH2 0x3DA JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x49192418 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x4EBC552D EQ PUSH2 0x370 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1C0AECFA GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x1C0AECFA EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x2958AD7F EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2EA JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xDDC0976 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x274 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x210 PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x713 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F2 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x73F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH2 0x950 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BA PUSH2 0x975 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C4 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH2 0x9F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0xA0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x454 PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AE PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FF PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51D PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53B PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x559 PUSH2 0xB9E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0xD2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x606 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x61E SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64A SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x695 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x695 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x678 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6A9 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP PUSH2 0x6B6 DUP2 DUP6 DUP6 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6EF PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP PUSH2 0x6FC DUP6 DUP3 DUP6 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x707 DUP6 DUP6 DUP6 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x71B PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x799 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x84D PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x891 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x888 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DE SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8F9 PUSH2 0xFB1 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x958 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x97D PUSH2 0xFB1 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0xFB1 JUMP JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA00 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0xA08 PUSH2 0x1038 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA12 PUSH2 0xFB1 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAA6 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB1D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAF4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB1D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB00 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xB33 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB54 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP PUSH2 0xB61 DUP2 DUP6 DUP6 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBA6 PUSH2 0xFB1 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4C PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD36 PUSH2 0xFB1 JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD48 PUSH2 0xFB1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAF SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC1 DUP2 PUSH2 0x104B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE2A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x110E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE3A DUP5 DUP5 PUSH2 0xBC2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xEBB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEAC JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEBA DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x110E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF31 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF98 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFAC DUP4 DUP4 DUP4 PUSH2 0x12DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFB9 PUSH2 0xE16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFD7 PUSH2 0xA6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1036 JUMPI PUSH2 0xFFA PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102D SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1040 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x1049 PUSH0 PUSH2 0x104B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1175 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E5 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x12D7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12CE SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x137B JUMPI POP PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x13BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B1 SWAP1 PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14AA JUMPI PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x146A JUMPI POP PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x14A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A0 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E6 SWAP1 PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x153A SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x157C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1573 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0xE PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1601 JUMPI PUSH0 PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x15A6 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 DUP3 DUP6 PUSH2 0x15B7 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x2054 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST SWAP3 POP PUSH2 0x15FE DUP7 PUSH1 0xE PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1654 JUMP JUMPDEST POP POP JUMPDEST TIMESTAMP PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x164E DUP5 DUP5 DUP4 PUSH2 0x1654 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16A4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1698 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1772 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x172D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1724 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17B9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1803 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1860 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18AF DUP3 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x18B9 DUP2 DUP6 PUSH2 0x1877 JUMP JUMPDEST SWAP4 POP PUSH2 0x18C9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x18D2 DUP2 PUSH2 0x1895 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F5 DUP2 DUP5 PUSH2 0x18A5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x192A DUP3 PUSH2 0x1901 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193A DUP2 PUSH2 0x1920 JUMP JUMPDEST DUP2 EQ PUSH2 0x1944 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1955 DUP2 PUSH2 0x1931 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x196D DUP2 PUSH2 0x195B JUMP JUMPDEST DUP2 EQ PUSH2 0x1977 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1988 DUP2 PUSH2 0x1964 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x18FD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19C2 DUP6 DUP3 DUP7 ADD PUSH2 0x197A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E0 DUP2 PUSH2 0x19CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A08 DUP2 PUSH2 0x195B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A21 PUSH0 DUP4 ADD DUP5 PUSH2 0x19FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A3E JUMPI PUSH2 0x1A3D PUSH2 0x18FD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A4B DUP7 DUP3 DUP8 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A5C DUP7 DUP3 DUP8 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A6D DUP7 DUP3 DUP8 ADD PUSH2 0x197A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8C DUP2 PUSH2 0x1A77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC0 JUMPI PUSH2 0x1ABF PUSH2 0x18FD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACD DUP5 DUP3 DUP6 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEB JUMPI PUSH2 0x1AEA PUSH2 0x18FD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AF8 DUP5 DUP3 DUP6 ADD PUSH2 0x197A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B0A DUP2 PUSH2 0x1920 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B23 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B3C PUSH0 DUP4 ADD DUP8 PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x1B49 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x19FF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B82 JUMPI PUSH2 0x1B81 PUSH2 0x18FD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8F DUP6 DUP3 DUP7 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BA0 DUP6 DUP3 DUP7 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BEE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C01 JUMPI PUSH2 0x1C00 PUSH2 0x1BAA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536C6970706167652066656573206D757374206265206C657373207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x3525000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C61 PUSH1 0x22 DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6C DUP3 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C8E DUP2 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54617820666565206D757374206265206C657373207468616E20313025000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC9 PUSH1 0x1D DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD4 DUP3 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CF6 DUP2 PUSH2 0x1CBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426C61636B6C697374656420616464726573732063616E6E6F74206265207768 PUSH0 DUP3 ADD MSTORE PUSH32 0x6974656C69737465640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D57 PUSH1 0x29 DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D62 DUP3 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D84 DUP2 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D9E PUSH0 DUP4 ADD DUP7 PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x1DAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x1DB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x426C61636B6C6973746564204164647265737365730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF4 PUSH1 0x15 DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFF DUP3 PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E21 DUP2 PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F746820616464726573736573206D7573742062652077686974656C697374 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E82 PUSH1 0x22 DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E8D DUP3 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EAF DUP2 PUSH2 0x1E76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E73666572204C696D6974204578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEA PUSH1 0x1D DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF5 DUP3 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F17 DUP2 PUSH2 0x1EDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F55 DUP3 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F60 DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F78 JUMPI PUSH2 0x1F77 PUSH2 0x1F1E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E7366657220696E20636F6F6C646F776E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB2 PUSH1 0x1A DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBD DUP3 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FDF DUP2 PUSH2 0x1FA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF0 DUP3 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFB DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2009 DUP2 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2020 JUMPI PUSH2 0x201F PUSH2 0x1F1E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x205E DUP3 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x2069 DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2079 JUMPI PUSH2 0x2078 PUSH2 0x2027 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x208E DUP3 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x2099 DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x20B1 JUMPI PUSH2 0x20B0 PUSH2 0x1F1E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xEE 0xF9 0xAD STOP 0xA7 0xB6 ORIGIN CODECOPY EXP CHAINID PUSH20 0x5F590F1C972C5B793843D324FB126788631B1973 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "224:4286:6:-:0;;;317:10;:8;;;:10;;:::i;:::-;313:2;:14;;;;:::i;:::-;301:9;:26;;;;:::i;:::-;268:59;;385:14;;356:43;;436:9;406:39;;477:1;452:26;;515:1;485:31;;717:5;681:41;;;;;;;;;;;;;;;;;;;;756:5;729:32;;;;;;;;;;;;;;;;;;;;805:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;913:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;943:35:6::2;949:12;963:14;;943:5;;;:35;;:::i;:::-;1060:4;1033:10;:24;1044:12;1033:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1088:11;1075:10;;:24;;;;;;;;;;;;;;;;;;805:302:::0;;224:4286;;3002:82:2;3051:5;3075:2;3068:9;;3002:82;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;3528:977:6:-;3630:10;:16;3641:4;3630:16;;;;;;;;;;;;;;;;;;;;;;;;;3629:17;:36;;;;;3651:10;:14;3662:2;3651:14;;;;;;;;;;;;;;;;;;;;;;;;;3650:15;3629:36;3621:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3706:20;;;;;;;;;;;3703:143;;;3760:10;:16;3771:4;3760:16;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;;;3780:10;:14;3791:2;3780:14;;;;;;;;;;;;;;;;;;;;;;;;;3760:34;3752:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3703:143;3873:11;;3864:5;:20;;3856:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3975:12;;3957:11;:17;3969:4;3957:17;;;;;;;;;;;;;;;;:30;;;;:::i;:::-;3938:15;:49;;3930:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;4040:22;4065:5;4040:30;;4084:11;;;;;;;;;;;4081:273;;;4121:17;4151:12;;4141:7;;:22;;;;:::i;:::-;4121:42;;4192:17;4232:3;4221:9;4213:5;:17;;;;:::i;:::-;4212:23;;;;:::i;:::-;4192:43;;4275:9;4267:5;:17;;;;:::i;:::-;4250:34;;4299:43;4313:4;4319:10;;;;;;;;;;;4332:9;4299:13;;;:43;;:::i;:::-;4106:248;;4081:273;4394:15;4374:11;:17;4386:4;4374:17;;;;;;;;;;;;;;;:35;;;;4420:39;4434:4;4440:2;4444:14;4420:13;;;:39;;:::i;:::-;3610:895;3528:977;;;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:180:7:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:86::-;2352:7;2392:4;2385:5;2381:16;2370:27;;2317:86;;;:::o;2409:281::-;2467:5;2491:23;2509:4;2491:23;:::i;:::-;2483:31;;2535:25;2551:8;2535:25;:::i;:::-;2523:37;;2579:104;2616:66;2606:8;2600:4;2579:104;:::i;:::-;2570:113;;2409:281;;;;:::o;2696:410::-;2736:7;2759:20;2777:1;2759:20;:::i;:::-;2754:25;;2793:20;2811:1;2793:20;:::i;:::-;2788:25;;2848:1;2845;2841:9;2870:30;2888:11;2870:30;:::i;:::-;2859:41;;3049:1;3040:7;3036:15;3033:1;3030:22;3010:1;3003:9;2983:83;2960:139;;3079:18;;:::i;:::-;2960:139;2744:362;2696:410;;;;:::o;3193:117::-;3302:1;3299;3292:12;3439:126;3476:7;3516:42;3509:5;3505:54;3494:65;;3439:126;;;:::o;3571:96::-;3608:7;3637:24;3655:5;3637:24;:::i;:::-;3626:35;;3571:96;;;:::o;3673:122::-;3746:24;3764:5;3746:24;:::i;:::-;3739:5;3736:35;3726:63;;3785:1;3782;3775:12;3726:63;3673:122;:::o;3801:143::-;3858:5;3889:6;3883:13;3874:22;;3905:33;3932:5;3905:33;:::i;:::-;3801:143;;;;:::o;3950:507::-;4029:6;4037;4086:2;4074:9;4065:7;4061:23;4057:32;4054:119;;;4092:79;;:::i;:::-;4054:119;4212:1;4237:64;4293:7;4284:6;4273:9;4269:22;4237:64;:::i;:::-;4227:74;;4183:128;4350:2;4376:64;4432:7;4423:6;4412:9;4408:22;4376:64;:::i;:::-;4366:74;;4321:129;3950:507;;;;;:::o;4463:99::-;4515:6;4549:5;4543:12;4533:22;;4463:99;;;:::o;4568:180::-;4616:77;4613:1;4606:88;4713:4;4710:1;4703:15;4737:4;4734:1;4727:15;4754:180;4802:77;4799:1;4792:88;4899:4;4896:1;4889:15;4923:4;4920:1;4913:15;4940:320;4984:6;5021:1;5015:4;5011:12;5001:22;;5068:1;5062:4;5058:12;5089:18;5079:81;;5145:4;5137:6;5133:17;5123:27;;5079:81;5207:2;5199:6;5196:14;5176:18;5173:38;5170:84;;5226:18;;:::i;:::-;5170:84;4991:269;4940:320;;;:::o;5266:141::-;5315:4;5338:3;5330:11;;5361:3;5358:1;5351:14;5395:4;5392:1;5382:18;5374:26;;5266:141;;;:::o;5413:93::-;5450:6;5497:2;5492;5485:5;5481:14;5477:23;5467:33;;5413:93;;;:::o;5512:107::-;5556:8;5606:5;5600:4;5596:16;5575:37;;5512:107;;;;:::o;5625:393::-;5694:6;5744:1;5732:10;5728:18;5767:97;5797:66;5786:9;5767:97;:::i;:::-;5885:39;5915:8;5904:9;5885:39;:::i;:::-;5873:51;;5957:4;5953:9;5946:5;5942:21;5933:30;;6006:4;5996:8;5992:19;5985:5;5982:30;5972:40;;5701:317;;5625:393;;;;;:::o;6024:60::-;6052:3;6073:5;6066:12;;6024:60;;;:::o;6090:142::-;6140:9;6173:53;6191:34;6200:24;6218:5;6200:24;:::i;:::-;6191:34;:::i;:::-;6173:53;:::i;:::-;6160:66;;6090:142;;;:::o;6238:75::-;6281:3;6302:5;6295:12;;6238:75;;;:::o;6319:269::-;6429:39;6460:7;6429:39;:::i;:::-;6490:91;6539:41;6563:16;6539:41;:::i;:::-;6531:6;6524:4;6518:11;6490:91;:::i;:::-;6484:4;6477:105;6395:193;6319:269;;;:::o;6594:73::-;6639:3;6594:73;:::o;6673:189::-;6750:32;;:::i;:::-;6791:65;6849:6;6841;6835:4;6791:65;:::i;:::-;6726:136;6673:189;;:::o;6868:186::-;6928:120;6945:3;6938:5;6935:14;6928:120;;;6999:39;7036:1;7029:5;6999:39;:::i;:::-;6972:1;6965:5;6961:13;6952:22;;6928:120;;;6868:186;;:::o;7060:543::-;7161:2;7156:3;7153:11;7150:446;;;7195:38;7227:5;7195:38;:::i;:::-;7279:29;7297:10;7279:29;:::i;:::-;7269:8;7265:44;7462:2;7450:10;7447:18;7444:49;;;7483:8;7468:23;;7444:49;7506:80;7562:22;7580:3;7562:22;:::i;:::-;7552:8;7548:37;7535:11;7506:80;:::i;:::-;7165:431;;7150:446;7060:543;;;:::o;7609:117::-;7663:8;7713:5;7707:4;7703:16;7682:37;;7609:117;;;;:::o;7732:169::-;7776:6;7809:51;7857:1;7853:6;7845:5;7842:1;7838:13;7809:51;:::i;:::-;7805:56;7890:4;7884;7880:15;7870:25;;7783:118;7732:169;;;;:::o;7906:295::-;7982:4;8128:29;8153:3;8147:4;8128:29;:::i;:::-;8120:37;;8190:3;8187:1;8183:11;8177:4;8174:21;8166:29;;7906:295;;;;:::o;8206:1395::-;8323:37;8356:3;8323:37;:::i;:::-;8425:18;8417:6;8414:30;8411:56;;;8447:18;;:::i;:::-;8411:56;8491:38;8523:4;8517:11;8491:38;:::i;:::-;8576:67;8636:6;8628;8622:4;8576:67;:::i;:::-;8670:1;8694:4;8681:17;;8726:2;8718:6;8715:14;8743:1;8738:618;;;;9400:1;9417:6;9414:77;;;9466:9;9461:3;9457:19;9451:26;9442:35;;9414:77;9517:67;9577:6;9570:5;9517:67;:::i;:::-;9511:4;9504:81;9373:222;8708:887;;8738:618;8790:4;8786:9;8778:6;8774:22;8824:37;8856:4;8824:37;:::i;:::-;8883:1;8897:208;8911:7;8908:1;8905:14;8897:208;;;8990:9;8985:3;8981:19;8975:26;8967:6;8960:42;9041:1;9033:6;9029:14;9019:24;;9088:2;9077:9;9073:18;9060:31;;8934:4;8931:1;8927:12;8922:17;;8897:208;;;9133:6;9124:7;9121:19;9118:179;;;9191:9;9186:3;9182:19;9176:26;9234:48;9276:4;9268:6;9264:17;9253:9;9234:48;:::i;:::-;9226:6;9219:64;9141:156;9118:179;9343:1;9339;9331:6;9327:14;9323:22;9317:4;9310:36;8745:611;;;8708:887;;8298:1303;;;8206:1395;;:::o;9607:118::-;9694:24;9712:5;9694:24;:::i;:::-;9689:3;9682:37;9607:118;;:::o;9731:222::-;9824:4;9862:2;9851:9;9847:18;9839:26;;9875:71;9943:1;9932:9;9928:17;9919:6;9875:71;:::i;:::-;9731:222;;;;:::o;9959:169::-;10043:11;10077:6;10072:3;10065:19;10117:4;10112:3;10108:14;10093:29;;9959:169;;;;:::o;10134:171::-;10274:23;10270:1;10262:6;10258:14;10251:47;10134:171;:::o;10311:366::-;10453:3;10474:67;10538:2;10533:3;10474:67;:::i;:::-;10467:74;;10550:93;10639:3;10550:93;:::i;:::-;10668:2;10663:3;10659:12;10652:19;;10311:366;;;:::o;10683:419::-;10849:4;10887:2;10876:9;10872:18;10864:26;;10936:9;10930:4;10926:20;10922:1;10911:9;10907:17;10900:47;10964:131;11090:4;10964:131;:::i;:::-;10956:139;;10683:419;;;:::o;11108:221::-;11248:34;11244:1;11236:6;11232:14;11225:58;11317:4;11312:2;11304:6;11300:15;11293:29;11108:221;:::o;11335:366::-;11477:3;11498:67;11562:2;11557:3;11498:67;:::i;:::-;11491:74;;11574:93;11663:3;11574:93;:::i;:::-;11692:2;11687:3;11683:12;11676:19;;11335:366;;;:::o;11707:419::-;11873:4;11911:2;11900:9;11896:18;11888:26;;11960:9;11954:4;11950:20;11946:1;11935:9;11931:17;11924:47;11988:131;12114:4;11988:131;:::i;:::-;11980:139;;11707:419;;;:::o;12132:179::-;12272:31;12268:1;12260:6;12256:14;12249:55;12132:179;:::o;12317:366::-;12459:3;12480:67;12544:2;12539:3;12480:67;:::i;:::-;12473:74;;12556:93;12645:3;12556:93;:::i;:::-;12674:2;12669:3;12665:12;12658:19;;12317:366;;;:::o;12689:419::-;12855:4;12893:2;12882:9;12878:18;12870:26;;12942:9;12936:4;12932:20;12928:1;12917:9;12913:17;12906:47;12970:131;13096:4;12970:131;:::i;:::-;12962:139;;12689:419;;;:::o;13114:191::-;13154:3;13173:20;13191:1;13173:20;:::i;:::-;13168:25;;13207:20;13225:1;13207:20;:::i;:::-;13202:25;;13250:1;13247;13243:9;13236:16;;13271:3;13268:1;13265:10;13262:36;;;13278:18;;:::i;:::-;13262:36;13114:191;;;;:::o;13311:176::-;13451:28;13447:1;13439:6;13435:14;13428:52;13311:176;:::o;13493:366::-;13635:3;13656:67;13720:2;13715:3;13656:67;:::i;:::-;13649:74;;13732:93;13821:3;13732:93;:::i;:::-;13850:2;13845:3;13841:12;13834:19;;13493:366;;;:::o;13865:419::-;14031:4;14069:2;14058:9;14054:18;14046:26;;14118:9;14112:4;14108:20;14104:1;14093:9;14089:17;14082:47;14146:131;14272:4;14146:131;:::i;:::-;14138:139;;13865:419;;;:::o;14290:180::-;14338:77;14335:1;14328:88;14435:4;14432:1;14425:15;14459:4;14456:1;14449:15;14476:185;14516:1;14533:20;14551:1;14533:20;:::i;:::-;14528:25;;14567:20;14585:1;14567:20;:::i;:::-;14562:25;;14606:1;14596:35;;14611:18;;:::i;:::-;14596:35;14653:1;14650;14646:9;14641:14;;14476:185;;;;:::o;14667:194::-;14707:4;14727:20;14745:1;14727:20;:::i;:::-;14722:25;;14761:20;14779:1;14761:20;:::i;:::-;14756:25;;14805:1;14802;14798:9;14790:17;;14829:1;14823:4;14820:11;14817:37;;;14834:18;;:::i;:::-;14817:37;14667:194;;;;:::o;14867:118::-;14954:24;14972:5;14954:24;:::i;:::-;14949:3;14942:37;14867:118;;:::o;14991:442::-;15140:4;15178:2;15167:9;15163:18;15155:26;;15191:71;15259:1;15248:9;15244:17;15235:6;15191:71;:::i;:::-;15272:72;15340:2;15329:9;15325:18;15316:6;15272:72;:::i;:::-;15354;15422:2;15411:9;15407:18;15398:6;15354:72;:::i;:::-;14991:442;;;;;;:::o;15439:222::-;15532:4;15570:2;15559:9;15555:18;15547:26;;15583:71;15651:1;15640:9;15636:17;15627:6;15583:71;:::i;:::-;15439:222;;;;:::o;224:4286:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SlippageFees_961": {
									"entryPoint": 2968,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 3613,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4366,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4017,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3606,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3631,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4171,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3777,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1362": {
									"entryPoint": 4829,
									"id": 1362,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5716,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToBlacklist_1043": {
									"entryPoint": 1937,
									"id": 1043,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addToWhitelist_1111": {
									"entryPoint": 3140,
									"id": 1111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3010,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1695,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2483,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cooldownTime_955": {
									"entryPoint": 2924,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1847,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@disableTax_1254": {
									"entryPoint": 2974,
									"id": 1254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@disableWhiteListing_1089": {
									"entryPoint": 2421,
									"id": 1089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enableTax_1244": {
									"entryPoint": 2384,
									"id": 1244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enableWhiteListing_1079": {
									"entryPoint": 1811,
									"id": 1079,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getContractDetails_1196": {
									"entryPoint": 2855,
									"id": 1196,
									"parameterSlots": 0,
									"returnSlots": 4
								},
								"@getMaxTxAmount_1165": {
									"entryPoint": 2456,
									"id": 1165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isBlacklisted_1069": {
									"entryPoint": 3524,
									"id": 1069,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhiteListingEnabled_1145": {
									"entryPoint": 1744,
									"id": 1145,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isWhitelisted_1137": {
									"entryPoint": 1855,
									"id": 1137,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxTxAmount_952": {
									"entryPoint": 2665,
									"id": 952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1551,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2671,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromBlacklist_1057": {
									"entryPoint": 2289,
									"id": 1057,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeFromWhitelist_1125": {
									"entryPoint": 2570,
									"id": 1125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_1023": {
									"entryPoint": 2552,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 4152,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCoolDownTime_1177": {
									"entryPoint": 2465,
									"id": 1177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxTxAmount_1157": {
									"entryPoint": 3374,
									"id": 1157,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSlippageFees_1234": {
									"entryPoint": 2117,
									"id": 1234,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxes_1215": {
									"entryPoint": 2203,
									"id": 1215,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2711,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxAddress_981": {
									"entryPoint": 2930,
									"id": 981,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@taxFees_958": {
									"entryPoint": 1729,
									"id": 958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1735,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1765,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3392,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2890,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7563,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7966,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8231,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7082,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7": {
									"entryPoint": 7616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb": {
									"entryPoint": 7421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72": {
									"entryPoint": 7720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693": {
									"entryPoint": 7862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd": {
									"entryPoint": 7317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59": {
									"entryPoint": 7175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9": {
									"entryPoint": 8062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16136:7",
										"nodeType": "YulBlock",
										"src": "0:16136:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5147:263:7",
													"nodeType": "YulBlock",
													"src": "5147:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:7",
																"nodeType": "YulBlock",
																"src": "5193:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:7"
																			},
																			"nativeSrc": "5195:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:7"
																		},
																		"nativeSrc": "5195:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:7"
																		},
																		"nativeSrc": "5164:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:7"
																},
																"nativeSrc": "5160:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:7"
															},
															"nativeSrc": "5157:119:7",
															"nodeType": "YulIf",
															"src": "5157:119:7"
														},
														{
															"nativeSrc": "5286:117:7",
															"nodeType": "YulBlock",
															"src": "5286:117:7",
															"statements": [
																{
																	"nativeSrc": "5301:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:7"
																				},
																				"nativeSrc": "5361:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:7"
																		},
																		"nativeSrc": "5340:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:7",
														"nodeType": "YulTypedName",
														"src": "5117:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:7",
														"nodeType": "YulTypedName",
														"src": "5128:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:7",
														"nodeType": "YulTypedName",
														"src": "5140:6:7",
														"type": ""
													}
												],
												"src": "5081:329:7"
											},
											{
												"body": {
													"nativeSrc": "5481:53:7",
													"nodeType": "YulBlock",
													"src": "5481:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:7"
																		},
																		"nativeSrc": "5503:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:7"
																},
																"nativeSrc": "5491:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:7"
															},
															"nativeSrc": "5491:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:7",
														"nodeType": "YulTypedName",
														"src": "5469:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:7",
														"nodeType": "YulTypedName",
														"src": "5476:3:7",
														"type": ""
													}
												],
												"src": "5416:118:7"
											},
											{
												"body": {
													"nativeSrc": "5638:124:7",
													"nodeType": "YulBlock",
													"src": "5638:124:7",
													"statements": [
														{
															"nativeSrc": "5648:26:7",
															"nodeType": "YulAssignment",
															"src": "5648:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:7"
																},
																"nativeSrc": "5656:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:7"
																		},
																		"nativeSrc": "5737:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:7"
																},
																"nativeSrc": "5684:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:7"
															},
															"nativeSrc": "5684:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:7",
														"nodeType": "YulTypedName",
														"src": "5610:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:7",
														"nodeType": "YulTypedName",
														"src": "5622:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:7",
														"nodeType": "YulTypedName",
														"src": "5633:4:7",
														"type": ""
													}
												],
												"src": "5540:222:7"
											},
											{
												"body": {
													"nativeSrc": "5950:371:7",
													"nodeType": "YulBlock",
													"src": "5950:371:7",
													"statements": [
														{
															"nativeSrc": "5960:27:7",
															"nodeType": "YulAssignment",
															"src": "5960:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5972:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5972:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5983:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5983:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5968:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5968:3:7"
																},
																"nativeSrc": "5968:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5968:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5960:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5960:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6041:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6054:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6054:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6065:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6065:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6050:3:7"
																		},
																		"nativeSrc": "6050:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6050:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5997:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5997:43:7"
																},
																"nativeSrc": "5997:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5997:71:7"
															},
															"nativeSrc": "5997:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5997:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6122:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6122:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6135:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6135:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6146:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6146:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6131:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6131:3:7"
																		},
																		"nativeSrc": "6131:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6131:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6078:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6078:43:7"
																},
																"nativeSrc": "6078:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6078:72:7"
															},
															"nativeSrc": "6078:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6078:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6204:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6204:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6217:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6217:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6228:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6228:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6213:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6213:3:7"
																		},
																		"nativeSrc": "6213:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6213:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6160:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:43:7"
																},
																"nativeSrc": "6160:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6160:72:7"
															},
															"nativeSrc": "6160:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6160:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6286:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6286:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6299:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6299:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6310:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6310:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6295:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6295:3:7"
																		},
																		"nativeSrc": "6295:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6295:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6242:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6242:43:7"
																},
																"nativeSrc": "6242:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6242:72:7"
															},
															"nativeSrc": "6242:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6242:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5768:553:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5898:9:7",
														"nodeType": "YulTypedName",
														"src": "5898:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5910:6:7",
														"nodeType": "YulTypedName",
														"src": "5910:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5918:6:7",
														"nodeType": "YulTypedName",
														"src": "5918:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5926:6:7",
														"nodeType": "YulTypedName",
														"src": "5926:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5934:6:7",
														"nodeType": "YulTypedName",
														"src": "5934:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5945:4:7",
														"nodeType": "YulTypedName",
														"src": "5945:4:7",
														"type": ""
													}
												],
												"src": "5768:553:7"
											},
											{
												"body": {
													"nativeSrc": "6410:391:7",
													"nodeType": "YulBlock",
													"src": "6410:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6456:83:7",
																"nodeType": "YulBlock",
																"src": "6456:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6458:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6458:77:7"
																			},
																			"nativeSrc": "6458:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6458:79:7"
																		},
																		"nativeSrc": "6458:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6458:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6431:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6431:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6440:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6440:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6427:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6427:3:7"
																		},
																		"nativeSrc": "6427:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6427:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6452:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6452:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6423:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6423:3:7"
																},
																"nativeSrc": "6423:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6423:32:7"
															},
															"nativeSrc": "6420:119:7",
															"nodeType": "YulIf",
															"src": "6420:119:7"
														},
														{
															"nativeSrc": "6549:117:7",
															"nodeType": "YulBlock",
															"src": "6549:117:7",
															"statements": [
																{
																	"nativeSrc": "6564:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6564:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6578:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6578:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6568:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6568:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6593:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6593:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6628:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6628:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6639:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6639:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6624:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6624:3:7"
																				},
																				"nativeSrc": "6624:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6624:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6648:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6648:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6603:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6603:20:7"
																		},
																		"nativeSrc": "6603:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6603:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6593:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6593:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6676:118:7",
															"nodeType": "YulBlock",
															"src": "6676:118:7",
															"statements": [
																{
																	"nativeSrc": "6691:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6691:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6705:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6705:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6695:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6695:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6721:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6721:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6756:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6756:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6767:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6767:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6752:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6752:3:7"
																				},
																				"nativeSrc": "6752:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6752:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6776:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6776:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6731:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6731:20:7"
																		},
																		"nativeSrc": "6731:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6731:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6721:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6721:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6327:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6372:9:7",
														"nodeType": "YulTypedName",
														"src": "6372:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6383:7:7",
														"nodeType": "YulTypedName",
														"src": "6383:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6395:6:7",
														"nodeType": "YulTypedName",
														"src": "6395:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6403:6:7",
														"nodeType": "YulTypedName",
														"src": "6403:6:7",
														"type": ""
													}
												],
												"src": "6327:474:7"
											},
											{
												"body": {
													"nativeSrc": "6835:152:7",
													"nodeType": "YulBlock",
													"src": "6835:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6852:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6852:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6855:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6855:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6845:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6845:6:7"
																},
																"nativeSrc": "6845:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6845:88:7"
															},
															"nativeSrc": "6845:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6845:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6949:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6949:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6952:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6952:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6942:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6942:6:7"
																},
																"nativeSrc": "6942:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6942:15:7"
															},
															"nativeSrc": "6942:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6942:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6973:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6973:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6976:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6976:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6966:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6966:6:7"
																},
																"nativeSrc": "6966:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6966:15:7"
															},
															"nativeSrc": "6966:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6966:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6807:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6807:180:7"
											},
											{
												"body": {
													"nativeSrc": "7044:269:7",
													"nodeType": "YulBlock",
													"src": "7044:269:7",
													"statements": [
														{
															"nativeSrc": "7054:22:7",
															"nodeType": "YulAssignment",
															"src": "7054:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7068:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7068:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7074:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7074:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7064:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7064:3:7"
																},
																"nativeSrc": "7064:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7064:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7054:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7054:6:7"
																}
															]
														},
														{
															"nativeSrc": "7085:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7085:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7115:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7115:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7111:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7111:3:7"
																},
																"nativeSrc": "7111:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7111:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7089:18:7",
																	"nodeType": "YulTypedName",
																	"src": "7089:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7162:51:7",
																"nodeType": "YulBlock",
																"src": "7162:51:7",
																"statements": [
																	{
																		"nativeSrc": "7176:27:7",
																		"nodeType": "YulAssignment",
																		"src": "7176:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7190:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7190:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7198:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7198:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7186:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7186:3:7"
																			},
																			"nativeSrc": "7186:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7186:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7176:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7176:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7142:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7142:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7135:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7135:6:7"
																},
																"nativeSrc": "7135:26:7",
																"nodeType": "YulFunctionCall",
																"src": "7135:26:7"
															},
															"nativeSrc": "7132:81:7",
															"nodeType": "YulIf",
															"src": "7132:81:7"
														},
														{
															"body": {
																"nativeSrc": "7265:42:7",
																"nodeType": "YulBlock",
																"src": "7265:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7279:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7279:16:7"
																			},
																			"nativeSrc": "7279:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7279:18:7"
																		},
																		"nativeSrc": "7279:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7279:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7229:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7229:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7252:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7252:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7260:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7260:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7249:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7249:2:7"
																		},
																		"nativeSrc": "7249:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7249:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7226:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7226:2:7"
																},
																"nativeSrc": "7226:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7226:38:7"
															},
															"nativeSrc": "7223:84:7",
															"nodeType": "YulIf",
															"src": "7223:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6993:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7028:4:7",
														"nodeType": "YulTypedName",
														"src": "7028:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7037:6:7",
														"nodeType": "YulTypedName",
														"src": "7037:6:7",
														"type": ""
													}
												],
												"src": "6993:320:7"
											},
											{
												"body": {
													"nativeSrc": "7425:115:7",
													"nodeType": "YulBlock",
													"src": "7425:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7447:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7447:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7455:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7455:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7443:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7443:3:7"
																		},
																		"nativeSrc": "7443:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7443:14:7"
																	},
																	{
																		"hexValue": "536c6970706167652066656573206d757374206265206c657373207468616e20",
																		"kind": "string",
																		"nativeSrc": "7459:34:7",
																		"nodeType": "YulLiteral",
																		"src": "7459:34:7",
																		"type": "",
																		"value": "Slippage fees must be less than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7436:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:7"
																},
																"nativeSrc": "7436:58:7",
																"nodeType": "YulFunctionCall",
																"src": "7436:58:7"
															},
															"nativeSrc": "7436:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "7436:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7515:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7515:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7523:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7523:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7511:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7511:3:7"
																		},
																		"nativeSrc": "7511:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7511:15:7"
																	},
																	{
																		"hexValue": "3525",
																		"kind": "string",
																		"nativeSrc": "7528:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7528:4:7",
																		"type": "",
																		"value": "5%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7504:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7504:6:7"
																},
																"nativeSrc": "7504:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7504:29:7"
															},
															"nativeSrc": "7504:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "7504:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59",
												"nativeSrc": "7319:221:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7417:6:7",
														"nodeType": "YulTypedName",
														"src": "7417:6:7",
														"type": ""
													}
												],
												"src": "7319:221:7"
											},
											{
												"body": {
													"nativeSrc": "7692:220:7",
													"nodeType": "YulBlock",
													"src": "7692:220:7",
													"statements": [
														{
															"nativeSrc": "7702:74:7",
															"nodeType": "YulAssignment",
															"src": "7702:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7768:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7768:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7773:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7773:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7709:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7709:58:7"
																},
																"nativeSrc": "7709:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7709:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7702:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7702:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7874:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7874:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59",
																	"nativeSrc": "7785:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7785:88:7"
																},
																"nativeSrc": "7785:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7785:93:7"
															},
															"nativeSrc": "7785:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7785:93:7"
														},
														{
															"nativeSrc": "7887:19:7",
															"nodeType": "YulAssignment",
															"src": "7887:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7898:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7898:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7903:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7903:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7894:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7894:3:7"
																},
																"nativeSrc": "7894:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7894:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7887:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7887:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7546:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7680:3:7",
														"nodeType": "YulTypedName",
														"src": "7680:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7688:3:7",
														"nodeType": "YulTypedName",
														"src": "7688:3:7",
														"type": ""
													}
												],
												"src": "7546:366:7"
											},
											{
												"body": {
													"nativeSrc": "8089:248:7",
													"nodeType": "YulBlock",
													"src": "8089:248:7",
													"statements": [
														{
															"nativeSrc": "8099:26:7",
															"nodeType": "YulAssignment",
															"src": "8099:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8111:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8111:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8122:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8122:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8107:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8107:3:7"
																},
																"nativeSrc": "8107:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8107:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8099:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8099:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8146:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8146:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8157:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8157:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8142:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8142:3:7"
																		},
																		"nativeSrc": "8142:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8142:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8165:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8165:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8171:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8171:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8161:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8161:3:7"
																		},
																		"nativeSrc": "8161:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8161:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8135:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8135:6:7"
																},
																"nativeSrc": "8135:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8135:47:7"
															},
															"nativeSrc": "8135:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8135:47:7"
														},
														{
															"nativeSrc": "8191:139:7",
															"nodeType": "YulAssignment",
															"src": "8191:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8325:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8325:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8199:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8199:124:7"
																},
																"nativeSrc": "8199:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8199:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8191:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8191:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7918:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8069:9:7",
														"nodeType": "YulTypedName",
														"src": "8069:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8084:4:7",
														"nodeType": "YulTypedName",
														"src": "8084:4:7",
														"type": ""
													}
												],
												"src": "7918:419:7"
											},
											{
												"body": {
													"nativeSrc": "8449:73:7",
													"nodeType": "YulBlock",
													"src": "8449:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8471:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8471:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8479:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8479:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8467:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8467:3:7"
																		},
																		"nativeSrc": "8467:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8467:14:7"
																	},
																	{
																		"hexValue": "54617820666565206d757374206265206c657373207468616e20313025",
																		"kind": "string",
																		"nativeSrc": "8483:31:7",
																		"nodeType": "YulLiteral",
																		"src": "8483:31:7",
																		"type": "",
																		"value": "Tax fee must be less than 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8460:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8460:6:7"
																},
																"nativeSrc": "8460:55:7",
																"nodeType": "YulFunctionCall",
																"src": "8460:55:7"
															},
															"nativeSrc": "8460:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "8460:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd",
												"nativeSrc": "8343:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8441:6:7",
														"nodeType": "YulTypedName",
														"src": "8441:6:7",
														"type": ""
													}
												],
												"src": "8343:179:7"
											},
											{
												"body": {
													"nativeSrc": "8674:220:7",
													"nodeType": "YulBlock",
													"src": "8674:220:7",
													"statements": [
														{
															"nativeSrc": "8684:74:7",
															"nodeType": "YulAssignment",
															"src": "8684:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8750:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8750:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8755:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8755:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8691:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8691:58:7"
																},
																"nativeSrc": "8691:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8691:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8684:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8684:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8856:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8856:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd",
																	"nativeSrc": "8767:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8767:88:7"
																},
																"nativeSrc": "8767:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8767:93:7"
															},
															"nativeSrc": "8767:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8767:93:7"
														},
														{
															"nativeSrc": "8869:19:7",
															"nodeType": "YulAssignment",
															"src": "8869:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8880:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8880:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8885:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8885:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8876:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8876:3:7"
																},
																"nativeSrc": "8876:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8876:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8869:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8869:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8528:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8662:3:7",
														"nodeType": "YulTypedName",
														"src": "8662:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8670:3:7",
														"nodeType": "YulTypedName",
														"src": "8670:3:7",
														"type": ""
													}
												],
												"src": "8528:366:7"
											},
											{
												"body": {
													"nativeSrc": "9071:248:7",
													"nodeType": "YulBlock",
													"src": "9071:248:7",
													"statements": [
														{
															"nativeSrc": "9081:26:7",
															"nodeType": "YulAssignment",
															"src": "9081:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9093:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9093:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9104:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9104:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9089:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9089:3:7"
																},
																"nativeSrc": "9089:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9089:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9081:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9081:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9128:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9128:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9139:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9139:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9124:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9124:3:7"
																		},
																		"nativeSrc": "9124:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9124:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9147:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9147:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9153:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9153:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9143:3:7"
																		},
																		"nativeSrc": "9143:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9143:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9117:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9117:6:7"
																},
																"nativeSrc": "9117:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9117:47:7"
															},
															"nativeSrc": "9117:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9117:47:7"
														},
														{
															"nativeSrc": "9173:139:7",
															"nodeType": "YulAssignment",
															"src": "9173:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9307:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9307:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9181:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9181:124:7"
																},
																"nativeSrc": "9181:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9181:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9173:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9173:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8900:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9051:9:7",
														"nodeType": "YulTypedName",
														"src": "9051:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9066:4:7",
														"nodeType": "YulTypedName",
														"src": "9066:4:7",
														"type": ""
													}
												],
												"src": "8900:419:7"
											},
											{
												"body": {
													"nativeSrc": "9431:122:7",
													"nodeType": "YulBlock",
													"src": "9431:122:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9453:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9453:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9461:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9461:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9449:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9449:3:7"
																		},
																		"nativeSrc": "9449:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9449:14:7"
																	},
																	{
																		"hexValue": "426c61636b6c697374656420616464726573732063616e6e6f74206265207768",
																		"kind": "string",
																		"nativeSrc": "9465:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9465:34:7",
																		"type": "",
																		"value": "Blacklisted address cannot be wh"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9442:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9442:6:7"
																},
																"nativeSrc": "9442:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9442:58:7"
															},
															"nativeSrc": "9442:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9442:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9521:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9521:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9529:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9529:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9517:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9517:3:7"
																		},
																		"nativeSrc": "9517:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9517:15:7"
																	},
																	{
																		"hexValue": "6974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "9534:11:7",
																		"nodeType": "YulLiteral",
																		"src": "9534:11:7",
																		"type": "",
																		"value": "itelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9510:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9510:6:7"
																},
																"nativeSrc": "9510:36:7",
																"nodeType": "YulFunctionCall",
																"src": "9510:36:7"
															},
															"nativeSrc": "9510:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "9510:36:7"
														}
													]
												},
												"name": "store_literal_in_memory_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb",
												"nativeSrc": "9325:228:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9423:6:7",
														"nodeType": "YulTypedName",
														"src": "9423:6:7",
														"type": ""
													}
												],
												"src": "9325:228:7"
											},
											{
												"body": {
													"nativeSrc": "9705:220:7",
													"nodeType": "YulBlock",
													"src": "9705:220:7",
													"statements": [
														{
															"nativeSrc": "9715:74:7",
															"nodeType": "YulAssignment",
															"src": "9715:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9781:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9781:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9786:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9786:2:7",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9722:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9722:58:7"
																},
																"nativeSrc": "9722:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9722:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9715:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9887:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9887:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb",
																	"nativeSrc": "9798:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9798:88:7"
																},
																"nativeSrc": "9798:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9798:93:7"
															},
															"nativeSrc": "9798:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9798:93:7"
														},
														{
															"nativeSrc": "9900:19:7",
															"nodeType": "YulAssignment",
															"src": "9900:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9911:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9911:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9916:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9916:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9907:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9907:3:7"
																},
																"nativeSrc": "9907:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9907:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9900:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9900:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9559:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9693:3:7",
														"nodeType": "YulTypedName",
														"src": "9693:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9701:3:7",
														"nodeType": "YulTypedName",
														"src": "9701:3:7",
														"type": ""
													}
												],
												"src": "9559:366:7"
											},
											{
												"body": {
													"nativeSrc": "10102:248:7",
													"nodeType": "YulBlock",
													"src": "10102:248:7",
													"statements": [
														{
															"nativeSrc": "10112:26:7",
															"nodeType": "YulAssignment",
															"src": "10112:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10124:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10124:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10135:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10135:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10120:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10120:3:7"
																},
																"nativeSrc": "10120:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10120:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10112:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10112:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10159:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10159:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10170:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10170:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10155:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10155:3:7"
																		},
																		"nativeSrc": "10155:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10155:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10178:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10178:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10184:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10184:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10174:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10174:3:7"
																		},
																		"nativeSrc": "10174:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10174:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10148:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10148:6:7"
																},
																"nativeSrc": "10148:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10148:47:7"
															},
															"nativeSrc": "10148:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10148:47:7"
														},
														{
															"nativeSrc": "10204:139:7",
															"nodeType": "YulAssignment",
															"src": "10204:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10338:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10338:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10212:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10212:124:7"
																},
																"nativeSrc": "10212:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10212:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10204:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10204:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9931:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10082:9:7",
														"nodeType": "YulTypedName",
														"src": "10082:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10097:4:7",
														"nodeType": "YulTypedName",
														"src": "10097:4:7",
														"type": ""
													}
												],
												"src": "9931:419:7"
											},
											{
												"body": {
													"nativeSrc": "10510:288:7",
													"nodeType": "YulBlock",
													"src": "10510:288:7",
													"statements": [
														{
															"nativeSrc": "10520:26:7",
															"nodeType": "YulAssignment",
															"src": "10520:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10532:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10532:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10543:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10543:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10528:3:7"
																},
																"nativeSrc": "10528:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10528:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10520:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10520:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10600:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10600:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10613:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10613:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10624:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10624:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10609:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10609:3:7"
																		},
																		"nativeSrc": "10609:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10609:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10556:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10556:43:7"
																},
																"nativeSrc": "10556:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10556:71:7"
															},
															"nativeSrc": "10556:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10556:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10681:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10681:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10694:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10694:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10705:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10705:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10690:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10690:3:7"
																		},
																		"nativeSrc": "10690:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10690:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10637:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10637:43:7"
																},
																"nativeSrc": "10637:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10637:72:7"
															},
															"nativeSrc": "10637:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10637:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10763:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10763:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10776:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10776:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10787:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10787:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10772:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10772:3:7"
																		},
																		"nativeSrc": "10772:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10772:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10719:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10719:43:7"
																},
																"nativeSrc": "10719:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10719:72:7"
															},
															"nativeSrc": "10719:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10719:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10356:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10466:9:7",
														"nodeType": "YulTypedName",
														"src": "10466:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10478:6:7",
														"nodeType": "YulTypedName",
														"src": "10478:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10486:6:7",
														"nodeType": "YulTypedName",
														"src": "10486:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10494:6:7",
														"nodeType": "YulTypedName",
														"src": "10494:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10505:4:7",
														"nodeType": "YulTypedName",
														"src": "10505:4:7",
														"type": ""
													}
												],
												"src": "10356:442:7"
											},
											{
												"body": {
													"nativeSrc": "10910:65:7",
													"nodeType": "YulBlock",
													"src": "10910:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10932:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10932:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10940:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10940:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10928:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10928:3:7"
																		},
																		"nativeSrc": "10928:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10928:14:7"
																	},
																	{
																		"hexValue": "426c61636b6c697374656420416464726573736573",
																		"kind": "string",
																		"nativeSrc": "10944:23:7",
																		"nodeType": "YulLiteral",
																		"src": "10944:23:7",
																		"type": "",
																		"value": "Blacklisted Addresses"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10921:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10921:6:7"
																},
																"nativeSrc": "10921:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10921:47:7"
															},
															"nativeSrc": "10921:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10921:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7",
												"nativeSrc": "10804:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10902:6:7",
														"nodeType": "YulTypedName",
														"src": "10902:6:7",
														"type": ""
													}
												],
												"src": "10804:171:7"
											},
											{
												"body": {
													"nativeSrc": "11127:220:7",
													"nodeType": "YulBlock",
													"src": "11127:220:7",
													"statements": [
														{
															"nativeSrc": "11137:74:7",
															"nodeType": "YulAssignment",
															"src": "11137:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11203:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11203:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11208:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11208:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11144:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11144:58:7"
																},
																"nativeSrc": "11144:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11144:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11137:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11137:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11309:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11309:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7",
																	"nativeSrc": "11220:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11220:88:7"
																},
																"nativeSrc": "11220:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11220:93:7"
															},
															"nativeSrc": "11220:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11220:93:7"
														},
														{
															"nativeSrc": "11322:19:7",
															"nodeType": "YulAssignment",
															"src": "11322:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11333:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11333:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11338:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11338:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11329:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11329:3:7"
																},
																"nativeSrc": "11329:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11329:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11322:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11322:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10981:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11115:3:7",
														"nodeType": "YulTypedName",
														"src": "11115:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11123:3:7",
														"nodeType": "YulTypedName",
														"src": "11123:3:7",
														"type": ""
													}
												],
												"src": "10981:366:7"
											},
											{
												"body": {
													"nativeSrc": "11524:248:7",
													"nodeType": "YulBlock",
													"src": "11524:248:7",
													"statements": [
														{
															"nativeSrc": "11534:26:7",
															"nodeType": "YulAssignment",
															"src": "11534:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11546:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11546:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11557:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11542:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11542:3:7"
																},
																"nativeSrc": "11542:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11542:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11534:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11534:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11581:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11581:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11592:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11592:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11577:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11577:3:7"
																		},
																		"nativeSrc": "11577:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11577:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11600:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11600:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11606:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11606:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11596:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11596:3:7"
																		},
																		"nativeSrc": "11596:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11596:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11570:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11570:6:7"
																},
																"nativeSrc": "11570:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11570:47:7"
															},
															"nativeSrc": "11570:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11570:47:7"
														},
														{
															"nativeSrc": "11626:139:7",
															"nodeType": "YulAssignment",
															"src": "11626:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11760:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11760:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11634:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11634:124:7"
																},
																"nativeSrc": "11634:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11634:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11626:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11626:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11353:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11504:9:7",
														"nodeType": "YulTypedName",
														"src": "11504:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11519:4:7",
														"nodeType": "YulTypedName",
														"src": "11519:4:7",
														"type": ""
													}
												],
												"src": "11353:419:7"
											},
											{
												"body": {
													"nativeSrc": "11884:115:7",
													"nodeType": "YulBlock",
													"src": "11884:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11906:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11906:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11914:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11914:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11902:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11902:3:7"
																		},
																		"nativeSrc": "11902:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11902:14:7"
																	},
																	{
																		"hexValue": "426f746820616464726573736573206d7573742062652077686974656c697374",
																		"kind": "string",
																		"nativeSrc": "11918:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11918:34:7",
																		"type": "",
																		"value": "Both addresses must be whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11895:6:7"
																},
																"nativeSrc": "11895:58:7",
																"nodeType": "YulFunctionCall",
																"src": "11895:58:7"
															},
															"nativeSrc": "11895:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "11895:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11974:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11974:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11982:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11982:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11970:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11970:3:7"
																		},
																		"nativeSrc": "11970:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11970:15:7"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "11987:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11987:4:7",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11963:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11963:6:7"
																},
																"nativeSrc": "11963:29:7",
																"nodeType": "YulFunctionCall",
																"src": "11963:29:7"
															},
															"nativeSrc": "11963:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "11963:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
												"nativeSrc": "11778:221:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11876:6:7",
														"nodeType": "YulTypedName",
														"src": "11876:6:7",
														"type": ""
													}
												],
												"src": "11778:221:7"
											},
											{
												"body": {
													"nativeSrc": "12151:220:7",
													"nodeType": "YulBlock",
													"src": "12151:220:7",
													"statements": [
														{
															"nativeSrc": "12161:74:7",
															"nodeType": "YulAssignment",
															"src": "12161:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12227:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12227:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12232:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12232:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12168:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12168:58:7"
																},
																"nativeSrc": "12168:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12168:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12161:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12161:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12333:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12333:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
																	"nativeSrc": "12244:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12244:88:7"
																},
																"nativeSrc": "12244:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12244:93:7"
															},
															"nativeSrc": "12244:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12244:93:7"
														},
														{
															"nativeSrc": "12346:19:7",
															"nodeType": "YulAssignment",
															"src": "12346:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12357:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12357:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12362:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12362:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12353:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12353:3:7"
																},
																"nativeSrc": "12353:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12353:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12346:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12346:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12005:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12139:3:7",
														"nodeType": "YulTypedName",
														"src": "12139:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12147:3:7",
														"nodeType": "YulTypedName",
														"src": "12147:3:7",
														"type": ""
													}
												],
												"src": "12005:366:7"
											},
											{
												"body": {
													"nativeSrc": "12548:248:7",
													"nodeType": "YulBlock",
													"src": "12548:248:7",
													"statements": [
														{
															"nativeSrc": "12558:26:7",
															"nodeType": "YulAssignment",
															"src": "12558:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12570:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12570:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12581:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12581:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12566:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12566:3:7"
																},
																"nativeSrc": "12566:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12566:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12558:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12558:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12605:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12605:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12616:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12616:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12601:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12601:3:7"
																		},
																		"nativeSrc": "12601:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12601:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12624:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12624:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12630:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12630:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12620:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12620:3:7"
																		},
																		"nativeSrc": "12620:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12620:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12594:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12594:6:7"
																},
																"nativeSrc": "12594:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12594:47:7"
															},
															"nativeSrc": "12594:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12594:47:7"
														},
														{
															"nativeSrc": "12650:139:7",
															"nodeType": "YulAssignment",
															"src": "12650:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12784:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12784:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12658:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12658:124:7"
																},
																"nativeSrc": "12658:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12658:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12650:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12650:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12377:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12528:9:7",
														"nodeType": "YulTypedName",
														"src": "12528:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12543:4:7",
														"nodeType": "YulTypedName",
														"src": "12543:4:7",
														"type": ""
													}
												],
												"src": "12377:419:7"
											},
											{
												"body": {
													"nativeSrc": "12908:73:7",
													"nodeType": "YulBlock",
													"src": "12908:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12930:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12930:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12938:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12938:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12926:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12926:3:7"
																		},
																		"nativeSrc": "12926:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12926:14:7"
																	},
																	{
																		"hexValue": "546f6b656e205472616e73666572204c696d6974204578636565646564",
																		"kind": "string",
																		"nativeSrc": "12942:31:7",
																		"nodeType": "YulLiteral",
																		"src": "12942:31:7",
																		"type": "",
																		"value": "Token Transfer Limit Exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12919:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12919:6:7"
																},
																"nativeSrc": "12919:55:7",
																"nodeType": "YulFunctionCall",
																"src": "12919:55:7"
															},
															"nativeSrc": "12919:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "12919:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693",
												"nativeSrc": "12802:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12900:6:7",
														"nodeType": "YulTypedName",
														"src": "12900:6:7",
														"type": ""
													}
												],
												"src": "12802:179:7"
											},
											{
												"body": {
													"nativeSrc": "13133:220:7",
													"nodeType": "YulBlock",
													"src": "13133:220:7",
													"statements": [
														{
															"nativeSrc": "13143:74:7",
															"nodeType": "YulAssignment",
															"src": "13143:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13209:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13209:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13214:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13150:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13150:58:7"
																},
																"nativeSrc": "13150:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13150:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13143:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13143:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13315:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13315:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693",
																	"nativeSrc": "13226:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13226:88:7"
																},
																"nativeSrc": "13226:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13226:93:7"
															},
															"nativeSrc": "13226:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13226:93:7"
														},
														{
															"nativeSrc": "13328:19:7",
															"nodeType": "YulAssignment",
															"src": "13328:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13339:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13339:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13344:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13344:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13335:3:7"
																},
																"nativeSrc": "13335:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13335:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13328:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13328:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12987:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13121:3:7",
														"nodeType": "YulTypedName",
														"src": "13121:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13129:3:7",
														"nodeType": "YulTypedName",
														"src": "13129:3:7",
														"type": ""
													}
												],
												"src": "12987:366:7"
											},
											{
												"body": {
													"nativeSrc": "13530:248:7",
													"nodeType": "YulBlock",
													"src": "13530:248:7",
													"statements": [
														{
															"nativeSrc": "13540:26:7",
															"nodeType": "YulAssignment",
															"src": "13540:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13552:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13552:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13563:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13563:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13548:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13548:3:7"
																},
																"nativeSrc": "13548:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13548:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13540:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13540:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13587:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13587:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13598:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13598:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13583:3:7"
																		},
																		"nativeSrc": "13583:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13583:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13606:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13612:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13612:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13602:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13602:3:7"
																		},
																		"nativeSrc": "13602:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13602:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13576:6:7"
																},
																"nativeSrc": "13576:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13576:47:7"
															},
															"nativeSrc": "13576:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13576:47:7"
														},
														{
															"nativeSrc": "13632:139:7",
															"nodeType": "YulAssignment",
															"src": "13632:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13766:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13766:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13640:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13640:124:7"
																},
																"nativeSrc": "13640:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13640:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13632:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13632:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13359:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13510:9:7",
														"nodeType": "YulTypedName",
														"src": "13510:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13525:4:7",
														"nodeType": "YulTypedName",
														"src": "13525:4:7",
														"type": ""
													}
												],
												"src": "13359:419:7"
											},
											{
												"body": {
													"nativeSrc": "13812:152:7",
													"nodeType": "YulBlock",
													"src": "13812:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13829:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13829:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13832:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13832:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13822:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13822:6:7"
																},
																"nativeSrc": "13822:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13822:88:7"
															},
															"nativeSrc": "13822:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13822:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13926:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13926:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13929:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13929:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13919:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13919:6:7"
																},
																"nativeSrc": "13919:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13919:15:7"
															},
															"nativeSrc": "13919:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13919:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13950:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13950:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13953:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13953:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13943:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13943:6:7"
																},
																"nativeSrc": "13943:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13943:15:7"
															},
															"nativeSrc": "13943:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13943:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13784:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13784:180:7"
											},
											{
												"body": {
													"nativeSrc": "14014:147:7",
													"nodeType": "YulBlock",
													"src": "14014:147:7",
													"statements": [
														{
															"nativeSrc": "14024:25:7",
															"nodeType": "YulAssignment",
															"src": "14024:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14047:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14047:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14029:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14029:17:7"
																},
																"nativeSrc": "14029:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14029:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14024:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14024:1:7"
																}
															]
														},
														{
															"nativeSrc": "14058:25:7",
															"nodeType": "YulAssignment",
															"src": "14058:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14081:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14081:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14063:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14063:17:7"
																},
																"nativeSrc": "14063:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14063:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14058:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14058:1:7"
																}
															]
														},
														{
															"nativeSrc": "14092:16:7",
															"nodeType": "YulAssignment",
															"src": "14092:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14103:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14103:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14106:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14106:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14099:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14099:3:7"
																},
																"nativeSrc": "14099:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14099:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14092:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14092:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14132:22:7",
																"nodeType": "YulBlock",
																"src": "14132:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14134:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14134:16:7"
																			},
																			"nativeSrc": "14134:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14134:18:7"
																		},
																		"nativeSrc": "14134:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14134:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14124:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14124:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14127:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14127:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14121:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14121:2:7"
																},
																"nativeSrc": "14121:10:7",
																"nodeType": "YulFunctionCall",
																"src": "14121:10:7"
															},
															"nativeSrc": "14118:36:7",
															"nodeType": "YulIf",
															"src": "14118:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13970:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14001:1:7",
														"nodeType": "YulTypedName",
														"src": "14001:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14004:1:7",
														"nodeType": "YulTypedName",
														"src": "14004:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14010:3:7",
														"nodeType": "YulTypedName",
														"src": "14010:3:7",
														"type": ""
													}
												],
												"src": "13970:191:7"
											},
											{
												"body": {
													"nativeSrc": "14273:70:7",
													"nodeType": "YulBlock",
													"src": "14273:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14295:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14295:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14303:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14303:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14291:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14291:3:7"
																		},
																		"nativeSrc": "14291:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14291:14:7"
																	},
																	{
																		"hexValue": "546f6b656e205472616e7366657220696e20636f6f6c646f776e",
																		"kind": "string",
																		"nativeSrc": "14307:28:7",
																		"nodeType": "YulLiteral",
																		"src": "14307:28:7",
																		"type": "",
																		"value": "Token Transfer in cooldown"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14284:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14284:6:7"
																},
																"nativeSrc": "14284:52:7",
																"nodeType": "YulFunctionCall",
																"src": "14284:52:7"
															},
															"nativeSrc": "14284:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "14284:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9",
												"nativeSrc": "14167:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14265:6:7",
														"nodeType": "YulTypedName",
														"src": "14265:6:7",
														"type": ""
													}
												],
												"src": "14167:176:7"
											},
											{
												"body": {
													"nativeSrc": "14495:220:7",
													"nodeType": "YulBlock",
													"src": "14495:220:7",
													"statements": [
														{
															"nativeSrc": "14505:74:7",
															"nodeType": "YulAssignment",
															"src": "14505:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14571:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14571:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14576:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14576:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14512:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14512:58:7"
																},
																"nativeSrc": "14512:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14512:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14505:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14505:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14677:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14677:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9",
																	"nativeSrc": "14588:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14588:88:7"
																},
																"nativeSrc": "14588:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14588:93:7"
															},
															"nativeSrc": "14588:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14588:93:7"
														},
														{
															"nativeSrc": "14690:19:7",
															"nodeType": "YulAssignment",
															"src": "14690:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14701:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14701:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14706:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14706:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14697:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14697:3:7"
																},
																"nativeSrc": "14697:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14697:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14690:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14690:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14349:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14483:3:7",
														"nodeType": "YulTypedName",
														"src": "14483:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14491:3:7",
														"nodeType": "YulTypedName",
														"src": "14491:3:7",
														"type": ""
													}
												],
												"src": "14349:366:7"
											},
											{
												"body": {
													"nativeSrc": "14892:248:7",
													"nodeType": "YulBlock",
													"src": "14892:248:7",
													"statements": [
														{
															"nativeSrc": "14902:26:7",
															"nodeType": "YulAssignment",
															"src": "14902:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14914:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14914:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14925:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14925:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14910:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14910:3:7"
																},
																"nativeSrc": "14910:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14910:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14902:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14902:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14949:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14949:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14960:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14960:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14945:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14945:3:7"
																		},
																		"nativeSrc": "14945:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14945:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14968:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14968:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14974:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14974:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14964:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14964:3:7"
																		},
																		"nativeSrc": "14964:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14964:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14938:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14938:6:7"
																},
																"nativeSrc": "14938:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14938:47:7"
															},
															"nativeSrc": "14938:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14938:47:7"
														},
														{
															"nativeSrc": "14994:139:7",
															"nodeType": "YulAssignment",
															"src": "14994:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15128:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15128:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15002:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15002:124:7"
																},
																"nativeSrc": "15002:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15002:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14994:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14994:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14721:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14872:9:7",
														"nodeType": "YulTypedName",
														"src": "14872:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14887:4:7",
														"nodeType": "YulTypedName",
														"src": "14887:4:7",
														"type": ""
													}
												],
												"src": "14721:419:7"
											},
											{
												"body": {
													"nativeSrc": "15194:362:7",
													"nodeType": "YulBlock",
													"src": "15194:362:7",
													"statements": [
														{
															"nativeSrc": "15204:25:7",
															"nodeType": "YulAssignment",
															"src": "15204:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15227:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15227:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15209:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15209:17:7"
																},
																"nativeSrc": "15209:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15209:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15204:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15204:1:7"
																}
															]
														},
														{
															"nativeSrc": "15238:25:7",
															"nodeType": "YulAssignment",
															"src": "15238:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15261:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15261:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15243:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15243:17:7"
																},
																"nativeSrc": "15243:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15243:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15238:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15238:1:7"
																}
															]
														},
														{
															"nativeSrc": "15272:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15272:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15295:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15295:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15298:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15298:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15291:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15291:3:7"
																},
																"nativeSrc": "15291:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15291:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15276:11:7",
																	"nodeType": "YulTypedName",
																	"src": "15276:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15309:41:7",
															"nodeType": "YulAssignment",
															"src": "15309:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "15338:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "15338:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15320:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15320:17:7"
																},
																"nativeSrc": "15320:30:7",
																"nodeType": "YulFunctionCall",
																"src": "15320:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15309:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "15309:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15527:22:7",
																"nodeType": "YulBlock",
																"src": "15527:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15529:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15529:16:7"
																			},
																			"nativeSrc": "15529:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15529:18:7"
																		},
																		"nativeSrc": "15529:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15529:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15460:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "15460:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15453:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "15453:6:7"
																				},
																				"nativeSrc": "15453:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15453:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15483:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "15483:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15490:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "15490:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15499:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "15499:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15486:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "15486:3:7"
																						},
																						"nativeSrc": "15486:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "15486:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15480:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "15480:2:7"
																				},
																				"nativeSrc": "15480:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15480:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15433:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "15433:2:7"
																		},
																		"nativeSrc": "15433:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15433:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15413:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15413:6:7"
																},
																"nativeSrc": "15413:113:7",
																"nodeType": "YulFunctionCall",
																"src": "15413:113:7"
															},
															"nativeSrc": "15410:139:7",
															"nodeType": "YulIf",
															"src": "15410:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15146:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15177:1:7",
														"nodeType": "YulTypedName",
														"src": "15177:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15180:1:7",
														"nodeType": "YulTypedName",
														"src": "15180:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15186:7:7",
														"nodeType": "YulTypedName",
														"src": "15186:7:7",
														"type": ""
													}
												],
												"src": "15146:410:7"
											},
											{
												"body": {
													"nativeSrc": "15590:152:7",
													"nodeType": "YulBlock",
													"src": "15590:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15607:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15607:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15610:77:7",
																		"nodeType": "YulLiteral",
																		"src": "15610:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15600:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15600:6:7"
																},
																"nativeSrc": "15600:88:7",
																"nodeType": "YulFunctionCall",
																"src": "15600:88:7"
															},
															"nativeSrc": "15600:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "15600:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15704:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15704:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15707:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15707:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15697:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15697:6:7"
																},
																"nativeSrc": "15697:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15697:15:7"
															},
															"nativeSrc": "15697:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15697:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15728:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15728:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15731:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15731:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15721:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15721:6:7"
																},
																"nativeSrc": "15721:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15721:15:7"
															},
															"nativeSrc": "15721:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15721:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15562:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "15562:180:7"
											},
											{
												"body": {
													"nativeSrc": "15790:143:7",
													"nodeType": "YulBlock",
													"src": "15790:143:7",
													"statements": [
														{
															"nativeSrc": "15800:25:7",
															"nodeType": "YulAssignment",
															"src": "15800:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15823:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15823:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15805:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15805:17:7"
																},
																"nativeSrc": "15805:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15805:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15800:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15800:1:7"
																}
															]
														},
														{
															"nativeSrc": "15834:25:7",
															"nodeType": "YulAssignment",
															"src": "15834:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15857:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15857:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15839:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15839:17:7"
																},
																"nativeSrc": "15839:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15839:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15834:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15834:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15881:22:7",
																"nodeType": "YulBlock",
																"src": "15881:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15883:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15883:16:7"
																			},
																			"nativeSrc": "15883:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15883:18:7"
																		},
																		"nativeSrc": "15883:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15883:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15878:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15878:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15871:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15871:6:7"
																},
																"nativeSrc": "15871:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15871:9:7"
															},
															"nativeSrc": "15868:35:7",
															"nodeType": "YulIf",
															"src": "15868:35:7"
														},
														{
															"nativeSrc": "15913:14:7",
															"nodeType": "YulAssignment",
															"src": "15913:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15922:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15922:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15925:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15925:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15918:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15918:3:7"
																},
																"nativeSrc": "15918:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15918:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15913:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15913:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "15748:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15779:1:7",
														"nodeType": "YulTypedName",
														"src": "15779:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15782:1:7",
														"nodeType": "YulTypedName",
														"src": "15782:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15788:1:7",
														"nodeType": "YulTypedName",
														"src": "15788:1:7",
														"type": ""
													}
												],
												"src": "15748:185:7"
											},
											{
												"body": {
													"nativeSrc": "15984:149:7",
													"nodeType": "YulBlock",
													"src": "15984:149:7",
													"statements": [
														{
															"nativeSrc": "15994:25:7",
															"nodeType": "YulAssignment",
															"src": "15994:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16017:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16017:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15999:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15999:17:7"
																},
																"nativeSrc": "15999:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15999:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15994:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15994:1:7"
																}
															]
														},
														{
															"nativeSrc": "16028:25:7",
															"nodeType": "YulAssignment",
															"src": "16028:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16051:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16051:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16033:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16033:17:7"
																},
																"nativeSrc": "16033:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16033:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16028:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16028:1:7"
																}
															]
														},
														{
															"nativeSrc": "16062:17:7",
															"nodeType": "YulAssignment",
															"src": "16062:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16074:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16074:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16077:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16077:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16070:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16070:3:7"
																},
																"nativeSrc": "16070:9:7",
																"nodeType": "YulFunctionCall",
																"src": "16070:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16062:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16062:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16104:22:7",
																"nodeType": "YulBlock",
																"src": "16104:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16106:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "16106:16:7"
																			},
																			"nativeSrc": "16106:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16106:18:7"
																		},
																		"nativeSrc": "16106:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16106:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16095:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16095:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16101:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16101:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16092:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16092:2:7"
																},
																"nativeSrc": "16092:11:7",
																"nodeType": "YulFunctionCall",
																"src": "16092:11:7"
															},
															"nativeSrc": "16089:37:7",
															"nodeType": "YulIf",
															"src": "16089:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15939:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15970:1:7",
														"nodeType": "YulTypedName",
														"src": "15970:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15973:1:7",
														"nodeType": "YulTypedName",
														"src": "15973:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15979:4:7",
														"nodeType": "YulTypedName",
														"src": "15979:4:7",
														"type": ""
													}
												],
												"src": "15939:194:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59(memPtr) {\n\n        mstore(add(memPtr, 0), \"Slippage fees must be less than \")\n\n        mstore(add(memPtr, 32), \"5%\")\n\n    }\n\n    function abi_encode_t_stringliteral_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tax fee must be less than 10%\")\n\n    }\n\n    function abi_encode_t_stringliteral_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Blacklisted address cannot be wh\")\n\n        mstore(add(memPtr, 32), \"itelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Blacklisted Addresses\")\n\n    }\n\n    function abi_encode_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72(memPtr) {\n\n        mstore(add(memPtr, 0), \"Both addresses must be whitelist\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token Transfer Limit Exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token Transfer in cooldown\")\n\n    }\n\n    function abi_encode_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610204575f3560e01c806370a0823111610118578063b319c6b7116100ab578063dd62ed3e1161007a578063dd62ed3e1461055b578063e43252d71461058b578063ec28438a146105a7578063f2fde38b146105c3578063fe575a87146105df57610204565b8063b319c6b7146104f7578063b7bda68f14610515578063cc7a736d14610533578063ced695a41461055157610204565b80638da5cb5b116100e75780638da5cb5b1461046a57806395d89b41146104885780639dfc9117146104a6578063a9059cbb146104c757610204565b806370a08231146103f6578063715018a6146104265780638ab1d681146104305780638c0b5e221461044c57610204565b80633af32abf1161019b578063537df3b61161016a578063537df3b61461038c57806353eb3bcf146103a8578063688188e8146103b25780636d8b0527146103bc5780636e16de11146103da57610204565b80633af32abf1461030857806344337ea11461033857806349192418146103545780634ebc552d1461037057610204565b80631c0aecfa116101d75780631c0aecfa1461029257806323b872dd146102b05780632958ad7f146102e0578063313ce567146102ea57610204565b806306fdde0314610208578063095ea7b3146102265780630ddc09761461025657806318160ddd14610274575b5f80fd5b61021061060f565b60405161021d91906118dd565b60405180910390f35b610240600480360381019061023b919061198e565b61069f565b60405161024d91906119e6565b60405180910390f35b61025e6106c1565b60405161026b9190611a0e565b60405180910390f35b61027c6106c7565b6040516102899190611a0e565b60405180910390f35b61029a6106d0565b6040516102a791906119e6565b60405180910390f35b6102ca60048036038101906102c59190611a27565b6106e5565b6040516102d791906119e6565b60405180910390f35b6102e8610713565b005b6102f2610737565b6040516102ff9190611a92565b60405180910390f35b610322600480360381019061031d9190611aab565b61073f565b60405161032f91906119e6565b60405180910390f35b610352600480360381019061034d9190611aab565b610791565b005b61036e60048036038101906103699190611ad6565b610845565b005b61038a60048036038101906103859190611ad6565b61089b565b005b6103a660048036038101906103a19190611aab565b6108f1565b005b6103b0610950565b005b6103ba610975565b005b6103c4610998565b6040516103d19190611a0e565b60405180910390f35b6103f460048036038101906103ef9190611ad6565b6109a1565b005b610410600480360381019061040b9190611aab565b6109b3565b60405161041d9190611a0e565b60405180910390f35b61042e6109f8565b005b61044a60048036038101906104459190611aab565b610a0a565b005b610454610a69565b6040516104619190611a0e565b60405180910390f35b610472610a6f565b60405161047f9190611b10565b60405180910390f35b610490610a97565b60405161049d91906118dd565b60405180910390f35b6104ae610b27565b6040516104be9493929190611b29565b60405180910390f35b6104e160048036038101906104dc919061198e565b610b4a565b6040516104ee91906119e6565b60405180910390f35b6104ff610b6c565b60405161050c9190611a0e565b60405180910390f35b61051d610b72565b60405161052a9190611b10565b60405180910390f35b61053b610b98565b6040516105489190611a0e565b60405180910390f35b610559610b9e565b005b61057560048036038101906105709190611b6c565b610bc2565b6040516105829190611a0e565b60405180910390f35b6105a560048036038101906105a09190611aab565b610c44565b005b6105c160048036038101906105bc9190611ad6565b610d2e565b005b6105dd60048036038101906105d89190611aab565b610d40565b005b6105f960048036038101906105f49190611aab565b610dc4565b60405161060691906119e6565b60405180910390f35b60606003805461061e90611bd7565b80601f016020809104026020016040519081016040528092919081815260200182805461064a90611bd7565b80156106955780601f1061066c57610100808354040283529160200191610695565b820191905f5260205f20905b81548152906001019060200180831161067857829003601f168201915b5050505050905090565b5f806106a9610e16565b90506106b6818585610e1d565b600191505092915050565b60095481565b5f600254905090565b5f600e5f9054906101000a900460ff16905090565b5f806106ef610e16565b90506106fc858285610e2f565b610707858585610ec1565b60019150509392505050565b61071b610fb1565b6001600e5f6101000a81548160ff021916908315150217905550565b5f6012905090565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b610799610fb1565b6001600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b61084d610fb1565b6005811115610891576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088890611c77565b60405180910390fd5b80600a8190555050565b6108a3610fb1565b600a8111156108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de90611cdf565b60405180910390fd5b8060098190555050565b6108f9610fb1565b5f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610958610fb1565b6001600e60016101000a81548160ff021916908315150217905550565b61097d610fb1565b5f600e5f6101000a81548160ff021916908315150217905550565b5f600754905090565b6109a9610fb1565b8060088190555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a00610fb1565b610a08611038565b565b610a12610fb1565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b60075481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610aa690611bd7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad290611bd7565b8015610b1d5780601f10610af457610100808354040283529160200191610b1d565b820191905f5260205f20905b815481529060010190602001808311610b0057829003601f168201915b5050505050905090565b5f805f80610b33610a6f565b600754600854600654935093509350935090919293565b5f80610b54610e16565b9050610b61818585610ec1565b600191505092915050565b60085481565b600e60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b610ba6610fb1565b5f600e60016101000a81548160ff021916908315150217905550565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610c4c610fb1565b600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd90611d6d565b60405180910390fd5b6001600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610d36610fb1565b8060078190555050565b610d48610fb1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610db8575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610daf9190611b10565b60405180910390fd5b610dc18161104b565b50565b5f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f33905090565b610e2a838383600161110e565b505050565b5f610e3a8484610bc2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ebb5781811015610eac578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ea393929190611d8b565b60405180910390fd5b610eba84848484035f61110e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f31575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f289190611b10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fa1575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f989190611b10565b60405180910390fd5b610fac8383836112dd565b505050565b610fb9610e16565b73ffffffffffffffffffffffffffffffffffffffff16610fd7610a6f565b73ffffffffffffffffffffffffffffffffffffffff161461103657610ffa610e16565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161102d9190611b10565b60405180910390fd5b565b611040610fb1565b6110495f61104b565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361117e575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111759190611b10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111ee575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111e59190611b10565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156112d7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112ce9190611a0e565b60405180910390a35b50505050565b600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615801561137b5750600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b6113ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b190611e0a565b60405180910390fd5b600e5f9054906101000a900460ff16156114aa57600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16801561146a5750600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b6114a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a090611e98565b60405180910390fd5b5b6007548111156114ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e690611f00565b60405180910390fd5b600854600d5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461153a9190611f4b565b42101561157c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157390611fc8565b60405180910390fd5b5f819050600e60019054906101000a900460ff1615611601575f600a546009546115a69190611f4b565b90505f606482856115b79190611fe6565b6115c19190612054565b905080846115cf9190612084565b92506115fe86600e60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611654565b50505b42600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061164e848483611654565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116a4578060025f8282546116989190611f4b565b92505081905550611772565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561172d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161172493929190611d8b565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117b9578060025f8282540392505081905550611803565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118609190611a0e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6118af8261186d565b6118b98185611877565b93506118c9818560208601611887565b6118d281611895565b840191505092915050565b5f6020820190508181035f8301526118f581846118a5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61192a82611901565b9050919050565b61193a81611920565b8114611944575f80fd5b50565b5f8135905061195581611931565b92915050565b5f819050919050565b61196d8161195b565b8114611977575f80fd5b50565b5f8135905061198881611964565b92915050565b5f80604083850312156119a4576119a36118fd565b5b5f6119b185828601611947565b92505060206119c28582860161197a565b9150509250929050565b5f8115159050919050565b6119e0816119cc565b82525050565b5f6020820190506119f95f8301846119d7565b92915050565b611a088161195b565b82525050565b5f602082019050611a215f8301846119ff565b92915050565b5f805f60608486031215611a3e57611a3d6118fd565b5b5f611a4b86828701611947565b9350506020611a5c86828701611947565b9250506040611a6d8682870161197a565b9150509250925092565b5f60ff82169050919050565b611a8c81611a77565b82525050565b5f602082019050611aa55f830184611a83565b92915050565b5f60208284031215611ac057611abf6118fd565b5b5f611acd84828501611947565b91505092915050565b5f60208284031215611aeb57611aea6118fd565b5b5f611af88482850161197a565b91505092915050565b611b0a81611920565b82525050565b5f602082019050611b235f830184611b01565b92915050565b5f608082019050611b3c5f830187611b01565b611b4960208301866119ff565b611b5660408301856119ff565b611b6360608301846119ff565b95945050505050565b5f8060408385031215611b8257611b816118fd565b5b5f611b8f85828601611947565b9250506020611ba085828601611947565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611bee57607f821691505b602082108103611c0157611c00611baa565b5b50919050565b7f536c6970706167652066656573206d757374206265206c657373207468616e205f8201527f3525000000000000000000000000000000000000000000000000000000000000602082015250565b5f611c61602283611877565b9150611c6c82611c07565b604082019050919050565b5f6020820190508181035f830152611c8e81611c55565b9050919050565b7f54617820666565206d757374206265206c657373207468616e203130250000005f82015250565b5f611cc9601d83611877565b9150611cd482611c95565b602082019050919050565b5f6020820190508181035f830152611cf681611cbd565b9050919050565b7f426c61636b6c697374656420616464726573732063616e6e6f742062652077685f8201527f6974656c69737465640000000000000000000000000000000000000000000000602082015250565b5f611d57602983611877565b9150611d6282611cfd565b604082019050919050565b5f6020820190508181035f830152611d8481611d4b565b9050919050565b5f606082019050611d9e5f830186611b01565b611dab60208301856119ff565b611db860408301846119ff565b949350505050565b7f426c61636b6c69737465642041646472657373657300000000000000000000005f82015250565b5f611df4601583611877565b9150611dff82611dc0565b602082019050919050565b5f6020820190508181035f830152611e2181611de8565b9050919050565b7f426f746820616464726573736573206d7573742062652077686974656c6973745f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f611e82602283611877565b9150611e8d82611e28565b604082019050919050565b5f6020820190508181035f830152611eaf81611e76565b9050919050565b7f546f6b656e205472616e73666572204c696d69742045786365656465640000005f82015250565b5f611eea601d83611877565b9150611ef582611eb6565b602082019050919050565b5f6020820190508181035f830152611f1781611ede565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f558261195b565b9150611f608361195b565b9250828201905080821115611f7857611f77611f1e565b5b92915050565b7f546f6b656e205472616e7366657220696e20636f6f6c646f776e0000000000005f82015250565b5f611fb2601a83611877565b9150611fbd82611f7e565b602082019050919050565b5f6020820190508181035f830152611fdf81611fa6565b9050919050565b5f611ff08261195b565b9150611ffb8361195b565b92508282026120098161195b565b915082820484148315176120205761201f611f1e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61205e8261195b565b91506120698361195b565b92508261207957612078612027565b5b828204905092915050565b5f61208e8261195b565b91506120998361195b565b92508282039050818111156120b1576120b0611f1e565b5b9291505056fea2646970667358221220c8eef9ad00a7b632390a46735f590f1c972c5b793843d324fb126788631b197364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xB319C6B7 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x5DF JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xB319C6B7 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xB7BDA68F EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xCC7A736D EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xCED695A4 EQ PUSH2 0x551 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x9DFC9117 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C7 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x44C JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x3AF32ABF GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x537DF3B6 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x53EB3BCF EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x688188E8 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x6D8B0527 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x6E16DE11 EQ PUSH2 0x3DA JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x49192418 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x4EBC552D EQ PUSH2 0x370 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1C0AECFA GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x1C0AECFA EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x2958AD7F EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2EA JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xDDC0976 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x274 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x210 PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x713 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F2 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x73F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH2 0x950 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BA PUSH2 0x975 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C4 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH2 0x9F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0xA0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x454 PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AE PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FF PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51D PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53B PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x559 PUSH2 0xB9E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0xD2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x606 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x61E SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64A SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x695 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x695 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x678 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6A9 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP PUSH2 0x6B6 DUP2 DUP6 DUP6 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6EF PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP PUSH2 0x6FC DUP6 DUP3 DUP6 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x707 DUP6 DUP6 DUP6 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x71B PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x799 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x84D PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x891 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x888 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DE SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8F9 PUSH2 0xFB1 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x958 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x97D PUSH2 0xFB1 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0xFB1 JUMP JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA00 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0xA08 PUSH2 0x1038 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA12 PUSH2 0xFB1 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAA6 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB1D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAF4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB1D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB00 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xB33 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB54 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP PUSH2 0xB61 DUP2 DUP6 DUP6 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBA6 PUSH2 0xFB1 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4C PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD36 PUSH2 0xFB1 JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD48 PUSH2 0xFB1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAF SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC1 DUP2 PUSH2 0x104B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE2A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x110E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE3A DUP5 DUP5 PUSH2 0xBC2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xEBB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEAC JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEBA DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x110E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF31 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF98 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFAC DUP4 DUP4 DUP4 PUSH2 0x12DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFB9 PUSH2 0xE16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFD7 PUSH2 0xA6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1036 JUMPI PUSH2 0xFFA PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102D SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1040 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x1049 PUSH0 PUSH2 0x104B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1175 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E5 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x12D7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12CE SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x137B JUMPI POP PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x13BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B1 SWAP1 PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14AA JUMPI PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x146A JUMPI POP PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x14A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A0 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E6 SWAP1 PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x153A SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x157C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1573 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0xE PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1601 JUMPI PUSH0 PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x15A6 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 DUP3 DUP6 PUSH2 0x15B7 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x2054 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST SWAP3 POP PUSH2 0x15FE DUP7 PUSH1 0xE PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1654 JUMP JUMPDEST POP POP JUMPDEST TIMESTAMP PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x164E DUP5 DUP5 DUP4 PUSH2 0x1654 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16A4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1698 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1772 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x172D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1724 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17B9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1803 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1860 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18AF DUP3 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x18B9 DUP2 DUP6 PUSH2 0x1877 JUMP JUMPDEST SWAP4 POP PUSH2 0x18C9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x18D2 DUP2 PUSH2 0x1895 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F5 DUP2 DUP5 PUSH2 0x18A5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x192A DUP3 PUSH2 0x1901 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193A DUP2 PUSH2 0x1920 JUMP JUMPDEST DUP2 EQ PUSH2 0x1944 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1955 DUP2 PUSH2 0x1931 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x196D DUP2 PUSH2 0x195B JUMP JUMPDEST DUP2 EQ PUSH2 0x1977 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1988 DUP2 PUSH2 0x1964 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x18FD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19C2 DUP6 DUP3 DUP7 ADD PUSH2 0x197A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E0 DUP2 PUSH2 0x19CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A08 DUP2 PUSH2 0x195B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A21 PUSH0 DUP4 ADD DUP5 PUSH2 0x19FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A3E JUMPI PUSH2 0x1A3D PUSH2 0x18FD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A4B DUP7 DUP3 DUP8 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A5C DUP7 DUP3 DUP8 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A6D DUP7 DUP3 DUP8 ADD PUSH2 0x197A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8C DUP2 PUSH2 0x1A77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC0 JUMPI PUSH2 0x1ABF PUSH2 0x18FD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACD DUP5 DUP3 DUP6 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEB JUMPI PUSH2 0x1AEA PUSH2 0x18FD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AF8 DUP5 DUP3 DUP6 ADD PUSH2 0x197A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B0A DUP2 PUSH2 0x1920 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B23 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B3C PUSH0 DUP4 ADD DUP8 PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x1B49 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x19FF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B82 JUMPI PUSH2 0x1B81 PUSH2 0x18FD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8F DUP6 DUP3 DUP7 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BA0 DUP6 DUP3 DUP7 ADD PUSH2 0x1947 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BEE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C01 JUMPI PUSH2 0x1C00 PUSH2 0x1BAA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536C6970706167652066656573206D757374206265206C657373207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x3525000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C61 PUSH1 0x22 DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6C DUP3 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C8E DUP2 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54617820666565206D757374206265206C657373207468616E20313025000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC9 PUSH1 0x1D DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD4 DUP3 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CF6 DUP2 PUSH2 0x1CBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426C61636B6C697374656420616464726573732063616E6E6F74206265207768 PUSH0 DUP3 ADD MSTORE PUSH32 0x6974656C69737465640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D57 PUSH1 0x29 DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D62 DUP3 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D84 DUP2 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D9E PUSH0 DUP4 ADD DUP7 PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x1DAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x1DB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x426C61636B6C6973746564204164647265737365730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF4 PUSH1 0x15 DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFF DUP3 PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E21 DUP2 PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F746820616464726573736573206D7573742062652077686974656C697374 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E82 PUSH1 0x22 DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E8D DUP3 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EAF DUP2 PUSH2 0x1E76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E73666572204C696D6974204578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEA PUSH1 0x1D DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF5 DUP3 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F17 DUP2 PUSH2 0x1EDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F55 DUP3 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F60 DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F78 JUMPI PUSH2 0x1F77 PUSH2 0x1F1E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E7366657220696E20636F6F6C646F776E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB2 PUSH1 0x1A DUP4 PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBD DUP3 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FDF DUP2 PUSH2 0x1FA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF0 DUP3 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFB DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2009 DUP2 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2020 JUMPI PUSH2 0x201F PUSH2 0x1F1E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x205E DUP3 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x2069 DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2079 JUMPI PUSH2 0x2078 PUSH2 0x2027 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x208E DUP3 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x2099 DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x20B1 JUMPI PUSH2 0x20B0 PUSH2 0x1F1E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xEE 0xF9 0xAD STOP 0xA7 0xB6 ORIGIN CODECOPY EXP CHAINID PUSH20 0x5F590F1C972C5B793843D324FB126788631B1973 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "224:4286:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;452:26:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2295:112:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1626:100:6;;;:::i;:::-;;3002:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2167:120:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1222:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3136:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2960:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1376:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3346:82;;;:::i;:::-;;1734:102;;;:::i;:::-;;2543:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2650:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1115:99:6;;;:::i;:::-;;2045:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;356:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2781:171:6;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;406:39:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;770:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;485:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3436:84;;;:::i;:::-;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1844:195:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2415:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1498:120:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;452:26:6:-;;;;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;2295:112:6:-;2350:4;2379:20;;;;;;;;;;;2372:27;;2295:112;:::o;5039:244:2:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;1626:100:6:-;1531:13:0;:11;:13::i;:::-;1714:4:6::1;1691:20;;:27;;;;;;;;;;;;;;;;;;1626:100::o:0;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;2167:120:6:-;2229:4;2260:10;:19;2271:7;2260:19;;;;;;;;;;;;;;;;;;;;;;;;;2253:26;;2167:120;;;:::o;1222:148::-;1531:13:0;:11;:13::i;:::-;1320:4:6::1;1298:10;:19;1309:7;1298:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1357:5;1335:10;:19;1346:7;1335:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1222:148:::0;:::o;3136:202::-;1531:13:0;:11;:13::i;:::-;3248:1:6::1;3229:15;:20;;3221:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3315:15;3300:12;:30;;;;3136:202:::0;:::o;2960:168::-;1531:13:0;:11;:13::i;:::-;3053:2:6::1;3040:9;:15;;3032:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3111:9;3101:7;:19;;;;2960:168:::0;:::o;1376:116::-;1531:13:0;:11;:13::i;:::-;1479:5:6::1;1457:10;:19;1468:7;1457:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1376:116:::0;:::o;3346:82::-;1531:13:0;:11;:13::i;:::-;3416:4:6::1;3402:11;;:18;;;;;;;;;;;;;;;;;;3346:82::o:0;1734:102::-;1531:13:0;:11;:13::i;:::-;1823:5:6::1;1800:20;;:28;;;;;;;;;;;;;;;;;;1734:102::o:0;2543:99::-;2591:7;2623:11;;2616:18;;2543:99;:::o;2650:123::-;1531:13:0;:11;:13::i;:::-;2750:15:6::1;2735:12;:30;;;;2650:123:::0;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;1115:99:6:-;1531:13:0;:11;:13::i;:::-;1181:25:6::1;:23;:25::i;:::-;1115:99::o:0;2045:116::-;1531:13:0;:11;:13::i;:::-;2148:5:6::1;2126:10;:19;2137:7;2126:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2045:116:::0;:::o;356:43::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2781:171:6:-;2834:7;2843;2852;2860;2893;:5;:7::i;:::-;2902:11;;2915:12;;2929:14;;2885:59;;;;;;;;2781:171;;;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;406:39:6:-;;;;:::o;770:25::-;;;;;;;;;;;;;:::o;485:31::-;;;;:::o;3436:84::-;1531:13:0;:11;:13::i;:::-;3507:5:6::1;3493:11;;:19;;;;;;;;;;;;;;;;;;3436:84::o:0;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;1844:195:6:-;1531:13:0;:11;:13::i;:::-;1929:10:6::1;:19;1940:7;1929:19;;;;;;;;;;;;;;;;;;;;;;;;;1928:20;1920:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2027:4;2005:10;:19;2016:7;2005:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1844:195:::0;:::o;2415:120::-;1531:13:0;:11;:13::i;:::-;2512:14:6::1;2498:11;:28;;;;2415:120:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1498:120:6:-;1560:4;1591:10;:19;1602:7;1591:19;;;;;;;;;;;;;;;;;;;;;;;;;1584:26;;1498:120;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2293:101::-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;3528:977:6:-;3630:10;:16;3641:4;3630:16;;;;;;;;;;;;;;;;;;;;;;;;;3629:17;:36;;;;;3651:10;:14;3662:2;3651:14;;;;;;;;;;;;;;;;;;;;;;;;;3650:15;3629:36;3621:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3706:20;;;;;;;;;;;3703:143;;;3760:10;:16;3771:4;3760:16;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;;;3780:10;:14;3791:2;3780:14;;;;;;;;;;;;;;;;;;;;;;;;;3760:34;3752:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3703:143;3873:11;;3864:5;:20;;3856:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3975:12;;3957:11;:17;3969:4;3957:17;;;;;;;;;;;;;;;;:30;;;;:::i;:::-;3938:15;:49;;3930:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;4040:22;4065:5;4040:30;;4084:11;;;;;;;;;;;4081:273;;;4121:17;4151:12;;4141:7;;:22;;;;:::i;:::-;4121:42;;4192:17;4232:3;4221:9;4213:5;:17;;;;:::i;:::-;4212:23;;;;:::i;:::-;4192:43;;4275:9;4267:5;:17;;;;:::i;:::-;4250:34;;4299:43;4313:4;4319:10;;;;;;;;;;;4332:9;4299:13;:43::i;:::-;4106:248;;4081:273;4394:15;4374:11;:17;4386:4;4374:17;;;;;;;;;;;;;;;:35;;;;4420:39;4434:4;4440:2;4444:14;4420:13;:39::i;:::-;3610:895;3528:977;;;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:553::-;5945:4;5983:3;5972:9;5968:19;5960:27;;5997:71;6065:1;6054:9;6050:17;6041:6;5997:71;:::i;:::-;6078:72;6146:2;6135:9;6131:18;6122:6;6078:72;:::i;:::-;6160;6228:2;6217:9;6213:18;6204:6;6160:72;:::i;:::-;6242;6310:2;6299:9;6295:18;6286:6;6242:72;:::i;:::-;5768:553;;;;;;;:::o;6327:474::-;6395:6;6403;6452:2;6440:9;6431:7;6427:23;6423:32;6420:119;;;6458:79;;:::i;:::-;6420:119;6578:1;6603:53;6648:7;6639:6;6628:9;6624:22;6603:53;:::i;:::-;6593:63;;6549:117;6705:2;6731:53;6776:7;6767:6;6756:9;6752:22;6731:53;:::i;:::-;6721:63;;6676:118;6327:474;;;;;:::o;6807:180::-;6855:77;6852:1;6845:88;6952:4;6949:1;6942:15;6976:4;6973:1;6966:15;6993:320;7037:6;7074:1;7068:4;7064:12;7054:22;;7121:1;7115:4;7111:12;7142:18;7132:81;;7198:4;7190:6;7186:17;7176:27;;7132:81;7260:2;7252:6;7249:14;7229:18;7226:38;7223:84;;7279:18;;:::i;:::-;7223:84;7044:269;6993:320;;;:::o;7319:221::-;7459:34;7455:1;7447:6;7443:14;7436:58;7528:4;7523:2;7515:6;7511:15;7504:29;7319:221;:::o;7546:366::-;7688:3;7709:67;7773:2;7768:3;7709:67;:::i;:::-;7702:74;;7785:93;7874:3;7785:93;:::i;:::-;7903:2;7898:3;7894:12;7887:19;;7546:366;;;:::o;7918:419::-;8084:4;8122:2;8111:9;8107:18;8099:26;;8171:9;8165:4;8161:20;8157:1;8146:9;8142:17;8135:47;8199:131;8325:4;8199:131;:::i;:::-;8191:139;;7918:419;;;:::o;8343:179::-;8483:31;8479:1;8471:6;8467:14;8460:55;8343:179;:::o;8528:366::-;8670:3;8691:67;8755:2;8750:3;8691:67;:::i;:::-;8684:74;;8767:93;8856:3;8767:93;:::i;:::-;8885:2;8880:3;8876:12;8869:19;;8528:366;;;:::o;8900:419::-;9066:4;9104:2;9093:9;9089:18;9081:26;;9153:9;9147:4;9143:20;9139:1;9128:9;9124:17;9117:47;9181:131;9307:4;9181:131;:::i;:::-;9173:139;;8900:419;;;:::o;9325:228::-;9465:34;9461:1;9453:6;9449:14;9442:58;9534:11;9529:2;9521:6;9517:15;9510:36;9325:228;:::o;9559:366::-;9701:3;9722:67;9786:2;9781:3;9722:67;:::i;:::-;9715:74;;9798:93;9887:3;9798:93;:::i;:::-;9916:2;9911:3;9907:12;9900:19;;9559:366;;;:::o;9931:419::-;10097:4;10135:2;10124:9;10120:18;10112:26;;10184:9;10178:4;10174:20;10170:1;10159:9;10155:17;10148:47;10212:131;10338:4;10212:131;:::i;:::-;10204:139;;9931:419;;;:::o;10356:442::-;10505:4;10543:2;10532:9;10528:18;10520:26;;10556:71;10624:1;10613:9;10609:17;10600:6;10556:71;:::i;:::-;10637:72;10705:2;10694:9;10690:18;10681:6;10637:72;:::i;:::-;10719;10787:2;10776:9;10772:18;10763:6;10719:72;:::i;:::-;10356:442;;;;;;:::o;10804:171::-;10944:23;10940:1;10932:6;10928:14;10921:47;10804:171;:::o;10981:366::-;11123:3;11144:67;11208:2;11203:3;11144:67;:::i;:::-;11137:74;;11220:93;11309:3;11220:93;:::i;:::-;11338:2;11333:3;11329:12;11322:19;;10981:366;;;:::o;11353:419::-;11519:4;11557:2;11546:9;11542:18;11534:26;;11606:9;11600:4;11596:20;11592:1;11581:9;11577:17;11570:47;11634:131;11760:4;11634:131;:::i;:::-;11626:139;;11353:419;;;:::o;11778:221::-;11918:34;11914:1;11906:6;11902:14;11895:58;11987:4;11982:2;11974:6;11970:15;11963:29;11778:221;:::o;12005:366::-;12147:3;12168:67;12232:2;12227:3;12168:67;:::i;:::-;12161:74;;12244:93;12333:3;12244:93;:::i;:::-;12362:2;12357:3;12353:12;12346:19;;12005:366;;;:::o;12377:419::-;12543:4;12581:2;12570:9;12566:18;12558:26;;12630:9;12624:4;12620:20;12616:1;12605:9;12601:17;12594:47;12658:131;12784:4;12658:131;:::i;:::-;12650:139;;12377:419;;;:::o;12802:179::-;12942:31;12938:1;12930:6;12926:14;12919:55;12802:179;:::o;12987:366::-;13129:3;13150:67;13214:2;13209:3;13150:67;:::i;:::-;13143:74;;13226:93;13315:3;13226:93;:::i;:::-;13344:2;13339:3;13335:12;13328:19;;12987:366;;;:::o;13359:419::-;13525:4;13563:2;13552:9;13548:18;13540:26;;13612:9;13606:4;13602:20;13598:1;13587:9;13583:17;13576:47;13640:131;13766:4;13640:131;:::i;:::-;13632:139;;13359:419;;;:::o;13784:180::-;13832:77;13829:1;13822:88;13929:4;13926:1;13919:15;13953:4;13950:1;13943:15;13970:191;14010:3;14029:20;14047:1;14029:20;:::i;:::-;14024:25;;14063:20;14081:1;14063:20;:::i;:::-;14058:25;;14106:1;14103;14099:9;14092:16;;14127:3;14124:1;14121:10;14118:36;;;14134:18;;:::i;:::-;14118:36;13970:191;;;;:::o;14167:176::-;14307:28;14303:1;14295:6;14291:14;14284:52;14167:176;:::o;14349:366::-;14491:3;14512:67;14576:2;14571:3;14512:67;:::i;:::-;14505:74;;14588:93;14677:3;14588:93;:::i;:::-;14706:2;14701:3;14697:12;14690:19;;14349:366;;;:::o;14721:419::-;14887:4;14925:2;14914:9;14910:18;14902:26;;14974:9;14968:4;14964:20;14960:1;14949:9;14945:17;14938:47;15002:131;15128:4;15002:131;:::i;:::-;14994:139;;14721:419;;;:::o;15146:410::-;15186:7;15209:20;15227:1;15209:20;:::i;:::-;15204:25;;15243:20;15261:1;15243:20;:::i;:::-;15238:25;;15298:1;15295;15291:9;15320:30;15338:11;15320:30;:::i;:::-;15309:41;;15499:1;15490:7;15486:15;15483:1;15480:22;15460:1;15453:9;15433:83;15410:139;;15529:18;;:::i;:::-;15410:139;15194:362;15146:410;;;;:::o;15562:180::-;15610:77;15607:1;15600:88;15707:4;15704:1;15697:15;15731:4;15728:1;15721:15;15748:185;15788:1;15805:20;15823:1;15805:20;:::i;:::-;15800:25;;15839:20;15857:1;15839:20;:::i;:::-;15834:25;;15878:1;15868:35;;15883:18;;:::i;:::-;15868:35;15925:1;15922;15918:9;15913:14;;15748:185;;;;:::o;15939:194::-;15979:4;15999:20;16017:1;15999:20;:::i;:::-;15994:25;;16033:20;16051:1;16033:20;:::i;:::-;16028:25;;16077:1;16074;16070:9;16062:17;;16101:1;16095:4;16092:11;16089:37;;;16106:18;;:::i;:::-;16089:37;15939:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1685800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"SlippageFees()": "2514",
								"addToBlacklist(address)": "infinite",
								"addToWhitelist(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2875",
								"cooldownTime()": "2470",
								"decimals()": "450",
								"disableTax()": "infinite",
								"disableWhiteListing()": "infinite",
								"enableTax()": "infinite",
								"enableWhiteListing()": "infinite",
								"getContractDetails()": "infinite",
								"getMaxTxAmount()": "2543",
								"isBlacklisted(address)": "3002",
								"isWhiteListingEnabled()": "2519",
								"isWhitelisted(address)": "2916",
								"maxTxAmount()": "2537",
								"name()": "infinite",
								"owner()": "2560",
								"removeFromBlacklist(address)": "infinite",
								"removeFromWhitelist(address)": "infinite",
								"renounceOwnership()": "infinite",
								"setCoolDownTime(uint256)": "infinite",
								"setMaxTxAmount(uint256)": "infinite",
								"setSlippageFees(uint256)": "infinite",
								"setTaxes(uint256)": "infinite",
								"symbol()": "infinite",
								"taxAddress()": "2626",
								"taxFees()": "2516",
								"totalSupply()": "2545",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 4510,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 317,
									"end": 327,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 317,
									"end": 325,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 317,
									"end": 325,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 317,
									"end": 325,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 317,
									"end": 327,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 317,
									"end": 327,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 317,
									"end": 327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 317,
									"end": 327,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 317,
									"end": 327,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 313,
									"end": 315,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 313,
									"end": 327,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 313,
									"end": 327,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 313,
									"end": 327,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 313,
									"end": 327,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 313,
									"end": 327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 313,
									"end": 327,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 313,
									"end": 327,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 301,
									"end": 310,
									"name": "PUSH",
									"source": 6,
									"value": "5F5E100"
								},
								{
									"begin": 301,
									"end": 327,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 301,
									"end": 327,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 301,
									"end": 327,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 301,
									"end": 327,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 301,
									"end": 327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 301,
									"end": 327,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 301,
									"end": 327,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 268,
									"end": 327,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 268,
									"end": 327,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 385,
									"end": 399,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 385,
									"end": 399,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 356,
									"end": 399,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 356,
									"end": 399,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 436,
									"end": 445,
									"name": "PUSH",
									"source": 6,
									"value": "3C"
								},
								{
									"begin": 406,
									"end": 445,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 406,
									"end": 445,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 477,
									"end": 478,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 452,
									"end": 478,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 452,
									"end": 478,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 515,
									"end": 516,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 485,
									"end": 516,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 485,
									"end": 516,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 717,
									"end": 722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 681,
									"end": 722,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 681,
									"end": 722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 681,
									"end": 722,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 681,
									"end": 722,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 681,
									"end": 722,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 681,
									"end": 722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 756,
									"end": 761,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 729,
									"end": 761,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 729,
									"end": 761,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 729,
									"end": 761,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 729,
									"end": 761,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 729,
									"end": 761,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 729,
									"end": 761,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 805,
									"end": 1107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 913,
									"end": 925,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "43686169546F6B656E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4368616900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 943,
									"end": 978,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 949,
									"end": 961,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 963,
									"end": 977,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 963,
									"end": 977,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 943,
									"end": 948,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 943,
									"end": 948,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 943,
									"end": 948,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 943,
									"end": 978,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 943,
									"end": 978,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 943,
									"end": 978,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 943,
									"end": 978,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 943,
									"end": 978,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1060,
									"end": 1064,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1033,
									"end": 1043,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 1056,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1057,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1064,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1088,
									"end": 1099,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 1075,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1099,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 805,
									"end": 1107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3528,
									"end": 4505,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3528,
									"end": 4505,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3640,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3641,
									"end": 3645,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3630,
									"end": 3646,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3629,
									"end": 3646,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3629,
									"end": 3665,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3629,
									"end": 3665,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3629,
									"end": 3665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 3629,
									"end": 3665,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3629,
									"end": 3665,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3661,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3662,
									"end": 3664,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3651,
									"end": 3665,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3650,
									"end": 3665,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3629,
									"end": 3665,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 3629,
									"end": 3665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3621,
									"end": 3692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3621,
									"end": 3692,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3706,
									"end": 3726,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 3706,
									"end": 3726,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3706,
									"end": 3726,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3706,
									"end": 3726,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3706,
									"end": 3726,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3706,
									"end": 3726,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3706,
									"end": 3726,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3706,
									"end": 3726,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3706,
									"end": 3726,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3706,
									"end": 3726,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3706,
									"end": 3726,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3703,
									"end": 3846,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3703,
									"end": 3846,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3703,
									"end": 3846,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3770,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3771,
									"end": 3775,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3794,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3794,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3760,
									"end": 3794,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3790,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3791,
									"end": 3793,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3760,
									"end": 3794,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3760,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 3752,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3752,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3703,
									"end": 3846,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3703,
									"end": 3846,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3873,
									"end": 3884,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 3873,
									"end": 3884,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 3869,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 3884,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 3884,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 3856,
									"end": 3919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3856,
									"end": 3919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3975,
									"end": 3987,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3975,
									"end": 3987,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3968,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3969,
									"end": 3973,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3974,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 3957,
									"end": 3987,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3987,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3957,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3987,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 3957,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3938,
									"end": 3953,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 3938,
									"end": 3987,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3938,
									"end": 3987,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3930,
									"end": 4019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3930,
									"end": 4019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4040,
									"end": 4062,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4065,
									"end": 4070,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4040,
									"end": 4070,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4040,
									"end": 4070,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4084,
									"end": 4095,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 4084,
									"end": 4095,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4084,
									"end": 4095,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4084,
									"end": 4095,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4084,
									"end": 4095,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4084,
									"end": 4095,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4084,
									"end": 4095,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 4084,
									"end": 4095,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4084,
									"end": 4095,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4084,
									"end": 4095,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 4084,
									"end": 4095,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4081,
									"end": 4354,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4081,
									"end": 4354,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 4081,
									"end": 4354,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4121,
									"end": 4138,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4151,
									"end": 4163,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 4151,
									"end": 4163,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4141,
									"end": 4148,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 4141,
									"end": 4148,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4141,
									"end": 4163,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 4141,
									"end": 4163,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4141,
									"end": 4163,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4141,
									"end": 4163,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 4141,
									"end": 4163,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4141,
									"end": 4163,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 4141,
									"end": 4163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4121,
									"end": 4163,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4121,
									"end": 4163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4192,
									"end": 4209,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4232,
									"end": 4235,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4221,
									"end": 4230,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4213,
									"end": 4218,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4213,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 4213,
									"end": 4230,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4213,
									"end": 4230,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4213,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 4213,
									"end": 4230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4213,
									"end": 4230,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 4213,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 4212,
									"end": 4235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4192,
									"end": 4235,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4192,
									"end": 4235,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4275,
									"end": 4284,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4267,
									"end": 4272,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4267,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 4267,
									"end": 4284,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4267,
									"end": 4284,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4267,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 4267,
									"end": 4284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4267,
									"end": 4284,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 4267,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4250,
									"end": 4284,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4250,
									"end": 4284,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4299,
									"end": 4342,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 4313,
									"end": 4317,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4332,
									"end": 4341,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4299,
									"end": 4312,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4299,
									"end": 4312,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4299,
									"end": 4312,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4299,
									"end": 4342,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4299,
									"end": 4342,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4299,
									"end": 4342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4299,
									"end": 4342,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 4299,
									"end": 4342,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4106,
									"end": 4354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4106,
									"end": 4354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4081,
									"end": 4354,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 4081,
									"end": 4354,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4394,
									"end": 4409,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4385,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4390,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4374,
									"end": 4391,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4409,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4409,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4409,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4409,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4420,
									"end": 4459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4434,
									"end": 4438,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4444,
									"end": 4458,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4420,
									"end": 4433,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4420,
									"end": 4433,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4420,
									"end": 4433,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4420,
									"end": 4459,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4420,
									"end": 4459,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4420,
									"end": 4459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4420,
									"end": 4459,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4420,
									"end": 4459,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 4505,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3528,
									"end": 4505,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3528,
									"end": 4505,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3528,
									"end": 4505,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3528,
									"end": 4505,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 193,
									"end": 295,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 235,
									"end": 243,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 287,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 279,
									"end": 280,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 288,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 254,
									"end": 288,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 254,
									"end": 288,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 362,
									"end": 367,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 373,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 384,
									"end": 399,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 384,
									"end": 399,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 422,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 408,
									"end": 422,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 408,
									"end": 422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 452,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 450,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 439,
									"end": 454,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 547,
									"end": 551,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 545,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 538,
									"end": 552,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 532,
									"end": 536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 529,
									"end": 553,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 526,
									"end": 576,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 526,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 556,
									"end": 574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 556,
									"end": 574,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 526,
									"end": 576,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 606,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 604,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 592,
									"end": 608,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1025,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1010,
									"end": 1026,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1071,
									"end": 1075,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1065,
									"end": 1069,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1076,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1101,
									"end": 1133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1209,
									"end": 1214,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1408,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1422,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1453,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1466,
									"end": 1467,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1535,
									"end": 1539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1584,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1620,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1659,
									"end": 1662,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1649,
									"end": 1657,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1646,
									"end": 1663,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1666,
									"end": 1684,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1723,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1708,
									"end": 1724,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1750,
									"end": 1753,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1748,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1757,
									"end": 1775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1904,
									"end": 1912,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1917,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1895,
									"end": 1898,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1899,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1864,
									"end": 1866,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 1854,
									"end": 1862,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1851,
									"end": 1867,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1848,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1868,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1817,
									"end": 1928,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1978,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 1968,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2008,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2003,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2009,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2012,
									"end": 2030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 2123,
									"end": 2126,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2113,
									"end": 2121,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2111,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2105,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2085,
									"end": 2127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2163,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2154,
									"end": 2157,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2164,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2143,
									"end": 2148,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2140,
									"end": 2165,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2168,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2217,
									"end": 2221,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2210,
									"end": 2215,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2222,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2271,
									"end": 2278,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2352,
									"end": 2359,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2385,
									"end": 2390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2381,
									"end": 2397,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2370,
									"end": 2397,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2370,
									"end": 2397,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2467,
									"end": 2472,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 2509,
									"end": 2513,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2491,
									"end": 2514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2483,
									"end": 2514,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2483,
									"end": 2514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 2551,
									"end": 2559,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2535,
									"end": 2560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2523,
									"end": 2560,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2523,
									"end": 2560,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 2616,
									"end": 2682,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2614,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2600,
									"end": 2604,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2579,
									"end": 2683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2683,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2736,
									"end": 2743,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 2777,
									"end": 2778,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2759,
									"end": 2779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2754,
									"end": 2779,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2754,
									"end": 2779,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 2811,
									"end": 2812,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2793,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2813,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2813,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2845,
									"end": 2846,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2841,
									"end": 2850,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 2888,
									"end": 2899,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2870,
									"end": 2900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2859,
									"end": 2900,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2859,
									"end": 2900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3049,
									"end": 3050,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3040,
									"end": 3047,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3036,
									"end": 3051,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3034,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3030,
									"end": 3052,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3010,
									"end": 3011,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3012,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2983,
									"end": 3066,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3079,
									"end": 3097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2744,
									"end": 3106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3193,
									"end": 3310,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3193,
									"end": 3310,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3302,
									"end": 3303,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3299,
									"end": 3300,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3292,
									"end": 3304,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3476,
									"end": 3483,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3516,
									"end": 3558,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3509,
									"end": 3514,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3559,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3559,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3559,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3565,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3608,
									"end": 3615,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 3655,
									"end": 3660,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3637,
									"end": 3661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3626,
									"end": 3661,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3626,
									"end": 3661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3795,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3673,
									"end": 3795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 3764,
									"end": 3769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3746,
									"end": 3770,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3739,
									"end": 3744,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3736,
									"end": 3771,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3786,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3782,
									"end": 3783,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3775,
									"end": 3787,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3795,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3889,
									"end": 3895,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3883,
									"end": 3896,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3874,
									"end": 3896,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3874,
									"end": 3896,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 3932,
									"end": 3937,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3905,
									"end": 3938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4037,
									"end": 4043,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4086,
									"end": 4088,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4074,
									"end": 4083,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4065,
									"end": 4072,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4061,
									"end": 4084,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4057,
									"end": 4089,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 4054,
									"end": 4173,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4054,
									"end": 4173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 4054,
									"end": 4173,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4092,
									"end": 4171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 4092,
									"end": 4171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4092,
									"end": 4171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4092,
									"end": 4171,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 4092,
									"end": 4171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4054,
									"end": 4173,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 4054,
									"end": 4173,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4213,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4237,
									"end": 4301,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 4293,
									"end": 4300,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4284,
									"end": 4290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4273,
									"end": 4282,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4291,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4237,
									"end": 4301,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4237,
									"end": 4301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4237,
									"end": 4301,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 4237,
									"end": 4301,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4227,
									"end": 4301,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4227,
									"end": 4301,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4350,
									"end": 4352,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4376,
									"end": 4440,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 4432,
									"end": 4439,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4423,
									"end": 4429,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4412,
									"end": 4421,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4408,
									"end": 4430,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4376,
									"end": 4440,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4376,
									"end": 4440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4376,
									"end": 4440,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 4376,
									"end": 4440,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4366,
									"end": 4440,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4366,
									"end": 4440,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4321,
									"end": 4450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4463,
									"end": 4562,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 4463,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4515,
									"end": 4521,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4549,
									"end": 4554,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4543,
									"end": 4555,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4533,
									"end": 4555,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4533,
									"end": 4555,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4463,
									"end": 4562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4463,
									"end": 4562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4463,
									"end": 4562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4463,
									"end": 4562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4568,
									"end": 4748,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 4568,
									"end": 4748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4616,
									"end": 4693,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4613,
									"end": 4614,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4606,
									"end": 4694,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4713,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4710,
									"end": 4711,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4703,
									"end": 4718,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4734,
									"end": 4735,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4727,
									"end": 4742,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4934,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4754,
									"end": 4934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4802,
									"end": 4879,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4799,
									"end": 4800,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4792,
									"end": 4880,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4899,
									"end": 4903,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4896,
									"end": 4897,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4889,
									"end": 4904,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4923,
									"end": 4927,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4920,
									"end": 4921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4913,
									"end": 4928,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 5260,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4940,
									"end": 5260,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4984,
									"end": 4990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5021,
									"end": 5022,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5015,
									"end": 5019,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5011,
									"end": 5023,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5001,
									"end": 5023,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5001,
									"end": 5023,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5068,
									"end": 5069,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5062,
									"end": 5066,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5058,
									"end": 5070,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5089,
									"end": 5107,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 5079,
									"end": 5160,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5149,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 5137,
									"end": 5143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5133,
									"end": 5150,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5123,
									"end": 5150,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5123,
									"end": 5150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5160,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 5079,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5207,
									"end": 5209,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5199,
									"end": 5205,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5196,
									"end": 5210,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5176,
									"end": 5194,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5173,
									"end": 5211,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5170,
									"end": 5254,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 5170,
									"end": 5254,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5226,
									"end": 5244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 5226,
									"end": 5244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 5226,
									"end": 5244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5226,
									"end": 5244,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 5226,
									"end": 5244,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5170,
									"end": 5254,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 5170,
									"end": 5254,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4991,
									"end": 5260,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 5260,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 5260,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 5260,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 5260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5266,
									"end": 5407,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 5266,
									"end": 5407,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5315,
									"end": 5319,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5338,
									"end": 5341,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5330,
									"end": 5341,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5330,
									"end": 5341,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5361,
									"end": 5364,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5358,
									"end": 5359,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5351,
									"end": 5365,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5395,
									"end": 5399,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5392,
									"end": 5393,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5382,
									"end": 5400,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5374,
									"end": 5400,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5374,
									"end": 5400,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5266,
									"end": 5407,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5266,
									"end": 5407,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5266,
									"end": 5407,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5266,
									"end": 5407,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5506,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 5413,
									"end": 5506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5497,
									"end": 5499,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5492,
									"end": 5494,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5485,
									"end": 5490,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5481,
									"end": 5495,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5477,
									"end": 5500,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5467,
									"end": 5500,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5467,
									"end": 5500,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5506,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5506,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5506,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5556,
									"end": 5564,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5606,
									"end": 5611,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5612,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5575,
									"end": 5612,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5575,
									"end": 5612,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5694,
									"end": 5700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5744,
									"end": 5745,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5732,
									"end": 5742,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5728,
									"end": 5746,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5767,
									"end": 5864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 5797,
									"end": 5863,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5786,
									"end": 5795,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5767,
									"end": 5864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 5767,
									"end": 5864,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5767,
									"end": 5864,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 5767,
									"end": 5864,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5885,
									"end": 5924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 5915,
									"end": 5923,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5904,
									"end": 5913,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5885,
									"end": 5924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 5885,
									"end": 5924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5885,
									"end": 5924,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 5885,
									"end": 5924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5873,
									"end": 5924,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5873,
									"end": 5924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5957,
									"end": 5961,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5953,
									"end": 5962,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5946,
									"end": 5951,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5942,
									"end": 5963,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5933,
									"end": 5963,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5933,
									"end": 5963,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6010,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5996,
									"end": 6004,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5992,
									"end": 6011,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5985,
									"end": 5990,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5982,
									"end": 6012,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5972,
									"end": 6012,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5972,
									"end": 6012,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5701,
									"end": 6018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5701,
									"end": 6018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6084,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 6024,
									"end": 6084,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6052,
									"end": 6055,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6073,
									"end": 6078,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6066,
									"end": 6078,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6066,
									"end": 6078,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6084,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6084,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6084,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6090,
									"end": 6232,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 6090,
									"end": 6232,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6140,
									"end": 6149,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6173,
									"end": 6226,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 6191,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 6200,
									"end": 6224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 6218,
									"end": 6223,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6200,
									"end": 6224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 6200,
									"end": 6224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6200,
									"end": 6224,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 6200,
									"end": 6224,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6191,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 6191,
									"end": 6225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6191,
									"end": 6225,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 6191,
									"end": 6225,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6173,
									"end": 6226,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 6173,
									"end": 6226,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6173,
									"end": 6226,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 6173,
									"end": 6226,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6160,
									"end": 6226,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6160,
									"end": 6226,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6090,
									"end": 6232,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6090,
									"end": 6232,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6090,
									"end": 6232,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6090,
									"end": 6232,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6238,
									"end": 6313,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 6238,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6281,
									"end": 6284,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6302,
									"end": 6307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6307,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6238,
									"end": 6313,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6238,
									"end": 6313,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6238,
									"end": 6313,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6238,
									"end": 6313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6319,
									"end": 6588,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 6319,
									"end": 6588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 6460,
									"end": 6467,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 6429,
									"end": 6468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6468,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 6429,
									"end": 6468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6490,
									"end": 6581,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 6539,
									"end": 6580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 6563,
									"end": 6579,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6539,
									"end": 6580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 6539,
									"end": 6580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6539,
									"end": 6580,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 6539,
									"end": 6580,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6531,
									"end": 6537,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6524,
									"end": 6528,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6518,
									"end": 6529,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6490,
									"end": 6581,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 6490,
									"end": 6581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6490,
									"end": 6581,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 6490,
									"end": 6581,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6484,
									"end": 6488,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6477,
									"end": 6582,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6395,
									"end": 6588,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6319,
									"end": 6588,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6319,
									"end": 6588,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6319,
									"end": 6588,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6319,
									"end": 6588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6594,
									"end": 6667,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 6594,
									"end": 6667,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6639,
									"end": 6642,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6594,
									"end": 6667,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6594,
									"end": 6667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6673,
									"end": 6862,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 6673,
									"end": 6862,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6750,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 6750,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 6750,
									"end": 6782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6750,
									"end": 6782,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 6750,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6791,
									"end": 6856,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 6849,
									"end": 6855,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6841,
									"end": 6847,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6835,
									"end": 6839,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6791,
									"end": 6856,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 6791,
									"end": 6856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6791,
									"end": 6856,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 6791,
									"end": 6856,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6726,
									"end": 6862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6673,
									"end": 6862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6673,
									"end": 6862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6673,
									"end": 6862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6868,
									"end": 7054,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 6868,
									"end": 7054,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6945,
									"end": 6948,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6938,
									"end": 6943,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6935,
									"end": 6949,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7038,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 7036,
									"end": 7037,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7029,
									"end": 7034,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7038,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 6999,
									"end": 7038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7038,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 6999,
									"end": 7038,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6972,
									"end": 6973,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6965,
									"end": 6970,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6961,
									"end": 6974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6952,
									"end": 6974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6952,
									"end": 6974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6868,
									"end": 7054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6868,
									"end": 7054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6868,
									"end": 7054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7603,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 7060,
									"end": 7603,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7161,
									"end": 7163,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7156,
									"end": 7159,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7150,
									"end": 7596,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7150,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 7150,
									"end": 7596,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7195,
									"end": 7233,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 7227,
									"end": 7232,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7195,
									"end": 7233,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 7195,
									"end": 7233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7195,
									"end": 7233,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 7195,
									"end": 7233,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 7297,
									"end": 7307,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 7279,
									"end": 7308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7308,
									"name": "tag",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 7279,
									"end": 7308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7269,
									"end": 7277,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7309,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7462,
									"end": 7464,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7450,
									"end": 7460,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7447,
									"end": 7465,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7444,
									"end": 7493,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7444,
									"end": 7493,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 7444,
									"end": 7493,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7483,
									"end": 7491,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7468,
									"end": 7491,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7468,
									"end": 7491,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7444,
									"end": 7493,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 7444,
									"end": 7493,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7506,
									"end": 7586,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 7562,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 7580,
									"end": 7583,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7562,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 7562,
									"end": 7584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7562,
									"end": 7584,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 7562,
									"end": 7584,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7552,
									"end": 7560,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7548,
									"end": 7585,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7535,
									"end": 7546,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7506,
									"end": 7586,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 7506,
									"end": 7586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7506,
									"end": 7586,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 7506,
									"end": 7586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7165,
									"end": 7596,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7165,
									"end": 7596,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7150,
									"end": 7596,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 7150,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7603,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7663,
									"end": 7671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7713,
									"end": 7718,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7707,
									"end": 7711,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7703,
									"end": 7719,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7719,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7719,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7776,
									"end": 7782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7809,
									"end": 7860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 7857,
									"end": 7858,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7853,
									"end": 7859,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7845,
									"end": 7850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7842,
									"end": 7843,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7838,
									"end": 7851,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7809,
									"end": 7860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 7809,
									"end": 7860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7809,
									"end": 7860,
									"name": "tag",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 7809,
									"end": 7860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7861,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7890,
									"end": 7894,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7884,
									"end": 7888,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7880,
									"end": 7895,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 7895,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 7895,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7783,
									"end": 7901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7982,
									"end": 7986,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8128,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 8153,
									"end": 8156,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8147,
									"end": 8151,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8128,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 8128,
									"end": 8157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8128,
									"end": 8157,
									"name": "tag",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 8128,
									"end": 8157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8190,
									"end": 8193,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8187,
									"end": 8188,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8183,
									"end": 8194,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8177,
									"end": 8181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8174,
									"end": 8195,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8166,
									"end": 8195,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8166,
									"end": 8195,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8206,
									"end": 9601,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 8206,
									"end": 9601,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8323,
									"end": 8360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 8356,
									"end": 8359,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8323,
									"end": 8360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 8323,
									"end": 8360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8323,
									"end": 8360,
									"name": "tag",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 8323,
									"end": 8360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8425,
									"end": 8443,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8417,
									"end": 8423,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8414,
									"end": 8444,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8411,
									"end": 8467,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8411,
									"end": 8467,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 8411,
									"end": 8467,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8447,
									"end": 8465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 8447,
									"end": 8465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 8447,
									"end": 8465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8447,
									"end": 8465,
									"name": "tag",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 8447,
									"end": 8465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8411,
									"end": 8467,
									"name": "tag",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 8411,
									"end": 8467,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8491,
									"end": 8529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 8523,
									"end": 8527,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8517,
									"end": 8528,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8491,
									"end": 8529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 8491,
									"end": 8529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8491,
									"end": 8529,
									"name": "tag",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 8491,
									"end": 8529,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8576,
									"end": 8643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 8636,
									"end": 8642,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8628,
									"end": 8634,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8622,
									"end": 8626,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8576,
									"end": 8643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 8576,
									"end": 8643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8576,
									"end": 8643,
									"name": "tag",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 8576,
									"end": 8643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8670,
									"end": 8671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8694,
									"end": 8698,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8681,
									"end": 8698,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8681,
									"end": 8698,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8726,
									"end": 8728,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8718,
									"end": 8724,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8715,
									"end": 8729,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8743,
									"end": 8744,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9400,
									"end": 9401,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9417,
									"end": 9423,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9414,
									"end": 9491,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9414,
									"end": 9491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 9414,
									"end": 9491,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9466,
									"end": 9475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9461,
									"end": 9464,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9457,
									"end": 9476,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9451,
									"end": 9477,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9442,
									"end": 9477,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9442,
									"end": 9477,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9414,
									"end": 9491,
									"name": "tag",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 9414,
									"end": 9491,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9517,
									"end": 9584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 9577,
									"end": 9583,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9570,
									"end": 9575,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9517,
									"end": 9584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 9517,
									"end": 9584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9517,
									"end": 9584,
									"name": "tag",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 9517,
									"end": 9584,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9511,
									"end": 9515,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9504,
									"end": 9585,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9373,
									"end": 9595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8708,
									"end": 9595,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 8708,
									"end": 9595,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "tag",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8790,
									"end": 8794,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8786,
									"end": 8795,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8778,
									"end": 8784,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8774,
									"end": 8796,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8824,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 8856,
									"end": 8860,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8824,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 8824,
									"end": 8861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8824,
									"end": 8861,
									"name": "tag",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 8824,
									"end": 8861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8883,
									"end": 8884,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "tag",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8911,
									"end": 8918,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8908,
									"end": 8909,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8905,
									"end": 8919,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 8999,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8985,
									"end": 8988,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8981,
									"end": 9000,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 9001,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8967,
									"end": 8973,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8960,
									"end": 9002,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9041,
									"end": 9042,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9033,
									"end": 9039,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9029,
									"end": 9043,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9019,
									"end": 9043,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9019,
									"end": 9043,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9088,
									"end": 9090,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9077,
									"end": 9086,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9073,
									"end": 9091,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9060,
									"end": 9091,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9060,
									"end": 9091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8934,
									"end": 8938,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8931,
									"end": 8932,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8927,
									"end": 8939,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8922,
									"end": 8939,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8922,
									"end": 8939,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "tag",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9133,
									"end": 9139,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9124,
									"end": 9131,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9121,
									"end": 9140,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9118,
									"end": 9297,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9118,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 9118,
									"end": 9297,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9191,
									"end": 9200,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9186,
									"end": 9189,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9182,
									"end": 9201,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9176,
									"end": 9202,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9234,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "231"
								},
								{
									"begin": 9276,
									"end": 9280,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9268,
									"end": 9274,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9264,
									"end": 9281,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9253,
									"end": 9262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9234,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 9234,
									"end": 9282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9234,
									"end": 9282,
									"name": "tag",
									"source": 7,
									"value": "231"
								},
								{
									"begin": 9234,
									"end": 9282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9226,
									"end": 9232,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9219,
									"end": 9283,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9141,
									"end": 9297,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9118,
									"end": 9297,
									"name": "tag",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 9118,
									"end": 9297,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9343,
									"end": 9344,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9339,
									"end": 9340,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9331,
									"end": 9337,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9327,
									"end": 9341,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9323,
									"end": 9345,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9317,
									"end": 9321,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9310,
									"end": 9346,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8745,
									"end": 9356,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8745,
									"end": 9356,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8745,
									"end": 9356,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8708,
									"end": 9595,
									"name": "tag",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 8708,
									"end": 9595,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8708,
									"end": 9595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8298,
									"end": 9601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8298,
									"end": 9601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8298,
									"end": 9601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8206,
									"end": 9601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8206,
									"end": 9601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8206,
									"end": 9601,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9607,
									"end": 9725,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 9607,
									"end": 9725,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9694,
									"end": 9718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 9712,
									"end": 9717,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9694,
									"end": 9718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 9694,
									"end": 9718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9694,
									"end": 9718,
									"name": "tag",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 9694,
									"end": 9718,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9689,
									"end": 9692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9682,
									"end": 9719,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9607,
									"end": 9725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9607,
									"end": 9725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9607,
									"end": 9725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9824,
									"end": 9828,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9864,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9851,
									"end": 9860,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9847,
									"end": 9865,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9839,
									"end": 9865,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9839,
									"end": 9865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9875,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 9943,
									"end": 9944,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9928,
									"end": 9945,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9919,
									"end": 9925,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9875,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 9875,
									"end": 9946,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9875,
									"end": 9946,
									"name": "tag",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 9875,
									"end": 9946,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10043,
									"end": 10054,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10077,
									"end": 10083,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10072,
									"end": 10075,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10065,
									"end": 10084,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10117,
									"end": 10121,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10112,
									"end": 10115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10108,
									"end": 10122,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10093,
									"end": 10122,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10093,
									"end": 10122,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10134,
									"end": 10305,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 10134,
									"end": 10305,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10274,
									"end": 10297,
									"name": "PUSH",
									"source": 7,
									"value": "426C61636B6C6973746564204164647265737365730000000000000000000000"
								},
								{
									"begin": 10270,
									"end": 10271,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10262,
									"end": 10268,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10258,
									"end": 10272,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10251,
									"end": 10298,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10134,
									"end": 10305,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10134,
									"end": 10305,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10677,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 10311,
									"end": 10677,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10453,
									"end": 10456,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10474,
									"end": 10541,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 10538,
									"end": 10540,
									"name": "PUSH",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 10533,
									"end": 10536,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10474,
									"end": 10541,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 10474,
									"end": 10541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10474,
									"end": 10541,
									"name": "tag",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 10474,
									"end": 10541,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10467,
									"end": 10541,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10467,
									"end": 10541,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10550,
									"end": 10643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 10639,
									"end": 10642,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10550,
									"end": 10643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 10550,
									"end": 10643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10550,
									"end": 10643,
									"name": "tag",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 10550,
									"end": 10643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10668,
									"end": 10670,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10663,
									"end": 10666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10659,
									"end": 10671,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10652,
									"end": 10671,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10652,
									"end": 10671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10677,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10677,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10677,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10683,
									"end": 11102,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 10683,
									"end": 11102,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10849,
									"end": 10853,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10887,
									"end": 10889,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10876,
									"end": 10885,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10872,
									"end": 10890,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10864,
									"end": 10890,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10864,
									"end": 10890,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10936,
									"end": 10945,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10930,
									"end": 10934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10926,
									"end": 10946,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 10922,
									"end": 10923,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10911,
									"end": 10920,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10907,
									"end": 10924,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10900,
									"end": 10947,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10964,
									"end": 11095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "242"
								},
								{
									"begin": 11090,
									"end": 11094,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10964,
									"end": 11095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 10964,
									"end": 11095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10964,
									"end": 11095,
									"name": "tag",
									"source": 7,
									"value": "242"
								},
								{
									"begin": 10964,
									"end": 11095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10956,
									"end": 11095,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10956,
									"end": 11095,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10683,
									"end": 11102,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10683,
									"end": 11102,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10683,
									"end": 11102,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10683,
									"end": 11102,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11108,
									"end": 11329,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 11108,
									"end": 11329,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11248,
									"end": 11282,
									"name": "PUSH",
									"source": 7,
									"value": "426F746820616464726573736573206D7573742062652077686974656C697374"
								},
								{
									"begin": 11244,
									"end": 11245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11236,
									"end": 11242,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11232,
									"end": 11246,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11225,
									"end": 11283,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11317,
									"end": 11321,
									"name": "PUSH",
									"source": 7,
									"value": "6564000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11312,
									"end": 11314,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11304,
									"end": 11310,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11300,
									"end": 11315,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11293,
									"end": 11322,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11108,
									"end": 11329,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11108,
									"end": 11329,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11335,
									"end": 11701,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 11335,
									"end": 11701,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11477,
									"end": 11480,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11498,
									"end": 11565,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 11562,
									"end": 11564,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 11557,
									"end": 11560,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11498,
									"end": 11565,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 11498,
									"end": 11565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11498,
									"end": 11565,
									"name": "tag",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 11498,
									"end": 11565,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11491,
									"end": 11565,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11491,
									"end": 11565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11574,
									"end": 11667,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 11663,
									"end": 11666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11574,
									"end": 11667,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 11574,
									"end": 11667,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11574,
									"end": 11667,
									"name": "tag",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 11574,
									"end": 11667,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11692,
									"end": 11694,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 11687,
									"end": 11690,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11683,
									"end": 11695,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11676,
									"end": 11695,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11676,
									"end": 11695,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11335,
									"end": 11701,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11335,
									"end": 11701,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11335,
									"end": 11701,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11335,
									"end": 11701,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11707,
									"end": 12126,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 11707,
									"end": 12126,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11873,
									"end": 11877,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11911,
									"end": 11913,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11900,
									"end": 11909,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11896,
									"end": 11914,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11888,
									"end": 11914,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11888,
									"end": 11914,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11960,
									"end": 11969,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11954,
									"end": 11958,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11950,
									"end": 11970,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 11946,
									"end": 11947,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11935,
									"end": 11944,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11931,
									"end": 11948,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11924,
									"end": 11971,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11988,
									"end": 12119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 12114,
									"end": 12118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11988,
									"end": 12119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 11988,
									"end": 12119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11988,
									"end": 12119,
									"name": "tag",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 11988,
									"end": 12119,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11980,
									"end": 12119,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11980,
									"end": 12119,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11707,
									"end": 12126,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11707,
									"end": 12126,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11707,
									"end": 12126,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11707,
									"end": 12126,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12132,
									"end": 12311,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 12132,
									"end": 12311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12272,
									"end": 12303,
									"name": "PUSH",
									"source": 7,
									"value": "546F6B656E205472616E73666572204C696D6974204578636565646564000000"
								},
								{
									"begin": 12268,
									"end": 12269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12260,
									"end": 12266,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12256,
									"end": 12270,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12249,
									"end": 12304,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12132,
									"end": 12311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12132,
									"end": 12311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12317,
									"end": 12683,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 12317,
									"end": 12683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12459,
									"end": 12462,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12480,
									"end": 12547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 12544,
									"end": 12546,
									"name": "PUSH",
									"source": 7,
									"value": "1D"
								},
								{
									"begin": 12539,
									"end": 12542,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12480,
									"end": 12547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 12480,
									"end": 12547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12480,
									"end": 12547,
									"name": "tag",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 12480,
									"end": 12547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12473,
									"end": 12547,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12473,
									"end": 12547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12556,
									"end": 12649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "252"
								},
								{
									"begin": 12645,
									"end": 12648,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12556,
									"end": 12649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 12556,
									"end": 12649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12556,
									"end": 12649,
									"name": "tag",
									"source": 7,
									"value": "252"
								},
								{
									"begin": 12556,
									"end": 12649,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12674,
									"end": 12676,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12669,
									"end": 12672,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12665,
									"end": 12677,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12658,
									"end": 12677,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12658,
									"end": 12677,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12317,
									"end": 12683,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12317,
									"end": 12683,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12317,
									"end": 12683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12317,
									"end": 12683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12689,
									"end": 13108,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 12689,
									"end": 13108,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12855,
									"end": 12859,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12893,
									"end": 12895,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12882,
									"end": 12891,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12878,
									"end": 12896,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12870,
									"end": 12896,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12870,
									"end": 12896,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12942,
									"end": 12951,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12936,
									"end": 12940,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12932,
									"end": 12952,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 12928,
									"end": 12929,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12917,
									"end": 12926,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12913,
									"end": 12930,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12906,
									"end": 12953,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12970,
									"end": 13101,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "254"
								},
								{
									"begin": 13096,
									"end": 13100,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12970,
									"end": 13101,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 12970,
									"end": 13101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12970,
									"end": 13101,
									"name": "tag",
									"source": 7,
									"value": "254"
								},
								{
									"begin": 12970,
									"end": 13101,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12962,
									"end": 13101,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12962,
									"end": 13101,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12689,
									"end": 13108,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12689,
									"end": 13108,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12689,
									"end": 13108,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12689,
									"end": 13108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13114,
									"end": 13305,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 13114,
									"end": 13305,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13154,
									"end": 13157,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13173,
									"end": 13193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "256"
								},
								{
									"begin": 13191,
									"end": 13192,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13173,
									"end": 13193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 13173,
									"end": 13193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13173,
									"end": 13193,
									"name": "tag",
									"source": 7,
									"value": "256"
								},
								{
									"begin": 13173,
									"end": 13193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13168,
									"end": 13193,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13168,
									"end": 13193,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13207,
									"end": 13227,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "257"
								},
								{
									"begin": 13225,
									"end": 13226,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13207,
									"end": 13227,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 13207,
									"end": 13227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13207,
									"end": 13227,
									"name": "tag",
									"source": 7,
									"value": "257"
								},
								{
									"begin": 13207,
									"end": 13227,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13202,
									"end": 13227,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13202,
									"end": 13227,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13250,
									"end": 13251,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13247,
									"end": 13248,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13243,
									"end": 13252,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13236,
									"end": 13252,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13236,
									"end": 13252,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13271,
									"end": 13274,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 13268,
									"end": 13269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13265,
									"end": 13275,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 13262,
									"end": 13298,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 13262,
									"end": 13298,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "258"
								},
								{
									"begin": 13262,
									"end": 13298,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 13278,
									"end": 13296,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "259"
								},
								{
									"begin": 13278,
									"end": 13296,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 13278,
									"end": 13296,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13278,
									"end": 13296,
									"name": "tag",
									"source": 7,
									"value": "259"
								},
								{
									"begin": 13278,
									"end": 13296,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13262,
									"end": 13298,
									"name": "tag",
									"source": 7,
									"value": "258"
								},
								{
									"begin": 13262,
									"end": 13298,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13114,
									"end": 13305,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13114,
									"end": 13305,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13114,
									"end": 13305,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13114,
									"end": 13305,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13114,
									"end": 13305,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13311,
									"end": 13487,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 13311,
									"end": 13487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13451,
									"end": 13479,
									"name": "PUSH",
									"source": 7,
									"value": "546F6B656E205472616E7366657220696E20636F6F6C646F776E000000000000"
								},
								{
									"begin": 13447,
									"end": 13448,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13439,
									"end": 13445,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13435,
									"end": 13449,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13428,
									"end": 13480,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 13311,
									"end": 13487,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13311,
									"end": 13487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13493,
									"end": 13859,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 13493,
									"end": 13859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13635,
									"end": 13638,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13656,
									"end": 13723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "262"
								},
								{
									"begin": 13720,
									"end": 13722,
									"name": "PUSH",
									"source": 7,
									"value": "1A"
								},
								{
									"begin": 13715,
									"end": 13718,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13656,
									"end": 13723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 13656,
									"end": 13723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13656,
									"end": 13723,
									"name": "tag",
									"source": 7,
									"value": "262"
								},
								{
									"begin": 13656,
									"end": 13723,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13649,
									"end": 13723,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13649,
									"end": 13723,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13732,
									"end": 13825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "263"
								},
								{
									"begin": 13821,
									"end": 13824,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13732,
									"end": 13825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 13732,
									"end": 13825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13732,
									"end": 13825,
									"name": "tag",
									"source": 7,
									"value": "263"
								},
								{
									"begin": 13732,
									"end": 13825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13850,
									"end": 13852,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13845,
									"end": 13848,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13841,
									"end": 13853,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13834,
									"end": 13853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13834,
									"end": 13853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13493,
									"end": 13859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13493,
									"end": 13859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13493,
									"end": 13859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13493,
									"end": 13859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13865,
									"end": 14284,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 13865,
									"end": 14284,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14031,
									"end": 14035,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14069,
									"end": 14071,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 14058,
									"end": 14067,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14054,
									"end": 14072,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14046,
									"end": 14072,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14046,
									"end": 14072,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14118,
									"end": 14127,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14112,
									"end": 14116,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14108,
									"end": 14128,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 14104,
									"end": 14105,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14093,
									"end": 14102,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14089,
									"end": 14106,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14082,
									"end": 14129,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14146,
									"end": 14277,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "265"
								},
								{
									"begin": 14272,
									"end": 14276,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14146,
									"end": 14277,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 14146,
									"end": 14277,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14146,
									"end": 14277,
									"name": "tag",
									"source": 7,
									"value": "265"
								},
								{
									"begin": 14146,
									"end": 14277,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14138,
									"end": 14277,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14138,
									"end": 14277,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13865,
									"end": 14284,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13865,
									"end": 14284,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13865,
									"end": 14284,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13865,
									"end": 14284,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14290,
									"end": 14470,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 14290,
									"end": 14470,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14338,
									"end": 14415,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14335,
									"end": 14336,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14328,
									"end": 14416,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14435,
									"end": 14439,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 14432,
									"end": 14433,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 14425,
									"end": 14440,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14459,
									"end": 14463,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 14456,
									"end": 14457,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14449,
									"end": 14464,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 14476,
									"end": 14661,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 14476,
									"end": 14661,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14516,
									"end": 14517,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14533,
									"end": 14553,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "268"
								},
								{
									"begin": 14551,
									"end": 14552,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14533,
									"end": 14553,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 14533,
									"end": 14553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14533,
									"end": 14553,
									"name": "tag",
									"source": 7,
									"value": "268"
								},
								{
									"begin": 14533,
									"end": 14553,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14528,
									"end": 14553,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14528,
									"end": 14553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14567,
									"end": 14587,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "269"
								},
								{
									"begin": 14585,
									"end": 14586,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14567,
									"end": 14587,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 14567,
									"end": 14587,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14567,
									"end": 14587,
									"name": "tag",
									"source": 7,
									"value": "269"
								},
								{
									"begin": 14567,
									"end": 14587,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14562,
									"end": 14587,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14562,
									"end": 14587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14606,
									"end": 14607,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14596,
									"end": 14631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "270"
								},
								{
									"begin": 14596,
									"end": 14631,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 14611,
									"end": 14629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "271"
								},
								{
									"begin": 14611,
									"end": 14629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 14611,
									"end": 14629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14611,
									"end": 14629,
									"name": "tag",
									"source": 7,
									"value": "271"
								},
								{
									"begin": 14611,
									"end": 14629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14596,
									"end": 14631,
									"name": "tag",
									"source": 7,
									"value": "270"
								},
								{
									"begin": 14596,
									"end": 14631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14653,
									"end": 14654,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14650,
									"end": 14651,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14646,
									"end": 14655,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 14641,
									"end": 14655,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14641,
									"end": 14655,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14476,
									"end": 14661,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14476,
									"end": 14661,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14476,
									"end": 14661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14476,
									"end": 14661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14476,
									"end": 14661,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14667,
									"end": 14861,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 14667,
									"end": 14861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14707,
									"end": 14711,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14727,
									"end": 14747,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "273"
								},
								{
									"begin": 14745,
									"end": 14746,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14727,
									"end": 14747,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 14727,
									"end": 14747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14727,
									"end": 14747,
									"name": "tag",
									"source": 7,
									"value": "273"
								},
								{
									"begin": 14727,
									"end": 14747,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14722,
									"end": 14747,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14722,
									"end": 14747,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14761,
									"end": 14781,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "274"
								},
								{
									"begin": 14779,
									"end": 14780,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14761,
									"end": 14781,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 14761,
									"end": 14781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14761,
									"end": 14781,
									"name": "tag",
									"source": 7,
									"value": "274"
								},
								{
									"begin": 14761,
									"end": 14781,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14756,
									"end": 14781,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14756,
									"end": 14781,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14805,
									"end": 14806,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14802,
									"end": 14803,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14798,
									"end": 14807,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 14790,
									"end": 14807,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14790,
									"end": 14807,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14829,
									"end": 14830,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14823,
									"end": 14827,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14820,
									"end": 14831,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 14817,
									"end": 14854,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 14817,
									"end": 14854,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "275"
								},
								{
									"begin": 14817,
									"end": 14854,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 14834,
									"end": 14852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "276"
								},
								{
									"begin": 14834,
									"end": 14852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 14834,
									"end": 14852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14834,
									"end": 14852,
									"name": "tag",
									"source": 7,
									"value": "276"
								},
								{
									"begin": 14834,
									"end": 14852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14817,
									"end": 14854,
									"name": "tag",
									"source": 7,
									"value": "275"
								},
								{
									"begin": 14817,
									"end": 14854,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14667,
									"end": 14861,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14667,
									"end": 14861,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14667,
									"end": 14861,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14667,
									"end": 14861,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14667,
									"end": 14861,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14867,
									"end": 14985,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 14867,
									"end": 14985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14954,
									"end": 14978,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "278"
								},
								{
									"begin": 14972,
									"end": 14977,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14954,
									"end": 14978,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 14954,
									"end": 14978,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14954,
									"end": 14978,
									"name": "tag",
									"source": 7,
									"value": "278"
								},
								{
									"begin": 14954,
									"end": 14978,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14949,
									"end": 14952,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14942,
									"end": 14979,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14867,
									"end": 14985,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14867,
									"end": 14985,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14867,
									"end": 14985,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14991,
									"end": 15433,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 14991,
									"end": 15433,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15140,
									"end": 15144,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15178,
									"end": 15180,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 15167,
									"end": 15176,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15163,
									"end": 15181,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15155,
									"end": 15181,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 15155,
									"end": 15181,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15191,
									"end": 15262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "280"
								},
								{
									"begin": 15259,
									"end": 15260,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15248,
									"end": 15257,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15244,
									"end": 15261,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15235,
									"end": 15241,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 15191,
									"end": 15262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 15191,
									"end": 15262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15191,
									"end": 15262,
									"name": "tag",
									"source": 7,
									"value": "280"
								},
								{
									"begin": 15191,
									"end": 15262,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15272,
									"end": 15344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "281"
								},
								{
									"begin": 15340,
									"end": 15342,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 15329,
									"end": 15338,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15325,
									"end": 15343,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15316,
									"end": 15322,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 15272,
									"end": 15344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 15272,
									"end": 15344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15272,
									"end": 15344,
									"name": "tag",
									"source": 7,
									"value": "281"
								},
								{
									"begin": 15272,
									"end": 15344,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15354,
									"end": 15426,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "282"
								},
								{
									"begin": 15422,
									"end": 15424,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 15411,
									"end": 15420,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15407,
									"end": 15425,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15398,
									"end": 15404,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 15354,
									"end": 15426,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 15354,
									"end": 15426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15354,
									"end": 15426,
									"name": "tag",
									"source": 7,
									"value": "282"
								},
								{
									"begin": 15354,
									"end": 15426,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14991,
									"end": 15433,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 14991,
									"end": 15433,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 14991,
									"end": 15433,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14991,
									"end": 15433,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14991,
									"end": 15433,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14991,
									"end": 15433,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14991,
									"end": 15433,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15439,
									"end": 15661,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 15439,
									"end": 15661,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15532,
									"end": 15536,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15570,
									"end": 15572,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 15559,
									"end": 15568,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15555,
									"end": 15573,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15547,
									"end": 15573,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 15547,
									"end": 15573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15583,
									"end": 15654,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "284"
								},
								{
									"begin": 15651,
									"end": 15652,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15640,
									"end": 15649,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15636,
									"end": 15653,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15627,
									"end": 15633,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 15583,
									"end": 15654,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 15583,
									"end": 15654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15583,
									"end": 15654,
									"name": "tag",
									"source": 7,
									"value": "284"
								},
								{
									"begin": 15583,
									"end": 15654,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15439,
									"end": 15661,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 15439,
									"end": 15661,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 15439,
									"end": 15661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15439,
									"end": 15661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15439,
									"end": 15661,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 4510,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c8eef9ad00a7b632390a46735f590f1c972c5b793843d324fb126788631b197364736f6c634300081a0033",
									".code": [
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "B319C6B7"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "E43252D7"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "EC28438A"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "FE575A87"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "B319C6B7"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "B7BDA68F"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "CC7A736D"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "CED695A4"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "9DFC9117"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "8AB1D681"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "8C0B5E22"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "3AF32ABF"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "537DF3B6"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "537DF3B6"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "53EB3BCF"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "688188E8"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "6D8B0527"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "6E16DE11"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "3AF32ABF"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "44337EA1"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "49192418"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "4EBC552D"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "1C0AECFA"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "1C0AECFA"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "2958AD7F"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "DDC0976"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 4510,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 452,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 452,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2295,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2295,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1626,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2167,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2167,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2167,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1222,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1222,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3136,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3136,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2960,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2960,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1376,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1376,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3428,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3346,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3346,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3346,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3428,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3346,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3428,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1836,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1734,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1734,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1734,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1836,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1734,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1836,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2650,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2650,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1214,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1115,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1115,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1115,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1214,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1115,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1214,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2045,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2045,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 356,
											"end": 399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 356,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 356,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 356,
											"end": 399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 399,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 356,
											"end": 399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 356,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 356,
											"end": 399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 399,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2781,
											"end": 2952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2781,
											"end": 2952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 406,
											"end": 445,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 406,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 406,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 770,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 770,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 485,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 485,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3520,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3436,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3436,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3436,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3520,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3436,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3520,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1844,
											"end": 2039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1844,
											"end": 2039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2415,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2415,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1498,
											"end": 1618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1498,
											"end": 1618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1498,
											"end": 1618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 452,
											"end": 478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1626,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1691,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 1691,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2270,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1298,
											"end": 1308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1316,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1324,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1357,
											"end": 1362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1353,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3229,
											"end": 3244,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3249,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3249,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3221,
											"end": 3289,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3221,
											"end": 3289,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3330,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3300,
											"end": 3330,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3330,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3053,
											"end": 3055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3040,
											"end": 3049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3055,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3055,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3032,
											"end": 3090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3032,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3101,
											"end": 3120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3120,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1475,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1484,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3428,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3346,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3402,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3402,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1836,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1734,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2765,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2735,
											"end": 2765,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 2765,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 2765,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 2765,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1214,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1115,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1181,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1181,
											"end": 1206,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1181,
											"end": 1206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2144,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 356,
											"end": 399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 356,
											"end": 399,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 356,
											"end": 399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2852,
											"end": 2859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2893,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2893,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2893,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 2913,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2902,
											"end": 2913,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 2943,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2929,
											"end": 2943,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2944,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 406,
											"end": 445,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 406,
											"end": 445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 485,
											"end": 516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3520,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3436,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3507,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3493,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1929,
											"end": 1948,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1948,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1920,
											"end": 1994,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1920,
											"end": 1994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2005,
											"end": 2015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2023,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2526,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2498,
											"end": 2526,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2526,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1601,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1609,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 4505,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3528,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3640,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3645,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3646,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3665,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3665,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3629,
											"end": 3665,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3665,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3665,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3629,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 3621,
											"end": 3692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3726,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3706,
											"end": 3726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3726,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3726,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3706,
											"end": 3726,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3726,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3726,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3706,
											"end": 3726,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3846,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 3703,
											"end": 3846,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3770,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3775,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3794,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 3760,
											"end": 3794,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3793,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3780,
											"end": 3794,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3794,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 3760,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 3752,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 3752,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3846,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 3703,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3884,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3873,
											"end": 3884,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3884,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3884,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 3856,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 3856,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3987,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3975,
											"end": 3987,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3968,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3973,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 3957,
											"end": 3987,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 3957,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3987,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 3957,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3953,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3987,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3987,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 3930,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 3930,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4354,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 4081,
											"end": 4354,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 4141,
											"end": 4163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4141,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4163,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 4141,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4121,
											"end": 4163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4121,
											"end": 4163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4235,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4221,
											"end": 4230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4218,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 4213,
											"end": 4230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 4213,
											"end": 4230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4230,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 4213,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4212,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 4212,
											"end": 4235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4212,
											"end": 4235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4212,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 4212,
											"end": 4235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4212,
											"end": 4235,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 4212,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4284,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4272,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4267,
											"end": 4284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 4267,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4284,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4267,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4284,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4341,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 4299,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4342,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 4299,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4354,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 4081,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4394,
											"end": 4409,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4385,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4390,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4409,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4409,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 4434,
											"end": 4438,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4442,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 4420,
											"end": 4459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4459,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 4420,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 4505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 4505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 4505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 4505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 4505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 5986,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5972,
											"end": 5981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 5987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 5987,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6041,
											"end": 6047,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5997,
											"end": 6068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6068,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 5997,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6135,
											"end": 6144,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6131,
											"end": 6149,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6128,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 6078,
											"end": 6150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6150,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 6078,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 6228,
											"end": 6230,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6217,
											"end": 6226,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6213,
											"end": 6231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6204,
											"end": 6210,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 6160,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6232,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 6160,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 6310,
											"end": 6312,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6299,
											"end": 6308,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6295,
											"end": 6313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6286,
											"end": 6292,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 6242,
											"end": 6314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6314,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 6242,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6440,
											"end": 6449,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6438,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6427,
											"end": 6450,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6455,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6539,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 6420,
											"end": 6539,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6458,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 6458,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 6458,
											"end": 6537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6458,
											"end": 6537,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 6458,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6539,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 6420,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 6648,
											"end": 6655,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6639,
											"end": 6645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6624,
											"end": 6646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 6603,
											"end": 6656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6656,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 6603,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6656,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6707,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6731,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 6776,
											"end": 6783,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6773,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6765,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6731,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 6731,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6731,
											"end": 6784,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 6731,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6676,
											"end": 6794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6987,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 6807,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6932,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6852,
											"end": 6853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6845,
											"end": 6933,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6956,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6949,
											"end": 6950,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6942,
											"end": 6957,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6976,
											"end": 6980,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6973,
											"end": 6974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7313,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6993,
											"end": 7313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7074,
											"end": 7075,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7068,
											"end": 7072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7076,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7115,
											"end": 7119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7123,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 7132,
											"end": 7213,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7202,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 7190,
											"end": 7196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7203,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7176,
											"end": 7203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7176,
											"end": 7203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7213,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 7132,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7252,
											"end": 7258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7263,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7226,
											"end": 7264,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 7223,
											"end": 7307,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 7279,
											"end": 7297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7307,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 7223,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7044,
											"end": 7313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7540,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 7319,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7459,
											"end": 7493,
											"name": "PUSH",
											"source": 7,
											"value": "536C6970706167652066656573206D757374206265206C657373207468616E20"
										},
										{
											"begin": 7455,
											"end": 7456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7443,
											"end": 7457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7436,
											"end": 7494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7532,
											"name": "PUSH",
											"source": 7,
											"value": "3525000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7523,
											"end": 7525,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7515,
											"end": 7521,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7511,
											"end": 7526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7533,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7912,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7546,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7688,
											"end": 7691,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7709,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 7773,
											"end": 7775,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7709,
											"end": 7776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 7776,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 7709,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7702,
											"end": 7776,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7702,
											"end": 7776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7785,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 7874,
											"end": 7877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7785,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 7785,
											"end": 7878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7785,
											"end": 7878,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 7785,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7903,
											"end": 7905,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7898,
											"end": 7901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7894,
											"end": 7906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7918,
											"end": 8337,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 7918,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8124,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8111,
											"end": 8120,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8099,
											"end": 8125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8099,
											"end": 8125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8165,
											"end": 8169,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8181,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8157,
											"end": 8158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8146,
											"end": 8155,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8135,
											"end": 8182,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 8325,
											"end": 8329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8199,
											"end": 8330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8330,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 8199,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7918,
											"end": 8337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7918,
											"end": 8337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7918,
											"end": 8337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7918,
											"end": 8337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8522,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 8343,
											"end": 8522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8483,
											"end": 8514,
											"name": "PUSH",
											"source": 7,
											"value": "54617820666565206D757374206265206C657373207468616E20313025000000"
										},
										{
											"begin": 8479,
											"end": 8480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8467,
											"end": 8481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8460,
											"end": 8515,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8894,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 8528,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 8755,
											"end": 8757,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 8750,
											"end": 8753,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 8691,
											"end": 8758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8758,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 8691,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8684,
											"end": 8758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8684,
											"end": 8758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8767,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 8856,
											"end": 8859,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8767,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 8767,
											"end": 8860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8767,
											"end": 8860,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 8767,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8885,
											"end": 8887,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8880,
											"end": 8883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8876,
											"end": 8888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8869,
											"end": 8888,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8869,
											"end": 8888,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9319,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 8900,
											"end": 9319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9104,
											"end": 9106,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9081,
											"end": 9107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9081,
											"end": 9107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9153,
											"end": 9162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9147,
											"end": 9151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9143,
											"end": 9163,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9139,
											"end": 9140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9137,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9124,
											"end": 9141,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9117,
											"end": 9164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 9307,
											"end": 9311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 9181,
											"end": 9312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9312,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 9181,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9319,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9319,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9553,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 9325,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9465,
											"end": 9499,
											"name": "PUSH",
											"source": 7,
											"value": "426C61636B6C697374656420616464726573732063616E6E6F74206265207768"
										},
										{
											"begin": 9461,
											"end": 9462,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9453,
											"end": 9459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9463,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9442,
											"end": 9500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9545,
											"name": "PUSH",
											"source": 7,
											"value": "6974656C69737465640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9529,
											"end": 9531,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9521,
											"end": 9527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9517,
											"end": 9532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9925,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 9559,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 9704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9722,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 9786,
											"end": 9788,
											"name": "PUSH",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 9781,
											"end": 9784,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9722,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 9722,
											"end": 9789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9722,
											"end": 9789,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 9722,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9715,
											"end": 9789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9715,
											"end": 9789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 9887,
											"end": 9890,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 9798,
											"end": 9891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9891,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 9798,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9916,
											"end": 9918,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9911,
											"end": 9914,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9900,
											"end": 9919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9900,
											"end": 9919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 10350,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 9931,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10097,
											"end": 10101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10137,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10124,
											"end": 10133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10112,
											"end": 10138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10112,
											"end": 10138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10184,
											"end": 10193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10178,
											"end": 10182,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10174,
											"end": 10194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10170,
											"end": 10171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10168,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10155,
											"end": 10172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10148,
											"end": 10195,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10212,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 10338,
											"end": 10342,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10212,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 10212,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10212,
											"end": 10343,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 10212,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10204,
											"end": 10343,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10204,
											"end": 10343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 10350,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 10350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 10350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 10350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 10798,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 10356,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10505,
											"end": 10509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10543,
											"end": 10545,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10532,
											"end": 10541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10528,
											"end": 10546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10520,
											"end": 10546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10520,
											"end": 10546,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10556,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 10624,
											"end": 10625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10613,
											"end": 10622,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10609,
											"end": 10626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10600,
											"end": 10606,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10556,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 10556,
											"end": 10627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10556,
											"end": 10627,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 10556,
											"end": 10627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 10705,
											"end": 10707,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10694,
											"end": 10703,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10690,
											"end": 10708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10681,
											"end": 10687,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 10637,
											"end": 10709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10709,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 10637,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10719,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 10787,
											"end": 10789,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10776,
											"end": 10785,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10772,
											"end": 10790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10763,
											"end": 10769,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10719,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 10719,
											"end": 10791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10719,
											"end": 10791,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 10719,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 10798,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 10798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 10798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 10798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 10798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 10798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 10798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10975,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 10804,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10944,
											"end": 10967,
											"name": "PUSH",
											"source": 7,
											"value": "426C61636B6C6973746564204164647265737365730000000000000000000000"
										},
										{
											"begin": 10940,
											"end": 10941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10932,
											"end": 10938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10928,
											"end": 10942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10921,
											"end": 10968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10981,
											"end": 11347,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 10981,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11123,
											"end": 11126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 11208,
											"end": 11210,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 11203,
											"end": 11206,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11144,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 11144,
											"end": 11211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11144,
											"end": 11211,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 11144,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11137,
											"end": 11211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11137,
											"end": 11211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11220,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 11309,
											"end": 11312,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11220,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 11220,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11220,
											"end": 11313,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 11220,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11338,
											"end": 11340,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11333,
											"end": 11336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11329,
											"end": 11341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11322,
											"end": 11341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11322,
											"end": 11341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10981,
											"end": 11347,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10981,
											"end": 11347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10981,
											"end": 11347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10981,
											"end": 11347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11353,
											"end": 11772,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 11353,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11519,
											"end": 11523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11557,
											"end": 11559,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11546,
											"end": 11555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11542,
											"end": 11560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11534,
											"end": 11560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11534,
											"end": 11560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11606,
											"end": 11615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11600,
											"end": 11604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11596,
											"end": 11616,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11592,
											"end": 11593,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11581,
											"end": 11590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11577,
											"end": 11594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11570,
											"end": 11617,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11634,
											"end": 11765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 11760,
											"end": 11764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11634,
											"end": 11765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 11634,
											"end": 11765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11634,
											"end": 11765,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 11634,
											"end": 11765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11626,
											"end": 11765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11626,
											"end": 11765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11353,
											"end": 11772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11353,
											"end": 11772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11353,
											"end": 11772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11353,
											"end": 11772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11778,
											"end": 11999,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 11778,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11918,
											"end": 11952,
											"name": "PUSH",
											"source": 7,
											"value": "426F746820616464726573736573206D7573742062652077686974656C697374"
										},
										{
											"begin": 11914,
											"end": 11915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11906,
											"end": 11912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11902,
											"end": 11916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11895,
											"end": 11953,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11987,
											"end": 11991,
											"name": "PUSH",
											"source": 7,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11982,
											"end": 11984,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11974,
											"end": 11980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11970,
											"end": 11985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11963,
											"end": 11992,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11778,
											"end": 11999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11778,
											"end": 11999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12005,
											"end": 12371,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 12005,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12147,
											"end": 12150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 12232,
											"end": 12234,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 12227,
											"end": 12230,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12168,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 12168,
											"end": 12235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12168,
											"end": 12235,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 12168,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12161,
											"end": 12235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12161,
											"end": 12235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 12333,
											"end": 12336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 12244,
											"end": 12337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12362,
											"end": 12364,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12357,
											"end": 12360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12353,
											"end": 12365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12346,
											"end": 12365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12346,
											"end": 12365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12005,
											"end": 12371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12005,
											"end": 12371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12005,
											"end": 12371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12005,
											"end": 12371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12377,
											"end": 12796,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 12377,
											"end": 12796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12543,
											"end": 12547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12581,
											"end": 12583,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12570,
											"end": 12579,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12566,
											"end": 12584,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12558,
											"end": 12584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12558,
											"end": 12584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12630,
											"end": 12639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12624,
											"end": 12628,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12640,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12616,
											"end": 12617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12605,
											"end": 12614,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12601,
											"end": 12618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12594,
											"end": 12641,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12658,
											"end": 12789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 12784,
											"end": 12788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12658,
											"end": 12789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 12658,
											"end": 12789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12658,
											"end": 12789,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 12658,
											"end": 12789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12650,
											"end": 12789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12650,
											"end": 12789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12377,
											"end": 12796,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12377,
											"end": 12796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12377,
											"end": 12796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12377,
											"end": 12796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12802,
											"end": 12981,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 12802,
											"end": 12981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12942,
											"end": 12973,
											"name": "PUSH",
											"source": 7,
											"value": "546F6B656E205472616E73666572204C696D6974204578636565646564000000"
										},
										{
											"begin": 12938,
											"end": 12939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12930,
											"end": 12936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12926,
											"end": 12940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12919,
											"end": 12974,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12802,
											"end": 12981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12802,
											"end": 12981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12987,
											"end": 13353,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 12987,
											"end": 13353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13129,
											"end": 13132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13150,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 13214,
											"end": 13216,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 13209,
											"end": 13212,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13150,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 13150,
											"end": 13217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13150,
											"end": 13217,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 13150,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13143,
											"end": 13217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13143,
											"end": 13217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13226,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 13315,
											"end": 13318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13226,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 13226,
											"end": 13319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13226,
											"end": 13319,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 13226,
											"end": 13319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13344,
											"end": 13346,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13339,
											"end": 13342,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13335,
											"end": 13347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13328,
											"end": 13347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13328,
											"end": 13347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12987,
											"end": 13353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12987,
											"end": 13353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12987,
											"end": 13353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12987,
											"end": 13353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13359,
											"end": 13778,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 13359,
											"end": 13778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13525,
											"end": 13529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13563,
											"end": 13565,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13552,
											"end": 13561,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13548,
											"end": 13566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13540,
											"end": 13566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13540,
											"end": 13566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13612,
											"end": 13621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13606,
											"end": 13610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13602,
											"end": 13622,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13598,
											"end": 13599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13587,
											"end": 13596,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13583,
											"end": 13600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13576,
											"end": 13623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13640,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 13766,
											"end": 13770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13640,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 13640,
											"end": 13771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13640,
											"end": 13771,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 13640,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13632,
											"end": 13771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13632,
											"end": 13771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13359,
											"end": 13778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13359,
											"end": 13778,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13359,
											"end": 13778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13359,
											"end": 13778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13784,
											"end": 13964,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 13784,
											"end": 13964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13832,
											"end": 13909,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13829,
											"end": 13830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13822,
											"end": 13910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13929,
											"end": 13933,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 13926,
											"end": 13927,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13919,
											"end": 13934,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13953,
											"end": 13957,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13950,
											"end": 13951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13943,
											"end": 13958,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 14161,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 13970,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14010,
											"end": 14013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14029,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 14047,
											"end": 14048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14029,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 14029,
											"end": 14049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14029,
											"end": 14049,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 14029,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14024,
											"end": 14049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14024,
											"end": 14049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14063,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 14081,
											"end": 14082,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14063,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 14063,
											"end": 14083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14063,
											"end": 14083,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 14063,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14058,
											"end": 14083,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14058,
											"end": 14083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14106,
											"end": 14107,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14103,
											"end": 14104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14099,
											"end": 14108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14092,
											"end": 14108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14092,
											"end": 14108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14127,
											"end": 14130,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14124,
											"end": 14125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14121,
											"end": 14131,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14118,
											"end": 14154,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14118,
											"end": 14154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 14118,
											"end": 14154,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 14134,
											"end": 14152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14118,
											"end": 14154,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 14118,
											"end": 14154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 14161,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 14161,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 14161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 14161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 14161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14167,
											"end": 14343,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 14167,
											"end": 14343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14307,
											"end": 14335,
											"name": "PUSH",
											"source": 7,
											"value": "546F6B656E205472616E7366657220696E20636F6F6C646F776E000000000000"
										},
										{
											"begin": 14303,
											"end": 14304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14295,
											"end": 14301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14291,
											"end": 14305,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14284,
											"end": 14336,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14167,
											"end": 14343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14167,
											"end": 14343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14349,
											"end": 14715,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 14349,
											"end": 14715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14491,
											"end": 14494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14512,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 14576,
											"end": 14578,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 14571,
											"end": 14574,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14512,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 14512,
											"end": 14579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14512,
											"end": 14579,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 14512,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14505,
											"end": 14579,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14505,
											"end": 14579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14588,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 14677,
											"end": 14680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14588,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 14588,
											"end": 14681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14588,
											"end": 14681,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 14588,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14706,
											"end": 14708,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14701,
											"end": 14704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14697,
											"end": 14709,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14690,
											"end": 14709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14690,
											"end": 14709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14349,
											"end": 14715,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14349,
											"end": 14715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14349,
											"end": 14715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14349,
											"end": 14715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14721,
											"end": 15140,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 14721,
											"end": 15140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14887,
											"end": 14891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14925,
											"end": 14927,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14914,
											"end": 14923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14910,
											"end": 14928,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14902,
											"end": 14928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14902,
											"end": 14928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14974,
											"end": 14983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14968,
											"end": 14972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14964,
											"end": 14984,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14960,
											"end": 14961,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14949,
											"end": 14958,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14945,
											"end": 14962,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14938,
											"end": 14985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15002,
											"end": 15133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 15128,
											"end": 15132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15002,
											"end": 15133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 15002,
											"end": 15133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15002,
											"end": 15133,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 15002,
											"end": 15133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14994,
											"end": 15133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14994,
											"end": 15133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14721,
											"end": 15140,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14721,
											"end": 15140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14721,
											"end": 15140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14721,
											"end": 15140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15146,
											"end": 15556,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 15146,
											"end": 15556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 15193,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15209,
											"end": 15229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 15227,
											"end": 15228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15209,
											"end": 15229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 15209,
											"end": 15229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15209,
											"end": 15229,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 15209,
											"end": 15229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15204,
											"end": 15229,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15204,
											"end": 15229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15243,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 15261,
											"end": 15262,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15243,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 15243,
											"end": 15263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15243,
											"end": 15263,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 15243,
											"end": 15263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15263,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15298,
											"end": 15299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15295,
											"end": 15296,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15291,
											"end": 15300,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15320,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 15338,
											"end": 15349,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15320,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 15320,
											"end": 15350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15320,
											"end": 15350,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 15320,
											"end": 15350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15309,
											"end": 15350,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15309,
											"end": 15350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15499,
											"end": 15500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15490,
											"end": 15497,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15486,
											"end": 15501,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 15483,
											"end": 15484,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15480,
											"end": 15502,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 15460,
											"end": 15461,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15453,
											"end": 15462,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15433,
											"end": 15516,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 15410,
											"end": 15549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 15410,
											"end": 15549,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 15529,
											"end": 15547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 15529,
											"end": 15547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15547,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 15529,
											"end": 15547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15410,
											"end": 15549,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 15410,
											"end": 15549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15194,
											"end": 15556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15146,
											"end": 15556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15146,
											"end": 15556,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15146,
											"end": 15556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15146,
											"end": 15556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15146,
											"end": 15556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15562,
											"end": 15742,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 15562,
											"end": 15742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15610,
											"end": 15687,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15607,
											"end": 15608,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15600,
											"end": 15688,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15707,
											"end": 15711,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 15704,
											"end": 15705,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15697,
											"end": 15712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15731,
											"end": 15735,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15728,
											"end": 15729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15721,
											"end": 15736,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15748,
											"end": 15933,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 15748,
											"end": 15933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15788,
											"end": 15789,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15805,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 15823,
											"end": 15824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15805,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 15805,
											"end": 15825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15805,
											"end": 15825,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 15805,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15800,
											"end": 15825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15800,
											"end": 15825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15839,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 15857,
											"end": 15858,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15839,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 15839,
											"end": 15859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15839,
											"end": 15859,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 15839,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15834,
											"end": 15859,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15834,
											"end": 15859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15878,
											"end": 15879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15883,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 15883,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 15883,
											"end": 15901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15883,
											"end": 15901,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 15883,
											"end": 15901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15925,
											"end": 15926,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15922,
											"end": 15923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15918,
											"end": 15927,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 15913,
											"end": 15927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15913,
											"end": 15927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15748,
											"end": 15933,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15748,
											"end": 15933,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15748,
											"end": 15933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15748,
											"end": 15933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15748,
											"end": 15933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16133,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 15939,
											"end": 16133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15979,
											"end": 15983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15999,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 16017,
											"end": 16018,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15999,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 15999,
											"end": 16019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15999,
											"end": 16019,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 15999,
											"end": 16019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15994,
											"end": 16019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15994,
											"end": 16019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16033,
											"end": 16053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 16051,
											"end": 16052,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16033,
											"end": 16053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 16033,
											"end": 16053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16033,
											"end": 16053,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 16033,
											"end": 16053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16028,
											"end": 16053,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16028,
											"end": 16053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16074,
											"end": 16075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16070,
											"end": 16079,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16062,
											"end": 16079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16062,
											"end": 16079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16101,
											"end": 16102,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16095,
											"end": 16099,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16092,
											"end": 16103,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16089,
											"end": 16126,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16089,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 16089,
											"end": 16126,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16106,
											"end": 16124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 16106,
											"end": 16124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 16106,
											"end": 16124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16106,
											"end": 16124,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 16106,
											"end": 16124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16089,
											"end": 16126,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 16089,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16133,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"ChaiToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"SlippageFees()": "cc7a736d",
							"addToBlacklist(address)": "44337ea1",
							"addToWhitelist(address)": "e43252d7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cooldownTime()": "b319c6b7",
							"decimals()": "313ce567",
							"disableTax()": "ced695a4",
							"disableWhiteListing()": "688188e8",
							"enableTax()": "53eb3bcf",
							"enableWhiteListing()": "2958ad7f",
							"getContractDetails()": "9dfc9117",
							"getMaxTxAmount()": "6d8b0527",
							"isBlacklisted(address)": "fe575a87",
							"isWhiteListingEnabled()": "1c0aecfa",
							"isWhitelisted(address)": "3af32abf",
							"maxTxAmount()": "8c0b5e22",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"removeFromBlacklist(address)": "537df3b6",
							"removeFromWhitelist(address)": "8ab1d681",
							"renounceOwnership()": "715018a6",
							"setCoolDownTime(uint256)": "6e16de11",
							"setMaxTxAmount(uint256)": "ec28438a",
							"setSlippageFees(uint256)": "49192418",
							"setTaxes(uint256)": "4ebc552d",
							"symbol()": "95d89b41",
							"taxAddress()": "b7bda68f",
							"taxFees()": "0ddc0976",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_taxAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SlippageFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableWhiteListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableWhiteListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWhiteListingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCoolDowntime\",\"type\":\"uint256\"}],\"name\":\"setCoolDownTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxTxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSlippageFees\",\"type\":\"uint256\"}],\"name\":\"setSlippageFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTaxFee\",\"type\":\"uint256\"}],\"name\":\"setTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ChaiToken.sol\":\"ChaiToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ChaiToken.sol\":{\"keccak256\":\"0x8fc0b01309189f711ee9a326c949ebc95f05853eeef7c352b125125f52397e21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://672bfca877b91e68c9633a236baec3d085964a7b9d601651d56ab30ab4b1768b\",\"dweb:/ipfs/QmbApgZoBEJ1CSGC98163Wkd8McdxhQPYjjy6gvJEpBwMw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 949,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_initialSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 952,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "maxTxAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 955,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "cooldownTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 958,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "taxFees",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 961,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "SlippageFees",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 965,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_blacklist",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 969,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_whitelist",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 973,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_lastTxTime",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 976,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_whiteListingEnabled",
								"offset": 0,
								"slot": "14",
								"type": "t_bool"
							},
							{
								"astId": 979,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "_TaxEnabled",
								"offset": 1,
								"slot": "14",
								"type": "t_bool"
							},
							{
								"astId": 981,
								"contract": "ChaiToken.sol:ChaiToken",
								"label": "taxAddress",
								"offset": 2,
								"slot": "14",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"ChaiToken.sol": {
				"ast": {
					"absolutePath": "ChaiToken.sol",
					"exportedSymbols": {
						"ChaiToken": [
							1363
						],
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "83:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1364,
							"sourceUnit": 800,
							"src": "111:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1364,
							"sourceUnit": 148,
							"src": "168:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"246:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "246:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "246:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"253:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "253:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "253:7:6"
								}
							],
							"canonicalName": "ChaiToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1363,
							"linearizedBaseContracts": [
								1363,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "ChaiToken",
							"nameLocation": "233:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 949,
									"mutability": "mutable",
									"name": "_initialSupply",
									"nameLocation": "284:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1363,
									"src": "268:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "268:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 948,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030303030303030",
											"id": 943,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "301:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000_by_1",
												"typeString": "int_const 100000000"
											},
											"value": "100000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 947,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 944,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "313:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 945,
													"name": "decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 363,
													"src": "317:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
														"typeString": "function () view returns (uint8)"
													}
												},
												"id": 946,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "317:10:6",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"src": "313:14:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "301:26:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8c0b5e22",
									"id": 952,
									"mutability": "mutable",
									"name": "maxTxAmount",
									"nameLocation": "371:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1363,
									"src": "356:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "356:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 951,
										"name": "_initialSupply",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "385:14:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b319c6b7",
									"id": 955,
									"mutability": "mutable",
									"name": "cooldownTime",
									"nameLocation": "421:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1363,
									"src": "406:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 953,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "406:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 954,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "436:9:6",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0ddc0976",
									"id": 958,
									"mutability": "mutable",
									"name": "taxFees",
									"nameLocation": "467:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1363,
									"src": "452:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "452:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 957,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "477:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc7a736d",
									"id": 961,
									"mutability": "mutable",
									"name": "SlippageFees",
									"nameLocation": "500:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1363,
									"src": "485:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 959,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "485:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 960,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "515:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 965,
									"mutability": "mutable",
									"name": "_blacklist",
									"nameLocation": "557:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1363,
									"src": "526:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 964,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 962,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "534:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "526:22:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 963,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "543:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 969,
									"mutability": "mutable",
									"name": "_whitelist",
									"nameLocation": "605:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1363,
									"src": "574:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 968,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 966,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "582:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "574:22:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 967,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "591:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 973,
									"mutability": "mutable",
									"name": "_lastTxTime",
									"nameLocation": "656:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1363,
									"src": "622:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 972,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 970,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "630:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "622:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 971,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "639:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 976,
									"mutability": "mutable",
									"name": "_whiteListingEnabled",
									"nameLocation": "694:20:6",
									"nodeType": "VariableDeclaration",
									"scope": 1363,
									"src": "681:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 974,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "681:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 975,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "717:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 979,
									"mutability": "mutable",
									"name": "_TaxEnabled",
									"nameLocation": "742:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1363,
									"src": "729:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 977,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "729:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 978,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "756:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "b7bda68f",
									"id": 981,
									"mutability": "mutable",
									"name": "taxAddress",
									"nameLocation": "785:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1363,
									"src": "770:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 980,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "770:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "932:175:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 996,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "949:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "_initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "963:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 995,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "943:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "943:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "943:35:6"
											},
											{
												"expression": {
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1000,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1033:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1002,
														"indexExpression": {
															"id": 1001,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "1044:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1033:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1060:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1033:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "1033:31:6"
											},
											{
												"expression": {
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1006,
														"name": "taxAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "1075:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1007,
														"name": "_taxAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "1088:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1075:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "1075:24:6"
											}
										]
									},
									"id": 1011,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "43686169546f6b656e",
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "875:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_273e9c76e05584776b193331618a50c06fddcc98ce3bbcfc82b5877d82340309",
														"typeString": "literal_string \"ChaiToken\""
													},
													"value": "ChaiToken"
												},
												{
													"hexValue": "43686169",
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "888:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_09f5ac937c56244ddfe3dbb9b1af8de641fff6577a32a1ed36d88d569c347548",
														"typeString": "literal_string \"Chai\""
													},
													"value": "Chai"
												}
											],
											"id": 990,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 987,
												"name": "ERC20",
												"nameLocations": [
													"869:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "869:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "869:26:6"
										},
										{
											"arguments": [
												{
													"id": 992,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 983,
													"src": "913:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 993,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 991,
												"name": "Ownable",
												"nameLocations": [
													"905:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "905:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "905:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "825:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "817:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "_taxAddress",
												"nameLocation": "847:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "839:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:43:6"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:0:6"
									},
									"scope": 1363,
									"src": "805:302:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										98
									],
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "1170:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1017,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1181:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ChaiToken_$1363_$",
																"typeString": "type(contract super ChaiToken)"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1187:17:6",
														"memberName": "renounceOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "1181:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1181:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "1181:25:6"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1015,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1014,
												"name": "onlyOwner",
												"nameLocations": [
													"1160:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1160:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1160:9:6"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1124:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1013,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1151:8:6"
									},
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1141:2:6"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1170:0:6"
									},
									"scope": 1363,
									"src": "1115:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "1287:83:6",
										"statements": [
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1030,
															"name": "_blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "1298:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1032,
														"indexExpression": {
															"id": 1031,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "1309:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1298:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1320:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1298:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "1298:26:6"
											},
											{
												"expression": {
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1036,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1335:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1038,
														"indexExpression": {
															"id": 1037,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "1346:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1335:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1357:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1335:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "1335:27:6"
											}
										]
									},
									"functionSelector": "44337ea1",
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1028,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1027,
												"name": "onlyOwner",
												"nameLocations": [
													"1272:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1272:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1272:9:6"
										}
									],
									"name": "addToBlacklist",
									"nameLocation": "1231:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1254:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1246:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:17:6"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1287:0:6"
									},
									"scope": 1363,
									"src": "1222:148:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "1446:46:6",
										"statements": [
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1050,
															"name": "_blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "1457:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1052,
														"indexExpression": {
															"id": 1051,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "1468:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1457:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1479:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1457:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "1457:27:6"
											}
										]
									},
									"functionSelector": "537df3b6",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1048,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1047,
												"name": "onlyOwner",
												"nameLocations": [
													"1431:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1431:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1431:9:6"
										}
									],
									"name": "removeFromBlacklist",
									"nameLocation": "1385:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1413:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1405:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1404:17:6"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:6"
									},
									"scope": 1363,
									"src": "1376:116:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "1573:45:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1064,
														"name": "_blacklist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "1591:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1066,
													"indexExpression": {
														"id": 1065,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "1602:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1591:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1063,
												"id": 1067,
												"nodeType": "Return",
												"src": "1584:26:6"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "1507:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1529:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "1521:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1520:17:6"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "1560:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1061,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1560:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1559:6:6"
									},
									"scope": 1363,
									"src": "1498:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "1680:46:6",
										"statements": [
											{
												"expression": {
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1074,
														"name": "_whiteListingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1691:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1714:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1691:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "1691:27:6"
											}
										]
									},
									"functionSelector": "2958ad7f",
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1072,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1071,
												"name": "onlyOwner",
												"nameLocations": [
													"1665:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1665:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1665:9:6"
										}
									],
									"name": "enableWhiteListing",
									"nameLocation": "1635:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1653:2:6"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1680:0:6"
									},
									"scope": 1363,
									"src": "1626:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "1789:47:6",
										"statements": [
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1084,
														"name": "_whiteListingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1800:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1823:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1800:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "1800:28:6"
											}
										]
									},
									"functionSelector": "688188e8",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1082,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1081,
												"name": "onlyOwner",
												"nameLocations": [
													"1774:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1774:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1774:9:6"
										}
									],
									"name": "disableWhiteListing",
									"nameLocation": "1743:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1762:2:6"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1789:0:6"
									},
									"scope": 1363,
									"src": "1734:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "1909:130:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1928:20:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1097,
																	"name": "_blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "1929:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1099,
																"indexExpression": {
																	"id": 1098,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "1940:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1929:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b6c697374656420616464726573732063616e6e6f742062652077686974656c6973746564",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1950:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb",
																"typeString": "literal_string \"Blacklisted address cannot be whitelisted\""
															},
															"value": "Blacklisted address cannot be whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d3903eb391350aa5666bb11c3c65e4a1062773fcae0480e0c1f8097b9c6b5eb",
																"typeString": "literal_string \"Blacklisted address cannot be whitelisted\""
															}
														],
														"id": 1096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1920:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1920:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "1920:74:6"
											},
											{
												"expression": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1104,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "2005:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1106,
														"indexExpression": {
															"id": 1105,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "2016:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2005:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2027:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2005:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "2005:26:6"
											}
										]
									},
									"functionSelector": "e43252d7",
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1094,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1093,
												"name": "onlyOwner",
												"nameLocations": [
													"1894:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1894:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1894:9:6"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "1853:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1876:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1868:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:17:6"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1909:0:6"
									},
									"scope": 1363,
									"src": "1844:195:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "2115:46:6",
										"statements": [
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1118,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "2126:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1120,
														"indexExpression": {
															"id": 1119,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "2137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2126:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2148:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2126:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "2126:27:6"
											}
										]
									},
									"functionSelector": "8ab1d681",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1116,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1115,
												"name": "onlyOwner",
												"nameLocations": [
													"2100:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2100:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2100:9:6"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "2054:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2082:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2074:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2073:17:6"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2115:0:6"
									},
									"scope": 1363,
									"src": "2045:116:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "2242:45:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1132,
														"name": "_whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "2260:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1134,
													"indexExpression": {
														"id": 1133,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "2271:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2260:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1131,
												"id": 1135,
												"nodeType": "Return",
												"src": "2253:26:6"
											}
										]
									},
									"functionSelector": "3af32abf",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelisted",
									"nameLocation": "2176:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2198:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "2190:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:17:6"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "2229:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2229:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2228:6:6"
									},
									"scope": 1363,
									"src": "2167:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "2361:46:6",
										"statements": [
											{
												"expression": {
													"id": 1142,
													"name": "_whiteListingEnabled",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 976,
													"src": "2379:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1143,
												"nodeType": "Return",
												"src": "2372:27:6"
											}
										]
									},
									"functionSelector": "1c0aecfa",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhiteListingEnabled",
									"nameLocation": "2304:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2325:2:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2350:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2350:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:6:6"
									},
									"scope": 1363,
									"src": "2295:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "2487:48:6",
										"statements": [
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1152,
														"name": "maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "2498:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1153,
														"name": "newMaxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2512:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2498:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "2498:28:6"
											}
										]
									},
									"functionSelector": "ec28438a",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1149,
												"name": "onlyOwner",
												"nameLocations": [
													"2472:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2472:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2472:9:6"
										}
									],
									"name": "setMaxTxAmount",
									"nameLocation": "2424:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "newMaxTxAmount",
												"nameLocation": "2447:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "2439:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2438:24:6"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:0:6"
									},
									"scope": 1363,
									"src": "2415:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "2605:37:6",
										"statements": [
											{
												"expression": {
													"id": 1162,
													"name": "maxTxAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 952,
													"src": "2623:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1161,
												"id": 1163,
												"nodeType": "Return",
												"src": "2616:18:6"
											}
										]
									},
									"functionSelector": "6d8b0527",
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxTxAmount",
									"nameLocation": "2552:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2566:2:6"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2591:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2590:9:6"
									},
									"scope": 1363,
									"src": "2543:99:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "2724:49:6",
										"statements": [
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1172,
														"name": "cooldownTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "2735:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1173,
														"name": "newCoolDowntime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "2750:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2735:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "2735:30:6"
											}
										]
									},
									"functionSelector": "6e16de11",
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1170,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1169,
												"name": "onlyOwner",
												"nameLocations": [
													"2709:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2709:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2709:9:6"
										}
									],
									"name": "setCoolDownTime",
									"nameLocation": "2659:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "newCoolDowntime",
												"nameLocation": "2683:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2675:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:25:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:0:6"
									},
									"scope": 1363,
									"src": "2650:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "2874:78:6",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1188,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2893:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2893:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "maxTxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "2902:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1191,
															"name": "cooldownTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "2915:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1192,
															"name": "_initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "2929:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1193,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2892:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1187,
												"id": 1194,
												"nodeType": "Return",
												"src": "2885:59:6"
											}
										]
									},
									"functionSelector": "9dfc9117",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractDetails",
									"nameLocation": "2790:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2808:2:6"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2834:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2843:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2843:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2852:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2852:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2860:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2833:35:6"
									},
									"scope": 1363,
									"src": "2781:171:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "3021:107:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1204,
																"name": "newTaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "3040:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3053:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "3040:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617820666565206d757374206265206c657373207468616e20313025",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3058:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd",
																"typeString": "literal_string \"Tax fee must be less than 10%\""
															},
															"value": "Tax fee must be less than 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_92d111b255495a825e88efd5efa3bf3066d62184ac88b2c2c263223a514173dd",
																"typeString": "literal_string \"Tax fee must be less than 10%\""
															}
														],
														"id": 1203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3032:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3032:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "3032:58:6"
											},
											{
												"expression": {
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1210,
														"name": "taxFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "3101:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1211,
														"name": "newTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "3111:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3101:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "3101:19:6"
											}
										]
									},
									"functionSelector": "4ebc552d",
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1200,
												"name": "onlyOwner",
												"nameLocations": [
													"3006:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3006:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3006:9:6"
										}
									],
									"name": "setTaxes",
									"nameLocation": "2969:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "newTaxFee",
												"nameLocation": "2986:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2978:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2978:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2977:19:6"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3021:0:6"
									},
									"scope": 1363,
									"src": "2960:168:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "3210:128:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1223,
																"name": "newSlippageFees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "3229:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "35",
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3248:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"src": "3229:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c6970706167652066656573206d757374206265206c657373207468616e203525",
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59",
																"typeString": "literal_string \"Slippage fees must be less than 5%\""
															},
															"value": "Slippage fees must be less than 5%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_afb0112c06ef39fb2e37141e3802f2167f087b2ff2eb326ba371466ec6a25e59",
																"typeString": "literal_string \"Slippage fees must be less than 5%\""
															}
														],
														"id": 1222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3221:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3221:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "3221:68:6"
											},
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1229,
														"name": "SlippageFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3300:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1230,
														"name": "newSlippageFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "3315:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3300:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "3300:30:6"
											}
										]
									},
									"functionSelector": "49192418",
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1220,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1219,
												"name": "onlyOwner",
												"nameLocations": [
													"3195:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3195:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3195:9:6"
										}
									],
									"name": "setSlippageFees",
									"nameLocation": "3145:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "newSlippageFees",
												"nameLocation": "3169:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "3161:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3161:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3160:25:6"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3210:0:6"
									},
									"scope": 1363,
									"src": "3136:202:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "3391:37:6",
										"statements": [
											{
												"expression": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1239,
														"name": "_TaxEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "3402:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3416:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3402:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "3402:18:6"
											}
										]
									},
									"functionSelector": "53eb3bcf",
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1237,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1236,
												"name": "onlyOwner",
												"nameLocations": [
													"3376:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3376:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3376:9:6"
										}
									],
									"name": "enableTax",
									"nameLocation": "3355:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3364:2:6"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3391:0:6"
									},
									"scope": 1363,
									"src": "3346:82:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "3482:38:6",
										"statements": [
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1249,
														"name": "_TaxEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "3493:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3507:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3493:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "3493:19:6"
											}
										]
									},
									"functionSelector": "ced695a4",
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1247,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1246,
												"name": "onlyOwner",
												"nameLocations": [
													"3467:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3467:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3467:9:6"
										}
									],
									"name": "disableTax",
									"nameLocation": "3445:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3455:2:6"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3482:0:6"
									},
									"scope": 1363,
									"src": "3436:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "3610:895:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3629:17:6",
																"subExpression": {
																	"baseExpression": {
																		"id": 1265,
																		"name": "_blacklist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "3630:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1267,
																	"indexExpression": {
																		"id": 1266,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "3641:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3630:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3650:15:6",
																"subExpression": {
																	"baseExpression": {
																		"id": 1269,
																		"name": "_blacklist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "3651:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1271,
																	"indexExpression": {
																		"id": 1270,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "3662:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3651:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3629:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b6c697374656420416464726573736573",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3668:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7",
																"typeString": "literal_string \"Blacklisted Addresses\""
															},
															"value": "Blacklisted Addresses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d08b83558e6d394bdd521c8db9f6c4bd71a65d08dad734c4c2f380530c122e7",
																"typeString": "literal_string \"Blacklisted Addresses\""
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3621:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3621:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "3621:71:6"
											},
											{
												"condition": {
													"id": 1277,
													"name": "_whiteListingEnabled",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 976,
													"src": "3706:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "3703:143:6",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "3737:109:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1279,
																				"name": "_whitelist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "3760:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1281,
																			"indexExpression": {
																				"id": 1280,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1256,
																				"src": "3771:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3760:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1282,
																				"name": "_whitelist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "3780:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1284,
																			"indexExpression": {
																				"id": 1283,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1258,
																				"src": "3791:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3780:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3760:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "426f746820616464726573736573206d7573742062652077686974656c6973746564",
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3797:36:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
																			"typeString": "literal_string \"Both addresses must be whitelisted\""
																		},
																		"value": "Both addresses must be whitelisted"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
																			"typeString": "literal_string \"Both addresses must be whitelisted\""
																		}
																	],
																	"id": 1278,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3752:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3752:82:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1288,
															"nodeType": "ExpressionStatement",
															"src": "3752:82:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1292,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "3864:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1293,
																"name": "maxTxAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "3873:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3864:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e205472616e73666572204c696d6974204578636565646564",
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3887:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693",
																"typeString": "literal_string \"Token Transfer Limit Exceeded\""
															},
															"value": "Token Transfer Limit Exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b9538cd382c5a90d1af0b9185e79cdd378763f1689abc4b0e6dff641c77f693",
																"typeString": "literal_string \"Token Transfer Limit Exceeded\""
															}
														],
														"id": 1291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3856:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3856:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "3856:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1299,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3938:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3944:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3938:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1301,
																		"name": "_lastTxTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "3957:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1303,
																	"indexExpression": {
																		"id": 1302,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "3969:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3957:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1304,
																	"name": "cooldownTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "3975:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3957:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3938:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e205472616e7366657220696e20636f6f6c646f776e",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3990:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9",
																"typeString": "literal_string \"Token Transfer in cooldown\""
															},
															"value": "Token Transfer in cooldown"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fefb48a0dedcb5861d1813f60b6b787b005ddec38a2691151b9faaf1254d78d9",
																"typeString": "literal_string \"Token Transfer in cooldown\""
															}
														],
														"id": 1298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3930:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3930:89:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "3930:89:6"
											},
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "4048:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1361,
														"src": "4040:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1310,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4040:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1313,
												"initialValue": {
													"id": 1312,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1260,
													"src": "4065:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4040:30:6"
											},
											{
												"condition": {
													"id": 1314,
													"name": "_TaxEnabled",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 979,
													"src": "4084:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1345,
												"nodeType": "IfStatement",
												"src": "4081:273:6",
												"trueBody": {
													"id": 1344,
													"nodeType": "Block",
													"src": "4106:248:6",
													"statements": [
														{
															"assignments": [
																1316
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1316,
																	"mutability": "mutable",
																	"name": "totalFees",
																	"nameLocation": "4129:9:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1344,
																	"src": "4121:17:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1315,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4121:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1320,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1317,
																	"name": "taxFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "4141:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1318,
																	"name": "SlippageFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "4151:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4141:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4121:42:6"
														},
														{
															"assignments": [
																1322
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1322,
																	"mutability": "mutable",
																	"name": "feeAmount",
																	"nameLocation": "4200:9:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1344,
																	"src": "4192:17:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1321,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4192:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1329,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1323,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1260,
																				"src": "4213:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1324,
																				"name": "totalFees",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1316,
																				"src": "4221:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4213:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1326,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4212:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4232:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "4212:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4192:43:6"
														},
														{
															"expression": {
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1330,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "4250:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1331,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1260,
																		"src": "4267:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1332,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1322,
																		"src": "4275:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4267:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4250:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1335,
															"nodeType": "ExpressionStatement",
															"src": "4250:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1339,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "4313:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1340,
																		"name": "taxAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "4319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1341,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1322,
																		"src": "4332:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1336,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "4299:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_ChaiToken_$1363_$",
																			"typeString": "type(contract super ChaiToken)"
																		}
																	},
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4305:7:6",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 606,
																	"src": "4299:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4299:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1343,
															"nodeType": "ExpressionStatement",
															"src": "4299:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1346,
															"name": "_lastTxTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "4374:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1348,
														"indexExpression": {
															"id": 1347,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "4386:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4374:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1349,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4394:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4400:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4394:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4374:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "4374:35:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1356,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "4434:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1357,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "4440:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1358,
															"name": "transferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4444:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1353,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4420:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ChaiToken_$1363_$",
																"typeString": "type(contract super ChaiToken)"
															}
														},
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4426:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "4420:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "4420:39:6"
											}
										]
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "3537:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1262,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3595:8:6"
									},
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3553:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "3545:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3567:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "3559:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3579:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "3571:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3544:41:6"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3610:0:6"
									},
									"scope": 1363,
									"src": "3528:977:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1364,
							"src": "224:4286:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "83:4427:6"
				},
				"id": 6
			}
		}
	}
}